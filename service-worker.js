(()=>{"use strict";var e={923:()=>{try{self["workbox:core:6.5.4"]&&_()}catch(e){}},190:()=>{try{self["workbox:expiration:6.5.4"]&&_()}catch(e){}},437:()=>{try{self["workbox:precaching:6.5.4"]&&_()}catch(e){}},185:()=>{try{self["workbox:routing:6.5.4"]&&_()}catch(e){}},833:()=>{try{self["workbox:strategies:6.5.4"]&&_()}catch(e){}}},t={};function s(n){var a=t[n];if(void 0!==a)return a.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,s),r.exports}(()=>{s(923);const e=function(e){let t=e;for(var s=arguments.length,n=new Array(s>1?s-1:0),a=1;a<s;a++)n[a-1]=arguments[a];return n.length>0&&(t+=" :: ".concat(JSON.stringify(n))),t};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const n=new Set;const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!==typeof registration?registration.scope:""},r=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||r(a.precache),o=e=>e||r(a.runtime);function c(e,t){const s=new URL(e);for(const n of t)s.searchParams.delete(n);return s.href}let h;function l(e){e.then((()=>{}))}class u{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const d=e=>new URL(String(e),location.href).href.replace(new RegExp("^".concat(location.origin)),"");function f(e,t){const s=t();return e.waitUntil(s),s}async function p(e,s){let n=null;if(e.url){n=new URL(e.url).origin}if(n!==self.location.origin)throw new t("cross-origin-copy-response",{origin:n});const a=e.clone(),r={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},i=s?s(r):r,o=function(){if(void 0===h){const t=new Response("");if("body"in t)try{new Response(t.body),h=!0}catch(e){h=!1}h=!1}return h}()?a.body:await a.blob();return new Response(o,i)}const g=(e,t)=>t.some((t=>e instanceof t));let w,m;const y=new WeakMap,_=new WeakMap,v=new WeakMap,b=new WeakMap,R=new WeakMap;let x={get(e,t,s){if(e instanceof IDBTransaction){if("done"===t)return _.get(e);if("objectStoreNames"===t)return e.objectStoreNames||v.get(e);if("store"===t)return s.objectStoreNames[1]?void 0:s.objectStore(s.objectStoreNames[0])}return E(e[t])},set:(e,t,s)=>(e[t]=s,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function C(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(m||(m=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(){for(var t=arguments.length,s=new Array(t),n=0;n<t;n++)s[n]=arguments[n];return e.apply(q(this),s),E(y.get(this))}:function(){for(var t=arguments.length,s=new Array(t),n=0;n<t;n++)s[n]=arguments[n];return E(e.apply(q(this),s))}:function(t){for(var s=arguments.length,n=new Array(s>1?s-1:0),a=1;a<s;a++)n[a-1]=arguments[a];const r=e.call(q(this),t,...n);return v.set(r,t.sort?t.sort():[t]),E(r)}}function L(e){return"function"===typeof e?C(e):(e instanceof IDBTransaction&&function(e){if(_.has(e))return;const t=new Promise(((t,s)=>{const n=()=>{e.removeEventListener("complete",a),e.removeEventListener("error",r),e.removeEventListener("abort",r)},a=()=>{t(),n()},r=()=>{s(e.error||new DOMException("AbortError","AbortError")),n()};e.addEventListener("complete",a),e.addEventListener("error",r),e.addEventListener("abort",r)}));_.set(e,t)}(e),g(e,w||(w=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(e,x):e)}function E(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,s)=>{const n=()=>{e.removeEventListener("success",a),e.removeEventListener("error",r)},a=()=>{t(E(e.result)),n()},r=()=>{s(e.error),n()};e.addEventListener("success",a),e.addEventListener("error",r)}));return t.then((t=>{t instanceof IDBCursor&&y.set(t,e)})).catch((()=>{})),R.set(t,e),t}(e);if(b.has(e))return b.get(e);const t=L(e);return t!==e&&(b.set(e,t),R.set(t,e)),t}const q=e=>R.get(e);const D=["get","getKey","getAll","getAllKeys","count"],U=["put","add","delete","clear"],T=new Map;function k(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!==typeof t)return;if(T.get(t))return T.get(t);const s=t.replace(/FromIndex$/,""),n=t!==s,a=U.includes(s);if(!(s in(n?IDBIndex:IDBObjectStore).prototype)||!a&&!D.includes(s))return;const r=async function(e){const t=this.transaction(e,a?"readwrite":"readonly");let r=t.store;for(var i=arguments.length,o=new Array(i>1?i-1:0),c=1;c<i;c++)o[c-1]=arguments[c];return n&&(r=r.index(o.shift())),(await Promise.all([r[s](...o),a&&t.done]))[0]};return T.set(t,r),r}x=(e=>({...e,get:(t,s,n)=>k(t,s)||e.get(t,s,n),has:(t,s)=>!!k(t,s)||e.has(t,s)}))(x);s(190);const N="cache-entries",I=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class K{constructor(e){this._db=null,this._cacheName=e}_upgradeDb(e){const t=e.createObjectStore(N,{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1})}_upgradeDbAndDeleteOldDbs(e){this._upgradeDb(e),this._cacheName&&function(e){let{blocked:t}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const s=indexedDB.deleteDatabase(e);t&&s.addEventListener("blocked",(e=>t(e.oldVersion,e))),E(s).then((()=>{}))}(this._cacheName)}async setTimestamp(e,t){const s={url:e=I(e),timestamp:t,cacheName:this._cacheName,id:this._getId(e)},n=(await this.getDb()).transaction(N,"readwrite",{durability:"relaxed"});await n.store.put(s),await n.done}async getTimestamp(e){const t=await this.getDb(),s=await t.get(N,this._getId(e));return null===s||void 0===s?void 0:s.timestamp}async expireEntries(e,t){const s=await this.getDb();let n=await s.transaction(N).store.index("timestamp").openCursor(null,"prev");const a=[];let r=0;for(;n;){const s=n.value;s.cacheName===this._cacheName&&(e&&s.timestamp<e||t&&r>=t?a.push(n.value):r++),n=await n.continue()}const i=[];for(const o of a)await s.delete(N,o.id),i.push(o.url);return i}_getId(e){return this._cacheName+"|"+I(e)}async getDb(){return this._db||(this._db=await function(e,t){let{blocked:s,upgrade:n,blocking:a,terminated:r}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const i=indexedDB.open(e,t),o=E(i);return n&&i.addEventListener("upgradeneeded",(e=>{n(E(i.result),e.oldVersion,e.newVersion,E(i.transaction),e)})),s&&i.addEventListener("blocked",(e=>s(e.oldVersion,e.newVersion,e))),o.then((e=>{r&&e.addEventListener("close",(()=>r())),a&&e.addEventListener("versionchange",(e=>a(e.oldVersion,e.newVersion,e)))})).catch((()=>{})),o}("workbox-expiration",1,{upgrade:this._upgradeDbAndDeleteOldDbs.bind(this)})),this._db}}class M{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this._isRunning=!1,this._rerunRequested=!1,this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._matchOptions=t.matchOptions,this._cacheName=e,this._timestampModel=new K(e)}async expireEntries(){if(this._isRunning)return void(this._rerunRequested=!0);this._isRunning=!0;const e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),s=await self.caches.open(this._cacheName);for(const n of t)await s.delete(n,this._matchOptions);this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,l(this.expireEntries()))}async updateTimestamp(e){await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(this._maxAgeSeconds){const t=await this._timestampModel.getTimestamp(e),s=Date.now()-1e3*this._maxAgeSeconds;return void 0===t||t<s}return!1}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}s(437);function A(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"===typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const a=new URL(n,location.href),r=new URL(n,location.href);return a.searchParams.set("__WB_REVISION__",s),{cacheKey:a.href,url:r.href}}class P{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async e=>{let{request:t,state:s}=e;s&&(s.originalRequest=t)},this.cachedResponseWillBeUsed=async e=>{let{event:t,state:s,cachedResponse:n}=e;if("install"===t.type&&s&&s.originalRequest&&s.originalRequest instanceof Request){const e=s.originalRequest.url;n?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return n}}}class S{constructor(e){let{precacheController:t}=e;this.cacheKeyWillBeUsed=async e=>{let{request:t,params:s}=e;const n=(null===s||void 0===s?void 0:s.cacheKey)||this._precacheController.getCacheKeyForURL(t.url);return n?new Request(n,{headers:t.headers}):t},this._precacheController=t}}s(833);function O(e){return"string"===typeof e?new Request(e):e}class W{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new u,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const s of this._plugins)this._pluginStateMap.set(s,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let n=O(e);if("navigate"===n.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const a=this.hasCallback("fetchDidFail")?n.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))n=await e({request:n.clone(),event:s})}catch(i){if(i instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:i.message})}const r=n.clone();try{let e;e=await fetch(n,"navigate"===n.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:r,response:e});return e}catch(o){throw a&&await this.runCallbacks("fetchDidFail",{error:o,event:s,originalRequest:a.clone(),request:r.clone()}),o}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=O(e);let s;const{cacheName:n,matchOptions:a}=this._strategy,r=await this.getCacheKey(t,"read"),i=Object.assign(Object.assign({},a),{cacheName:n});s=await caches.match(r,i);for(const o of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await o({cacheName:n,matchOptions:a,cachedResponse:s,request:r,event:this.event})||void 0;return s}async cachePut(e,s){const a=O(e);var r;await(r=0,new Promise((e=>setTimeout(e,r))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:d(i.url)});const o=await this._ensureResponseSafeToCache(s);if(!o)return!1;const{cacheName:h,matchOptions:l}=this._strategy,u=await self.caches.open(h),f=this.hasCallback("cacheDidUpdate"),p=f?await async function(e,t,s,n){const a=c(t.url,s);if(t.url===a)return e.match(t,n);const r=Object.assign(Object.assign({},n),{ignoreSearch:!0}),i=await e.keys(t,r);for(const o of i)if(a===c(o.url,s))return e.match(o,n)}(u,i.clone(),["__WB_REVISION__"],l):null;try{await u.put(i,f?o.clone():o)}catch(g){if(g instanceof Error)throw"QuotaExceededError"===g.name&&await async function(){for(const e of n)await e()}(),g}for(const t of this.iterateCallbacks("cacheDidUpdate"))await t({cacheName:h,oldResponse:p,newResponse:o.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s="".concat(e.url," | ").concat(t);if(!this._cacheKeys[s]){let n=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))n=O(await e({mode:t,request:n,event:this.event,params:this.params}));this._cacheKeys[s]=n}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"===typeof t[e]){const s=this._pluginStateMap.get(t),n=n=>{const a=Object.assign(Object.assign({},n),{state:s});return t[e](a)};yield n}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const n of this.iterateCallbacks("cacheWillUpdate"))if(t=await n({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class B{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.cacheName=o(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"===typeof e.request?new Request(e.request):e.request,n="params"in e?e.params:void 0,a=new W(this,{event:t,request:s,params:n}),r=this._getResponse(a,s,t);return[r,this._awaitComplete(r,a,s,t)]}async _getResponse(e,s,n){let a;await e.runCallbacks("handlerWillStart",{event:n,request:s});try{if(a=await this._handle(s,e),!a||"error"===a.type)throw new t("no-response",{url:s.url})}catch(r){if(r instanceof Error)for(const t of e.iterateCallbacks("handlerDidError"))if(a=await t({error:r,event:n,request:s}),a)break;if(!a)throw r}for(const t of e.iterateCallbacks("handlerWillRespond"))a=await t({event:n,request:s,response:a});return a}async _awaitComplete(e,t,s,n){let a,r;try{a=await e}catch(r){}try{await t.runCallbacks("handlerDidRespond",{event:n,request:s,response:a}),await t.doneWaiting()}catch(i){i instanceof Error&&(r=i)}if(await t.runCallbacks("handlerDidComplete",{event:n,request:s,response:a,error:r}),t.destroy(),r)throw r}}class j extends B{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(j.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let n;const a=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=a.integrity,r=e.integrity,i=!r||r===t;if(n=await s.fetch(new Request(e,{integrity:"no-cors"!==e.mode?r||t:void 0})),t&&i&&"no-cors"!==e.mode){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,n.clone());0}}return n}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const n=await s.fetch(e);if(!await s.cachePut(e,n.clone()))throw new t("bad-precaching-response",{url:e.url,status:n.status});return n}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,n]of this.plugins.entries())n!==j.copyRedirectedCacheableResponsesPlugin&&(n===j.defaultPrecacheCacheabilityPlugin&&(e=s),n.cacheWillUpdate&&t++);0===t?this.plugins.push(j.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}j.defaultPrecacheCacheabilityPlugin={async cacheWillUpdate(e){let{response:t}=e;return!t||t.status>=400?null:t}},j.copyRedirectedCacheableResponsesPlugin={async cacheWillUpdate(e){let{response:t}=e;return t.redirected?await p(t):t}};class F{constructor(){let{cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new j({cacheName:i(e),plugins:[...t,new S({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const n of e){"string"===typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:e,url:a}=A(n),r="string"!==typeof n&&n.revision?"reload":"default";if(this._urlsToCacheKeys.has(a)&&this._urlsToCacheKeys.get(a)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(a),secondEntry:e});if("string"!==typeof n&&n.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==n.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:a});this._cacheKeysToIntegrities.set(e,n.integrity)}if(this._urlsToCacheKeys.set(a,e),this._urlsToCacheModes.set(a,r),s.length>0){const e="Workbox is precaching URLs without revision "+"info: ".concat(s.join(", "),"\nThis is generally NOT safe. ")+"Learn more at https://bit.ly/wb-precache";console.warn(e)}}}install(e){return f(e,(async()=>{const t=new P;this.strategy.plugins.push(t);for(const[a,r]of this._urlsToCacheKeys){const t=this._cacheKeysToIntegrities.get(r),s=this._urlsToCacheModes.get(a),n=new Request(a,{integrity:t,cache:s,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:r},request:n,event:e}))}const{updatedURLs:s,notUpdatedURLs:n}=t;return{updatedURLs:s,notUpdatedURLs:n}}))}activate(e){return f(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),n=[];for(const a of t)s.has(a.url)||(await e.delete(a),n.push(a.url));return{deletedURLs:n}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}let H;const V=()=>(H||(H=new F),H);s(185);const G=e=>e&&"object"===typeof e?e:{handle:e};class ${constructor(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"GET";this.handler=G(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=G(e)}}class Q extends ${constructor(e,t,s){super((t=>{let{url:s}=t;const n=e.exec(s.href);if(n&&(s.origin===location.origin||0===n.index))return n.slice(1)}),t,s)}}class z{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data;0;const s=Promise.all(t.urlsToCache.map((t=>{"string"===typeof t&&(t=[t]);const s=new Request(...t);return this.handleRequest({request:s,event:e})})));e.waitUntil(s),e.ports&&e.ports[0]&&s.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest(e){let{request:t,event:s}=e;const n=new URL(t.url,location.href);if(!n.protocol.startsWith("http"))return void 0;const a=n.origin===location.origin,{params:r,route:i}=this.findMatchingRoute({event:s,request:t,sameOrigin:a,url:n});let o=i&&i.handler;const c=t.method;if(!o&&this._defaultHandlerMap.has(c)&&(o=this._defaultHandlerMap.get(c)),!o)return void 0;let h;try{h=o.handle({url:n,request:t,event:s,params:r})}catch(u){h=Promise.reject(u)}const l=i&&i.catchHandler;return h instanceof Promise&&(this._catchHandler||l)&&(h=h.catch((async e=>{if(l){0;try{return await l.handle({url:n,request:t,event:s,params:r})}catch(a){a instanceof Error&&(e=a)}}if(this._catchHandler)return this._catchHandler.handle({url:n,request:t,event:s});throw e}))),h}findMatchingRoute(e){let{url:t,sameOrigin:s,request:n,event:a}=e;const r=this._routes.get(n.method)||[];for(const i of r){let e;const r=i.match({url:t,sameOrigin:s,request:n,event:a});if(r)return e=r,(Array.isArray(e)&&0===e.length||r.constructor===Object&&0===Object.keys(r).length||"boolean"===typeof r)&&(e=void 0),{route:i,params:e}}return{}}setDefaultHandler(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"GET";this._defaultHandlerMap.set(t,G(e))}setCatchHandler(e){this._catchHandler=G(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this._routes.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this._routes.get(e.method).splice(s,1)}}let J;const X=()=>(J||(J=new z,J.addFetchListener(),J.addCacheListener()),J);function Y(e,s,n){let a;if("string"===typeof e){const t=new URL(e,location.href);0;a=new $((e=>{let{url:s}=e;return s.href===t.href}),s,n)}else if(e instanceof RegExp)a=new Q(e,s,n);else if("function"===typeof e)a=new $(e,s,n);else{if(!(e instanceof $))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});a=e}return X().registerRoute(a),a}class Z extends ${constructor(e,t){super((s=>{let{request:n}=s;const a=e.getURLsToCacheKeys();for(const r of function(e){let{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:n=!0,urlManipulation:a}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return function*(){const r=new URL(e,location.href);r.hash="",yield r.href;const i=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];for(const s of[...e.searchParams.keys()])t.some((e=>e.test(s)))&&e.searchParams.delete(s);return e}(r,t);if(yield i.href,s&&i.pathname.endsWith("/")){const e=new URL(i.href);e.pathname+=s,yield e.href}if(n){const e=new URL(i.href);e.pathname+=".html",yield e.href}if(a){const e=a({url:r});for(const t of e)yield t.href}}()}(n.url,t)){const t=a.get(r);if(t){return{cacheKey:t,integrity:e.getIntegrityForCacheKey(t)}}}}),e.strategy)}}const ee={cacheWillUpdate:async e=>{let{response:t}=e;return 200===t.status||0===t.status?t:null}};var te;self.addEventListener("activate",(()=>self.clients.claim())),function(e){V().precache(e)}([{'revision':'764ffbe8cababef9095b2aad14488174','url':'/countryquiz/index.html'},{'revision':null,'url':'/countryquiz/static/css/main.00551ccd.css'},{'revision':null,'url':'/countryquiz/static/js/787.e70eccd5.chunk.js'},{'revision':'918bf622d38d889857a88624a50c0714','url':'/countryquiz/static/media/abw.95895095eaef7d2479b550fbfdf211b0.svg'},{'revision':'4b1dfa5ff035dd2e6f4a4042c42f6d6a','url':'/countryquiz/static/media/afg.37df14c16091a2226210cdc7fee6d7c9.svg'},{'revision':'69defec96a43c95abdd5b2eaae1f6b49','url':'/countryquiz/static/media/ago.e593faf75b267f3263f7483a4c9655d4.svg'},{'revision':'bc5f6c0b9eb6ff72ac3dca4ced7c1efa','url':'/countryquiz/static/media/aia.d5c1ff009e275fbfe6e06ff4dc67ab6d.svg'},{'revision':'81199bd7ac64c5a516fee813a39860e2','url':'/countryquiz/static/media/ala.964315267a0966939cb9ec5c5980b391.svg'},{'revision':'1c03d51799a41bb8e40283747fb3c6bf','url':'/countryquiz/static/media/alb.1a55d1d9842993cd8a67516b6e868aa7.svg'},{'revision':'e255b6c01c3bccd9bdd27c6bc016a9aa','url':'/countryquiz/static/media/and.6ec1b3878cc38ea642b14da13780ca45.svg'},{'revision':'2c26f5b521a22adc6af36587312172cd','url':'/countryquiz/static/media/are.295593312483209471ea9afe8393f424.svg'},{'revision':'003d92a0ac0321ef50cb9160bf9a2b64','url':'/countryquiz/static/media/arg.64941006cd3c5189ad2fc7f063797d37.svg'},{'revision':'e82c1c0276cea8354bea73c45943e6cd','url':'/countryquiz/static/media/arm.192f8e93f7c7132cb9e80174bd02f826.svg'},{'revision':'4b41e5c820a7f27c51807426868827c8','url':'/countryquiz/static/media/asm.6d5008796d34c4909dd790902d5a71e0.svg'},{'revision':'129c609f832a1df9cfec7a33a00c4599','url':'/countryquiz/static/media/ata.8fee1cd9b6fc829e468c116ae42dc91c.svg'},{'revision':'263a68a80e72fd7e07b1e479e12cfc91','url':'/countryquiz/static/media/atf.a0a1b2090fa60aadb0f36f55fb45526d.svg'},{'revision':'a850b1e69b3170feed3c6adee5701c2c','url':'/countryquiz/static/media/atg.352cc192babdc9023f0ed6409f5938f5.svg'},{'revision':'421400645e7f23004a21fba8a1ecf337','url':'/countryquiz/static/media/aus.9a73131b47874f4dd92d8e5f277a14d4.svg'},{'revision':'ff5587f277f9e52e76c57c888822100f','url':'/countryquiz/static/media/aut.d456e38d192433daedf28782d1db84e0.svg'},{'revision':'80a85d8ade41328cba4bf91c6e3c23ce','url':'/countryquiz/static/media/aze.8870b3203ba963f8d53e6b20b97b2e10.svg'},{'revision':'0e43990d19dc132d77e026f99b36470c','url':'/countryquiz/static/media/bdi.8d61dec74b72bfc60443a75f17997bcc.svg'},{'revision':'bcbbbcb89e89e0c21ca434fda4ebe9f8','url':'/countryquiz/static/media/bel.2ae194866b19d6148083b3f9f63e4b6c.svg'},{'revision':'2272580aacc9e25ed6c911e695fc7dcf','url':'/countryquiz/static/media/ben.d55880ef9d79b98d121a7c62603653ee.svg'},{'revision':'e1ab0bd1d65c3a591be3dc9b19a0de8e','url':'/countryquiz/static/media/bes.241c0eb0e05ad21d0e356024516a278f.svg'},{'revision':'c4f47fc90e96565738ea2758620624e5','url':'/countryquiz/static/media/bfa.f2df4275ea02987d639dfd1158197313.svg'},{'revision':'5399e3b0b62468f849e399440313bdd7','url':'/countryquiz/static/media/bgd.c4c8e922cb972bbaa70999f4c6c0e869.svg'},{'revision':'1b37e8849f2f838b30eed47e506cc37e','url':'/countryquiz/static/media/bgr.2a40ff94428aa05ab3846dcac7900519.svg'},{'revision':'0dfeabc202c89ecd4cedf607cf45ea1d','url':'/countryquiz/static/media/bhr.660270134b2c6e1a6d858e07e6980b51.svg'},{'revision':'444864f50d97e8c8f413d02fe1ae6411','url':'/countryquiz/static/media/bhs.27f70ef78f04a8729635d0a609203e75.svg'},{'revision':'afb10d03a5e1fbc7386d9d2893e60b6d','url':'/countryquiz/static/media/bih.401b65dc97cc87edd1569d27813e35cc.svg'},{'revision':'db58872b1f9efc2885aae071ff68d087','url':'/countryquiz/static/media/blm.8cd0ab70a2c3a2b3d8efd162c6c72c66.svg'},{'revision':'74c02b070c1f7e4aba5488f4fb08f7af','url':'/countryquiz/static/media/blr.a0bdf260ecc28207fa0440b97b229e0b.svg'},{'revision':'e774029ae527fb1146c55b298c39d97b','url':'/countryquiz/static/media/blz.ade3a9755b058e544c3f4ed682113889.svg'},{'revision':'622a2ac246d33afc1e370d574c67d30c','url':'/countryquiz/static/media/bmu.22d75da2a5765748d78d03a25a251265.svg'},{'revision':'c464f33c0fe34734d27fe76a5628e772','url':'/countryquiz/static/media/bol.0956ef69412f75d07780819deca7f0bc.svg'},{'revision':'4d0b3617ee813bdb67de36514421492d','url':'/countryquiz/static/media/bra.b6325b16dde1160c0e3c7fbbbd21aec2.svg'},{'revision':'7b48bccd74c8ebc2dc0717c799489b27','url':'/countryquiz/static/media/brain.b5981939db193a6be61da8ce56b0988e.svg'},{'revision':'6aca49966024d28050b717ba517ca862','url':'/countryquiz/static/media/brb.205c7355d27ab87c3548a8a278af7972.svg'},{'revision':'51b75865271d8daf4904704f20c3923e','url':'/countryquiz/static/media/brn.caf361f6cb2b15aa9b0f36248f3d992d.svg'},{'revision':'2c5d54524ff941b830cf27f3534e90eb','url':'/countryquiz/static/media/btn.f01f384885a226ea52f540063254621e.svg'},{'revision':'5f73c40d43d0582e36c2abd8bd4979e0','url':'/countryquiz/static/media/bvt.71e3610e7d3836b00ae0159bab272896.svg'},{'revision':'182c2b736836370487d21af1647ed129','url':'/countryquiz/static/media/bwa.cacb3e27d8154cc1547388bf10937a9c.svg'},{'revision':'8f917db73d96e4d989d24520d46eec46','url':'/countryquiz/static/media/caf.b0b2770d2e3b72f849d2c52df5cef6f5.svg'},{'revision':'103f81c64dd590f9296283eacaf5eb8d','url':'/countryquiz/static/media/can.254027aaf098d4bc92f0f38d2dc0e4ec.svg'},{'revision':'44a451f214822bb793b57fd542215178','url':'/countryquiz/static/media/cck.96e6f0f78f939e586cad51074d645745.svg'},{'revision':'8c23a08e74e6c69e9242748ca1934e75','url':'/countryquiz/static/media/che.cc322c91fb03b6cf879e0ebae0a92bb3.svg'},{'revision':'e6e7ba4d6dc5c2e60d7aa80ce0bf6713','url':'/countryquiz/static/media/chl.be05b9c38a8cf7a45c2db6b3fc0e7113.svg'},{'revision':'f2b86ed816325c452c65d5ea312d35ca','url':'/countryquiz/static/media/chn.5df4c785bb5ba2b7f41d8e5a2125c09d.svg'},{'revision':'7996a4496a6e20b70968f0059f01c15c','url':'/countryquiz/static/media/civ.f2d46f6c6718134701457c6ee7379233.svg'},{'revision':'b1dbdae090637ab90815826bb8de9c63','url':'/countryquiz/static/media/cmr.489b2a0a2e72844c8b6830784a1ad482.svg'},{'revision':'a1f98a77b736c07f09399240ecfed3e0','url':'/countryquiz/static/media/cod.6230afb8ecaa3a23473ebda4b8619c67.svg'},{'revision':'f6e1a075eeff9b8f25e44d53419d62bf','url':'/countryquiz/static/media/cog.20f868f6951a39f41c6423ada076d139.svg'},{'revision':'d048c8ab8ae45a20ebd9d16f94ad0c96','url':'/countryquiz/static/media/cok.b3db5ee28b95ce57a9c468cac1201aed.svg'},{'revision':'4a972ae6681d4f38a9131caccfb89717','url':'/countryquiz/static/media/col.ef7ebf0f894c936cdd573988645829de.svg'},{'revision':'34da859183c3c67b0126a34ce7654d36','url':'/countryquiz/static/media/com.b8bd6adaaacc9a6a94b68b77ddc4838d.svg'},{'revision':'6af9416b850d13e1eaa02febd248b9f6','url':'/countryquiz/static/media/cpv.a14d443303d35edc07b77cf466d30891.svg'},{'revision':'ca135daed1d08acdd36bb95c7b16fbc8','url':'/countryquiz/static/media/cri.4abe75aa5581fad3b15e100dc8be2b01.svg'},{'revision':'7680c984915a3fc1060bbf91f22e1e24','url':'/countryquiz/static/media/cub.ad956d7f0348f357fd99a696c262f0d5.svg'},{'revision':'cdf60a17a0c75255eb9fe1f9f7a316f3','url':'/countryquiz/static/media/cuw.2be619b9198650a7265c3c195f2fc94e.svg'},{'revision':'47fabf76a313235838b37f405f643619','url':'/countryquiz/static/media/cxr.566537c675a0970a850759c3912dd075.svg'},{'revision':'0419a3c9854db99d6aa253f9e55284e1','url':'/countryquiz/static/media/cym.31ede7c31d1d55d8576dae3fe340815a.svg'},{'revision':'7cad08bb1aa32b945eb7e7740af05de8','url':'/countryquiz/static/media/cyp.39d95233af3802d428eeaa8ed9b2dd42.svg'},{'revision':'1b2583ebeb00b7ecfff6dc5209bd23a9','url':'/countryquiz/static/media/cze.e5b738fec8d7d9944ece7e50456084cd.svg'},{'revision':'dd6b94ebba731f21056db9feec5c82de','url':'/countryquiz/static/media/deu.13b25ed2fa48a501e32c28353f52332b.svg'},{'revision':'7e86ccc420053c4bdd94d3ebbd04d3ee','url':'/countryquiz/static/media/dji.d4167f34d60a8224934b408acec8f094.svg'},{'revision':'2b5ed8efcafb9aaa000ecf820c01365b','url':'/countryquiz/static/media/dma.fc236b4be5780f8bdb51281501b720fe.svg'},{'revision':'425bca06b873e8b01cd872ccfb50464a','url':'/countryquiz/static/media/dnk.110274884d3759c0073cd687d8073284.svg'},{'revision':'d8d59ff4ab54d3d1a566d98cb53c85c7','url':'/countryquiz/static/media/dom.7f825ae48d279a213b26e040cbbd92bb.svg'},{'revision':'ef6da27bb861764d19b77c98c4a49f0e','url':'/countryquiz/static/media/dza.9259f4a53e404567c8a6804b46652da5.svg'},{'revision':'be38b4de740c61e4774186dd6f2b0384','url':'/countryquiz/static/media/ecu.b37e5644211f20cf7f998269a51c7368.svg'},{'revision':'a9dafa5d4fdffcb0a3c4c7616292cb3b','url':'/countryquiz/static/media/egy.c69e8dd2c81e50eb30ed74d0bf546114.svg'},{'revision':'12446dfda172cb0dcefd7134eb04850c','url':'/countryquiz/static/media/eri.7be643430c839872f662e1dcc4b0603b.svg'},{'revision':'3e17e52316e8e3c1b44f4d98341eb712','url':'/countryquiz/static/media/esh.50d5e0de46fa8fd8fea99e8768f0aeaf.svg'},{'revision':'6a59af32861dde7bb7bceb8189814a41','url':'/countryquiz/static/media/esp.7b98b8ea6c0e8184136d87105f86ef9b.svg'},{'revision':'37a8e02816c9b4198496c5d05d978855','url':'/countryquiz/static/media/est.6bf1d86a307a2c12e02af4297c4797f1.svg'},{'revision':'693d2d6873130aa58b5a90f90d8ba8e8','url':'/countryquiz/static/media/eth.c23efadfc3aa731b5568bec85863110c.svg'},{'revision':'c296fd7035c48e5ddfce6d093e129e69','url':'/countryquiz/static/media/fin.27d4b2ec1138b7e1699a95bc13fb12ba.svg'},{'revision':'7b991d5e8255240cb1958c2e305f1bdb','url':'/countryquiz/static/media/fji.8d9b331e7bd9aa9ff80c903a5c09cc7b.svg'},{'revision':'b4be9ea11a755cd6827db36f41812e60','url':'/countryquiz/static/media/flag1.08df7bac060942be3983d6dc6d3cb70f.svg'},{'revision':'e3430c0b8867ca0a5e07f55d30bed9a0','url':'/countryquiz/static/media/flk.fc88f7a98efd2b4bd8dade17b0dd3938.svg'},{'revision':'f2f9315bdcb1d78f0b313215ac115fc5','url':'/countryquiz/static/media/fra.fddacb6935937fc96bb08c55e585e8ba.svg'},{'revision':'bf8c720f2b0fa7f5820d28a25d9b922d','url':'/countryquiz/static/media/fro.a620715d823090d02c5f137b0dd84fa0.svg'},{'revision':'f384e91e12c67e42f2a350f608440b47','url':'/countryquiz/static/media/fsm.c3151fca8799337c6aa721355651eab2.svg'},{'revision':'6e49b08d3a08d2d8229fb7a31d33373b','url':'/countryquiz/static/media/gab.3e5c6da42251d0c1529773355e862e52.svg'},{'revision':'5625f2963f94183c0e7871e72457b8b5','url':'/countryquiz/static/media/gbr.625d21643b838614c554bdbc0ef54c5e.svg'},{'revision':'27bab810cb5051b8a278c9aba234b1ab','url':'/countryquiz/static/media/geo.1a8535ccc49afe7f07da545f8c232f65.svg'},{'revision':'111a933fbbe29263d041d120d6cde8e4','url':'/countryquiz/static/media/ggy.114ee10b3fe1075b9d18b5b24b8abb25.svg'},{'revision':'7218f6efdb0910d1cea7dd88b7ab3456','url':'/countryquiz/static/media/gha.ebcb815859a4e0d00375cf0a9725a761.svg'},{'revision':'9616d55b81f6cd11addc61ee1442fd6c','url':'/countryquiz/static/media/gib.e22a69b9a707d48a22b6c51bfcdcfa44.svg'},{'revision':'c568d40c2cb6c5c14b6e0ccd4c68ed37','url':'/countryquiz/static/media/gin.fe0045af0ddf7f05844d7663ec6ce47e.svg'},{'revision':'0beb36587301c9ee12f959155d9cdd9f','url':'/countryquiz/static/media/globe.ea43faff935757145bde9cbcdda36091.svg'},{'revision':'890e0029772073bb64e12ea069c6787b','url':'/countryquiz/static/media/glp.f67535349d74d3978b52683c03874219.svg'},{'revision':'43bc59d6607cfc168088c7ae81924659','url':'/countryquiz/static/media/gmb.afdb5eae7496998289aa2399e7556711.svg'},{'revision':'e777381b8bbe2b130bdeef1deaf02682','url':'/countryquiz/static/media/gnb.aef5917b42e8cc93fd0495b749d3074c.svg'},{'revision':'b78c14cea246f260dce0407019f6a7ca','url':'/countryquiz/static/media/gnq.fcef1d9981d5d57106366a2355096862.svg'},{'revision':'46d6007c4b5af6c7ecf8b9cb0551f5a9','url':'/countryquiz/static/media/grc.dd1522bc5b2d61a062eb30b1721c1a07.svg'},{'revision':'52e7306b120935cf4297f5c5a35cc5e3','url':'/countryquiz/static/media/grd.1023431cfcb5a5ab2499e34c6dfa4654.svg'},{'revision':'2468cccd0045ced15e551e4b03786483','url':'/countryquiz/static/media/grl.86ad96369987bbfb08d2e5ed19e3ce1e.svg'},{'revision':'9e6e5fdf0eed78db0b09f8b43226598a','url':'/countryquiz/static/media/gtm.99045729ec162aef40174f1d7c8fc057.svg'},{'revision':'c89578cdfbde1d1ad84d44f2c168362c','url':'/countryquiz/static/media/guf.b8704028deba5c497fd39fc90750c885.svg'},{'revision':'8cd8d24ae73cf4066472314eb5d4e6c7','url':'/countryquiz/static/media/gum.7c3ee2204c729b2c06c7c7d11917fc7a.svg'},{'revision':'c914c56959da6ff2f6cc113542d3a5fa','url':'/countryquiz/static/media/guy.64533830c4b306598c099a15a6adb868.svg'},{'revision':'ad28dbe329bc4515642ad1a4506529dd','url':'/countryquiz/static/media/hkg.7c62c1f6e27d09e97a308971f4760f7d.svg'},{'revision':'5c8a0ba24caeb24e47459b8d0958978c','url':'/countryquiz/static/media/hmd.02a9d7b7295b0db51daba121d239ec15.svg'},{'revision':'2decd5605d85f07e250c4d4454ed8d7d','url':'/countryquiz/static/media/hnd.fc4d3911f8cdbdb588ac05772986a802.svg'},{'revision':'51c5f9989cf41c02f76bf9c4541cc719','url':'/countryquiz/static/media/hrv.e82fa930e2bdf6efa1603755a2af68f5.svg'},{'revision':'8370745abb4c020dbaa7cfd08491314d','url':'/countryquiz/static/media/hti.67dedda389d237a9ad642ea4f9f946a3.svg'},{'revision':'966f512c4756bc808356f94c705658c0','url':'/countryquiz/static/media/hun.30fd04488dce7e7401146123681c5bb7.svg'},{'revision':'75bc7ed0624658c3d6bc96e0ca15b8ec','url':'/countryquiz/static/media/idn.8f8069cdcd3591467570c7acee521d85.svg'},{'revision':'5509abb5929248488a42b32f7cf11713','url':'/countryquiz/static/media/imn.74efad53d3750b5323698bb4711b92a2.svg'},{'revision':'4313ce06e78ebaeeb326d690d72b5573','url':'/countryquiz/static/media/ind.fc0c021b5db1466c1004827a0b92442b.svg'},{'revision':'a9e959cb496e2752c5d32611bd9bac59','url':'/countryquiz/static/media/iot.9891db3e44ed72f261465960452afa0d.svg'},{'revision':'4a66c5c8e311cffa88af8dbcd19ad58e','url':'/countryquiz/static/media/irl.09d35b53381d4d4287cd565aa1665a13.svg'},{'revision':'c0630c776c7dc2cc0f3b112f6b5bdfcc','url':'/countryquiz/static/media/irn.6887bd0e45358c5f71074cd98ab9765b.svg'},{'revision':'4268e209263a75cd9f46bed43e8eefa9','url':'/countryquiz/static/media/irq.f63ee06f1e16632c0e5efb655d279cae.svg'},{'revision':'0685b5517891bb649078bc72f38590b4','url':'/countryquiz/static/media/isl.9c7c89b6a1d69b7bea8df92c7000590a.svg'},{'revision':'a4499fd65c7f87f96b515b7471977de3','url':'/countryquiz/static/media/isr.a17449f39dcd4936ed12fe1386e78864.svg'},{'revision':'4c150637862ee39b9740aeab518358db','url':'/countryquiz/static/media/ita.3801a58a38f2a3f6ec692b04ebc19b3c.svg'},{'revision':'b6b29947ec934987f187e2693737eade','url':'/countryquiz/static/media/jam.69c845ffb3fcf8d421f093bd20239260.svg'},{'revision':'33d029a1f8b264d0977c999861c88c1e','url':'/countryquiz/static/media/jey.3b391b319c6eb42fc904468ec9930507.svg'},{'revision':'108aa32765c63d49842450ace7113e1a','url':'/countryquiz/static/media/jor.1fad884a42da95683673897f0f2646d6.svg'},{'revision':'543509d2724589af6ff53f234a77a5a8','url':'/countryquiz/static/media/jpn.676668d4f144924ce9a1eb858bdf82b0.svg'},{'revision':'763c82fc87268b4400c102a76b15b307','url':'/countryquiz/static/media/kaz.b4dd4807b854bd64f2ac703de66d0ae9.svg'},{'revision':'86ee5d549d276e386e97d7a61e7c603e','url':'/countryquiz/static/media/ken.26bd9a08d50cd6e4295cdf3dd24fd1cb.svg'},{'revision':'74c55000510692a4e0fa75ec152d09b1','url':'/countryquiz/static/media/kgz.bfd6dc96b2f2485f3d1c10e17232b52e.svg'},{'revision':'4dbb2a289f5851c5b323d427fd35d880','url':'/countryquiz/static/media/khm.56130a70b2fb1084fead1be91b79c4e2.svg'},{'revision':'61c8cefc503acd4557b60180763189be','url':'/countryquiz/static/media/kir.b581cf4c24792526aa48c52d50095f15.svg'},{'revision':'cf8ca61aa5fbcf6a770bce49036d3b02','url':'/countryquiz/static/media/kna.717424bb5dbe51b823fcbb38b3c31701.svg'},{'revision':'0ac6505bbfa366b249ddc7e3b0726d04','url':'/countryquiz/static/media/kor.30f1ab06b57a50784511d6685919fee1.svg'},{'revision':'afb30ec84e4469a8f8f9be8ecaed5811','url':'/countryquiz/static/media/kwt.9c4f76d8e1a5ce39be539956bd6881b5.svg'},{'revision':'e51d8b27e2e686a12ba3f726734a1239','url':'/countryquiz/static/media/lao.082a30d129f8c49e1d10e67d814297ed.svg'},{'revision':'361d83e3d8f854ab8c29f659d6bf7e76','url':'/countryquiz/static/media/lbn.59515ea4dd2fb23c6be71f9fab25d4ed.svg'},{'revision':'ba281f01308bbe56715cf774f4bacd99','url':'/countryquiz/static/media/lbr.ef3bacab77e6878ecde571eab05313da.svg'},{'revision':'e1a234887e677f41cac8c0f6899ead4f','url':'/countryquiz/static/media/lby.c4de54a8d2079f1c2527c2611730749e.svg'},{'revision':'d424367de7664ba657c1514a5041206a','url':'/countryquiz/static/media/lca.56ebbf0546a8e753acb485f0b56ef097.svg'},{'revision':'f429002bc6a6d0f895204634d16c0f64','url':'/countryquiz/static/media/lie.867c61e1ba07cd5c8a3d7084da3b6a16.svg'},{'revision':'ce47e840400f4ddc88b977aae220406e','url':'/countryquiz/static/media/lka.659da95e3d572a00bdcb89afad9ceec5.svg'},{'revision':'9003f8dd01453aa1478581e7cc534aed','url':'/countryquiz/static/media/location.ef60cf16bbc53a4b2458a4215b59b1bb.svg'},{'revision':'46c211fd08573bdebc6f42ee12dd5f58','url':'/countryquiz/static/media/lso.6e9706ced829487d650b2aa2de61425e.svg'},{'revision':'64d0584aa7d47b81a0d111f87e7210f7','url':'/countryquiz/static/media/ltu.4aa70920c5759f7ae143d17035118f43.svg'},{'revision':'b8d65deaea5fb54e63153daf7c9af5fe','url':'/countryquiz/static/media/lux.ffe259b31b24c8d55a3234637e92982b.svg'},{'revision':'476bf5085b87361cc0cdfda8fc611c4a','url':'/countryquiz/static/media/lva.179d596a23aab653b5f2de470973e022.svg'},{'revision':'8934443baa9a99404a11f1e2215b31b3','url':'/countryquiz/static/media/mac.e05481d6f6ac90d04ab8b3a6ac9f8e14.svg'},{'revision':'5c61ede9b7f5196c349df97439e6b5a9','url':'/countryquiz/static/media/maf.15bc8dc17563c826d5ae6b8aaa333320.svg'},{'revision':'cdd4bc5886ec4fffbe9e741060807328','url':'/countryquiz/static/media/map.0f6e419f05fd4e723b364509f4777948.svg'},{'revision':'ea4150a0add8347a0b5a24c5d933f936','url':'/countryquiz/static/media/mar.9c59c04a2afa1f43f35fadbecef9c21e.svg'},{'revision':'299019056fe8f361a5e1c5ef87532d8c','url':'/countryquiz/static/media/mco.107ab4ebc2a33e9c7d45952d5aea0aff.svg'},{'revision':'5642a76fda6fe0de39937b6993a2825a','url':'/countryquiz/static/media/mda.bd17981fac6d73622b0e21e202176918.svg'},{'revision':'c3f543510951fc3270c73d16f972e07c','url':'/countryquiz/static/media/mdg.bf4b7bdb744510f25765983157c82432.svg'},{'revision':'d1d926150c522716bb6f151b3ad63837','url':'/countryquiz/static/media/mdv.30a8895b0ab20d5e8c9646f4c3a9b2f4.svg'},{'revision':'d71e4e3059b3b7b0c28da6da0a68ee85','url':'/countryquiz/static/media/mex.cccd580ee4b3aaab132c4959b49cfc5b.svg'},{'revision':'719c372e4f44daf24be12f4cb8d58080','url':'/countryquiz/static/media/mhl.2bf9f34fb744a17de71aea1b25f48721.svg'},{'revision':'fdcb9eb6d5b1e018311e50d7e8dcb492','url':'/countryquiz/static/media/mkd.8e4e9506d6671cd4c90510a75e1e0f31.svg'},{'revision':'637fe48f6ab16ebbdb50639c0c262557','url':'/countryquiz/static/media/mli.dec167c8c4eb6c0fb94bdf6b9a75ac52.svg'},{'revision':'7ae1d4fa73e69985e2f2fdb8991aed4e','url':'/countryquiz/static/media/mlt.1f92e7aa128273c9d36811aa9ced70a9.svg'},{'revision':'12cc1bc08f13d1942858de4273888c38','url':'/countryquiz/static/media/mmr.c8b25df662d4a79032fbdbed7ff42909.svg'},{'revision':'ee16e3e3ed94e9c1e86ed19a78ed65db','url':'/countryquiz/static/media/mne.f88a0e6c76f4e3f1d8a0c1d57369d8e5.svg'},{'revision':'dca1f9e22e1bd85f962f0fbee5a5a168','url':'/countryquiz/static/media/mng.d43a625892c54da99be91a4618e955aa.svg'},{'revision':'bd0553763b018529da837608f55a8fe0','url':'/countryquiz/static/media/mnp.689df032071f483dadbdc888924782c9.svg'},{'revision':'c27568d78fc6d116b126b6f70f12e4b6','url':'/countryquiz/static/media/moz.05827c9bff5fa533757ee51cc84b5275.svg'},{'revision':'c3ed19ddea6a6098a518fa88ae3295ba','url':'/countryquiz/static/media/mrt.eadb55e1f4e0b09f039421fb2c703b52.svg'},{'revision':'62fbb192504b06531be8a54adcedaca0','url':'/countryquiz/static/media/msr.a85041c510546a526119baf9817e7102.svg'},{'revision':'81935d3d07a7e4c51f13605da9ccadf6','url':'/countryquiz/static/media/mtq.87b9d6249de26145f6f197627532df5c.svg'},{'revision':'c15ce616185bb014954c744c10728cce','url':'/countryquiz/static/media/mus.fda9e9b0c996d17a398b8c9b0e56988a.svg'},{'revision':'0cb298d634b3d60a70c1b5df8bb9fb08','url':'/countryquiz/static/media/mwi.e9ce9334d926929720a6461ac4286eaa.svg'},{'revision':'3056bae3fe40973108a08a939b289eaa','url':'/countryquiz/static/media/mys.07aa9f478a180f7d300229ea0487b1f9.svg'},{'revision':'8aaea98b773074c4377e926c559a1dff','url':'/countryquiz/static/media/myt.04dedef01e67d4a678cb470079eb4814.svg'},{'revision':'13839b2c3eb6ed04ca099b5ccefd5fe8','url':'/countryquiz/static/media/nam.cb99f12bf2cb6a0f6c67da41f0469d39.svg'},{'revision':'da501575cf36e402b570150afa5ef534','url':'/countryquiz/static/media/ncl.1c84a5e1254e60bfff536816760c6aab.svg'},{'revision':'44dd4f8ae3844f160d95b61c7e56c899','url':'/countryquiz/static/media/ner.cc944c657ae9193b6ac63a5bc32ad115.svg'},{'revision':'af6a8f89dbdb82f7b15e94d6ac89bec2','url':'/countryquiz/static/media/nfk.a1d479cc5c9cd4d3c83260cb6d3fc531.svg'},{'revision':'ee71aeb3eecd88c2e16ede507df1d060','url':'/countryquiz/static/media/nga.29d1b1e44ee39ada059eb4cc35d5cc63.svg'},{'revision':'7bc4cdb3df9316b6a1af37a13c7a9a9e','url':'/countryquiz/static/media/nic.d56fa198833e0893bf9afb3c278e9028.svg'},{'revision':'a218ba741a6f6bf2436885dd9d1ea0c8','url':'/countryquiz/static/media/niu.f3f7f7a6e53ce6b96913713c9472bfd6.svg'},{'revision':'15d748ed11dd009e39f4a28febae0b91','url':'/countryquiz/static/media/nld.d87cf07723ca7424a6f18343f84f29ee.svg'},{'revision':'5f73c40d43d0582e36c2abd8bd4979e0','url':'/countryquiz/static/media/nor.71e3610e7d3836b00ae0159bab272896.svg'},{'revision':'5b312619a110034fd3ea0fef44b125e7','url':'/countryquiz/static/media/npl.cccf00f720d4de4540c2862d9297e1cf.svg'},{'revision':'9693440ec7c2f6651ec26953bedbf550','url':'/countryquiz/static/media/nru.58e5cdd7269aaae9bc1aa7c115eaf11d.svg'},{'revision':'348a56c433014d208fcbc45415082ab2','url':'/countryquiz/static/media/nzl.9c2d4d0b608a431044a5cfa8882506b8.svg'},{'revision':'3b9e68086a41bc5596c5ee9322162bb4','url':'/countryquiz/static/media/omn.2611b41dd40da2ee7507acdc4ed010bb.svg'},{'revision':'76d82775ffb9045af7fb99fee1e5b7b6','url':'/countryquiz/static/media/pak.7f0697cd70ec98569f9782ebf7258f66.svg'},{'revision':'d53e6dc0353119ef02eed876a97a5900','url':'/countryquiz/static/media/pan.e2f682550cd5f4f4b9b4cf21722000b8.svg'},{'revision':'67dda467ac86145a040672728e384a1a','url':'/countryquiz/static/media/pcn.5b10e270e3f3f0f54e6bd1b478f00452.svg'},{'revision':'5fb77dd98ace70eba3e57c28023a90bc','url':'/countryquiz/static/media/per.196e6a2a517ae6e649b2c8e057cb902c.svg'},{'revision':'a89e9694cba5b7125b8c826a5ba16c67','url':'/countryquiz/static/media/phl.29a5801f5dd10792d87c9d0d1362be7f.svg'},{'revision':'fd5c48da1cc3690459b965f880a1ae1f','url':'/countryquiz/static/media/plw.8e41d7bad41611b4c31837d81d34da9c.svg'},{'revision':'acb00514a9f7589fa164aa40db62bc91','url':'/countryquiz/static/media/png.aeeb4a95ced61db2387693480a4e925f.svg'},{'revision':'a4c446c1e427b8269544390a7f004d36','url':'/countryquiz/static/media/pol.113cf2ff6c76cfd457787fbd1c9eed14.svg'},{'revision':'a0b989f32699410543840386779a8d31','url':'/countryquiz/static/media/pri.de000d70f22c60f6f1a8e2836f346d2b.svg'},{'revision':'85c7d8304dfe8aefe43e13b1fda9f8fa','url':'/countryquiz/static/media/prk.f1c0ff0480a55baa0b4e35fed4fa999a.svg'},{'revision':'07fd01614f1485de300c471ec21e26e6','url':'/countryquiz/static/media/prt.4ea042ee3ef4bac65bcb6aa2f1c454c3.svg'},{'revision':'0438a2adfda7b33aabf20c99c0f5c5e8','url':'/countryquiz/static/media/pry.ffd0710670a41986c0e2daa74af053bd.svg'},{'revision':'0768681c0bb5149ee212a2288f88c9cb','url':'/countryquiz/static/media/pse.51b9d2416c0b018cc907c4954304c660.svg'},{'revision':'40895369cfdb9c49c094be42f49ace69','url':'/countryquiz/static/media/pyf.8f06909c32b768f2a53bc9917e43c631.svg'},{'revision':'9be0c457907333aa4e1db65f40716404','url':'/countryquiz/static/media/qat.50f2c066c4778a3b8eadca1b3367e500.svg'},{'revision':'5c61ede9b7f5196c349df97439e6b5a9','url':'/countryquiz/static/media/reu.15bc8dc17563c826d5ae6b8aaa333320.svg'},{'revision':'8e0c3400611fcbca26007509175d8b2e','url':'/countryquiz/static/media/rou.b1141b6e9a9fd7eb0e6809143a971069.svg'},{'revision':'6244ee8733f6ba4b7362e145324f1171','url':'/countryquiz/static/media/rus.5f058288131498a59885688f305b2933.svg'},{'revision':'e90414fb89090495ec357458bb814df2','url':'/countryquiz/static/media/rwa.bac2f373fe2662f5b278675c120ff500.svg'},{'revision':'93a5b85547356d827301f1fbb6d6c5a6','url':'/countryquiz/static/media/sau.4d65b8996de59b79de05f1cfafa35e5e.svg'},{'revision':'d09b12c87abd7bc3e17a8a8f2295068f','url':'/countryquiz/static/media/sdn.1b680e3b164ab167e3d08bfaab890c1b.svg'},{'revision':'ab2814a899b95c31a4d60ff0c995fadf','url':'/countryquiz/static/media/sen.d57c6a38a124fb459e26cebe3467b9eb.svg'},{'revision':'f9cd73462c97103c4cff09131b9610d2','url':'/countryquiz/static/media/sgp.5ae6d81e7c41bfed31860defded07b0d.svg'},{'revision':'78e6114b90c2b2485cad20fdc54d3a51','url':'/countryquiz/static/media/sgs.b8b7b0b561e6a833722b3dacbc489634.svg'},{'revision':'8e943876fd1e4c64d3a522d1c1b9c02d','url':'/countryquiz/static/media/shn.92711995e7712801756c1528376211b9.svg'},{'revision':'5f73c40d43d0582e36c2abd8bd4979e0','url':'/countryquiz/static/media/sjm.71e3610e7d3836b00ae0159bab272896.svg'},{'revision':'f9c7babf1acfd8ced94dea78268655cb','url':'/countryquiz/static/media/slb.a7260668905c8d29f9ac47c6486402dc.svg'},{'revision':'a7b6a2d872d2d89ecd0fb9dca4e1eeb6','url':'/countryquiz/static/media/sle.c04dabb11d6b8d979fbe57b502e5af8c.svg'},{'revision':'b34bb4ce052b0e5c1ab42fe53eae8d20','url':'/countryquiz/static/media/slv.1c5f810c93ee927bf454d982c4d5f21a.svg'},{'revision':'9871279fe94b3de79e7b5bcac9cede15','url':'/countryquiz/static/media/smr.0ed6b74fe47e3591b5123cefded2551b.svg'},{'revision':'a72e4061d44e60f2fe35768959eda52d','url':'/countryquiz/static/media/som.9c92a1ae73f9876118d65e7ba2f5b9c6.svg'},{'revision':'0c712a4d1cf0ca1a0b98d4c5a363b69f','url':'/countryquiz/static/media/spm.7f4f9fa226b02c3567ae0c19e12e12bc.svg'},{'revision':'50ea2b87eb461ea43ea145818b21f787','url':'/countryquiz/static/media/srb.3f4bfec497d515a32f387179f50139e7.svg'},{'revision':'0876891074e7df4a6340843f1953d6a3','url':'/countryquiz/static/media/ssd.c9d4ac3b6be03f33bd94c37d79104150.svg'},{'revision':'a852e277afa344cbbf5e14d93f6a7145','url':'/countryquiz/static/media/stp.5facf0a9bec8ec2bb46fc9d615100df2.svg'},{'revision':'a7e0ee8d475ea8fb5183142af9f9cdcf','url':'/countryquiz/static/media/sur.3206173a8ad4e36b5a4108f66402a084.svg'},{'revision':'eeb9fe8758274e48456fa357f9471178','url':'/countryquiz/static/media/svk.bd3c385012565d492c378b01d2829273.svg'},{'revision':'fd9c41dbb669d88549433640aba84c55','url':'/countryquiz/static/media/svn.ba4b9c61076ac9a5e01b88622230b380.svg'},{'revision':'94f72476024508ffcc899b718de43b78','url':'/countryquiz/static/media/swe.cc6231780d7fcde7ebb4d6ab0711cae7.svg'},{'revision':'a553775046b986dbdc0b1e22e91f18b9','url':'/countryquiz/static/media/swz.c24d1f3204422e005b0ae40c22e77f4d.svg'},{'revision':'d61a16f277312d847e5a74a655c2fe76','url':'/countryquiz/static/media/sxm.f8b93330f145521ebff9fce57463dd6b.svg'},{'revision':'903ef5fc2bb84051d3d0f61fca92bf3c','url':'/countryquiz/static/media/syc.84b8bcf6c5c6364585f73b068dfd3626.svg'},{'revision':'0d0ce9f1a90aebff489df9396d5fd36a','url':'/countryquiz/static/media/syr.cfa9619cf7683c9f07ea897fea2cbf7a.svg'},{'revision':'ae3258262063e45d9b8c0fceebc9e57a','url':'/countryquiz/static/media/tca.ba973d02ef922757632c6b43871cb072.svg'},{'revision':'0a6506223cd2a3fab4dc0d4723dd0516','url':'/countryquiz/static/media/tcd.a4a2322647ba9c6225dc922ddb7e5364.svg'},{'revision':'625055fd040a6594dbba6fef0e7e8146','url':'/countryquiz/static/media/tgo.512e402a79c08ac18c6eb5713d3dafe6.svg'},{'revision':'8b123537f91402a2cbc20c21a8444a4c','url':'/countryquiz/static/media/tha.415dc0e3cc36ca1d4edccc6068284a02.svg'},{'revision':'17fafebe7fbcc2c0197a649e80f50e39','url':'/countryquiz/static/media/tjk.fdb206332a5f7a53694724933a7c929a.svg'},{'revision':'70b7dc4d1a22d2a9e11e96153b0e1385','url':'/countryquiz/static/media/tkl.21a30b7a2a59725da61c0c97f87ceb07.svg'},{'revision':'faadd57b5cd339b1ef47290598e3f8db','url':'/countryquiz/static/media/tkm.7f92eb9b502732006e1dc26cd3fc44e1.svg'},{'revision':'33bec7abd25fbdd608861c4fa379e1ce','url':'/countryquiz/static/media/tls.68521de0b2d4b4cedcf065a1e64b5d44.svg'},{'revision':'0a0c8bf9c74d6c3ec6edc482e05b2e12','url':'/countryquiz/static/media/ton.ba5812e5ae78b9b832d8fac6d67521e9.svg'},{'revision':'b2e4ab0c7e6487ec6c0ef071c0923933','url':'/countryquiz/static/media/tto.bc50e397b9dea34b2b0c1eafa65326ae.svg'},{'revision':'68a1a205fbb87fc72c07a4a13aed2eec','url':'/countryquiz/static/media/tun.9ec4eec8d2b4135580c21374585ca511.svg'},{'revision':'ba02593b07c7085d95fb58f084ce6ee5','url':'/countryquiz/static/media/tur.40908e87923e66380c5be0bf0b0e7a21.svg'},{'revision':'65b1844daf087caaa184966bbf67c665','url':'/countryquiz/static/media/tuv.4cbe7f8b6a6d94036b01efd3d2fbe4ce.svg'},{'revision':'4695020b583be38c4c6a58cf24c76ee7','url':'/countryquiz/static/media/twn.d49ab1719070beba85b291b30d5bb288.svg'},{'revision':'a7e4388465a1be3700b50a9b6525267a','url':'/countryquiz/static/media/tza.ed25925de755daab94b6a453b2a8d323.svg'},{'revision':'d225b043e6cc27ab3e426b326d67f2d1','url':'/countryquiz/static/media/uga.1e92fcd4a22e83ec1ab8c34805d9ec89.svg'},{'revision':'5c777bdb70f435debfa993d834d7a992','url':'/countryquiz/static/media/ukr.32c0173f0154fbef9549929ee88747b6.svg'},{'revision':'6c6f5972d1f4e83a6c4e73cebf9790e2','url':'/countryquiz/static/media/umi.b586f87edd27d5048d25bdf578213476.svg'},{'revision':'2e4e7b822d50ee612698527e54b8dec9','url':'/countryquiz/static/media/unk.c1968ce3e0b9bbba72148f04d2b96c0d.svg'},{'revision':'b6f5ee4306eaadc13e3189022fcafc4e','url':'/countryquiz/static/media/ury.62830e6960585658e74014634ee3cea5.svg'},{'revision':'9c6bf3d7616f41ca53d756e2bf37f006','url':'/countryquiz/static/media/usa.90f61388b1ed933a0d857d1129781f0c.svg'},{'revision':'04f411447126e6f4562e79a0b0f54f8b','url':'/countryquiz/static/media/uzb.60fc93fb03ae6d2bde8720a6c22a8096.svg'},{'revision':'67b5dcca457184e193cd0a2b0fd528bd','url':'/countryquiz/static/media/vat.6a740fd57867d6733370b15d0bce92c7.svg'},{'revision':'a4d337a5e3e16e237987ddf04df87cc0','url':'/countryquiz/static/media/vct.2db53c727aefbea14934f8c175eae252.svg'},{'revision':'f0925938bb9c60cb3959bbaecf4a30f0','url':'/countryquiz/static/media/ven.2364a4c9c96de37a6c480ef9e6fdd243.svg'},{'revision':'d63845fbe37e19b719c3a866f378a351','url':'/countryquiz/static/media/vgb.e12a5dbf319fbcc21103e49d80c80a11.svg'},{'revision':'25132567c06a2b763eedd1e9fe7c7b23','url':'/countryquiz/static/media/vir.230283e254dd86ec326ea876be3bd046.svg'},{'revision':'b72f0ba7171238c7707f5945110a29b5','url':'/countryquiz/static/media/vnm.edece673fa3286405a586ea6e414277f.svg'},{'revision':'e415d2e514fc43c4dc133162e81aa930','url':'/countryquiz/static/media/vut.591be6e8ec75d795bf2a920d09096199.svg'},{'revision':'86331258c58f08f06c161a0177262d16','url':'/countryquiz/static/media/wlf.dbac78fd729e18ba736b10fca268252f.svg'},{'revision':'a339be23786a6ee753e370ef4c72b598','url':'/countryquiz/static/media/wsm.894e3ffe69526c88c8f93804b9cf1ae9.svg'},{'revision':'b29458a32481906c365717509f83bef5','url':'/countryquiz/static/media/yem.c44c363ebe1331ed746e6744c6bb10cd.svg'},{'revision':'998d61c98fea68315467671cc62af25d','url':'/countryquiz/static/media/zaf.2649aa134ddb0302f36131510011da59.svg'},{'revision':'d9738e9d710ac9467194323c6a054ccc','url':'/countryquiz/static/media/zmb.e93df545676cb798d8fa3d4aa31d96d4.svg'},{'revision':'12ae3d0c10399715fa8b565ef8175b67','url':'/countryquiz/static/media/zwe.1b4f4a41773498d324e6aaf69410c270.svg'}]),function(e){const t=V();Y(new Z(t,e))}(te);const se=new RegExp("/[^/?]+\\.[^/]+$");var ne;Y((e=>{let{request:t,url:s}=e;return"navigate"===t.mode&&(!s.pathname.startsWith("/_")&&!s.pathname.match(se))}),(ne="/countryquiz/index.html",V().createHandlerBoundToURL(ne))),Y((e=>{let{url:t}=e;return t.origin===self.location.origin&&t.pathname.endsWith(".png")}),new class extends B{constructor(){super(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift(ee)}async _handle(e,s){const n=s.fetchAndCachePut(e).catch((()=>{}));s.waitUntil(n);let a,r=await s.cacheMatch(e);if(r)0;else{0;try{r=await n}catch(i){i instanceof Error&&(a=i)}}if(!r)throw new t("no-response",{url:e.url,error:a});return r}}({cacheName:"images",plugins:[new class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.cachedResponseWillBeUsed=async e=>{let{event:t,request:s,cacheName:n,cachedResponse:a}=e;if(!a)return null;const r=this._isResponseDateFresh(a),i=this._getCacheExpiration(n);l(i.expireEntries());const o=i.updateTimestamp(s.url);if(t)try{t.waitUntil(o)}catch(c){0}return r?a:null},this.cacheDidUpdate=async e=>{let{cacheName:t,request:s}=e;const n=this._getCacheExpiration(t);await n.updateTimestamp(s.url),await n.expireEntries()},this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&function(e){n.add(e)}((()=>this.deleteCacheAndMetadata()))}_getCacheExpiration(e){if(e===o())throw new t("expire-custom-caches-only");let s=this._cacheExpirations.get(e);return s||(s=new M(e,this._config),this._cacheExpirations.set(e,s)),s}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;const t=this._getDateHeaderTimestamp(e);if(null===t)return!0;return t>=Date.now()-1e3*this._maxAgeSeconds}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete();this._cacheExpirations=new Map}}({maxEntries:50})]})),self.addEventListener("message",(e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}))})()})();
//# sourceMappingURL=service-worker.js.map