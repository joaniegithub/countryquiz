(()=>{"use strict";var e={923:()=>{try{self["workbox:core:6.5.4"]&&_()}catch(e){}},190:()=>{try{self["workbox:expiration:6.5.4"]&&_()}catch(e){}},437:()=>{try{self["workbox:precaching:6.5.4"]&&_()}catch(e){}},185:()=>{try{self["workbox:routing:6.5.4"]&&_()}catch(e){}},833:()=>{try{self["workbox:strategies:6.5.4"]&&_()}catch(e){}}},t={};function s(n){var a=t[n];if(void 0!==a)return a.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,s),r.exports}(()=>{s(923);const e=function(e){let t=e;for(var s=arguments.length,n=new Array(s>1?s-1:0),a=1;a<s;a++)n[a-1]=arguments[a];return n.length>0&&(t+=" :: ".concat(JSON.stringify(n))),t};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const n=new Set;const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!==typeof registration?registration.scope:""},r=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||r(a.precache),o=e=>e||r(a.runtime);function c(e,t){const s=new URL(e);for(const n of t)s.searchParams.delete(n);return s.href}let h;function l(e){e.then((()=>{}))}class u{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const d=e=>new URL(String(e),location.href).href.replace(new RegExp("^".concat(location.origin)),"");function f(e,t){const s=t();return e.waitUntil(s),s}async function p(e,s){let n=null;if(e.url){n=new URL(e.url).origin}if(n!==self.location.origin)throw new t("cross-origin-copy-response",{origin:n});const a=e.clone(),r={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},i=s?s(r):r,o=function(){if(void 0===h){const t=new Response("");if("body"in t)try{new Response(t.body),h=!0}catch(e){h=!1}h=!1}return h}()?a.body:await a.blob();return new Response(o,i)}const g=(e,t)=>t.some((t=>e instanceof t));let w,m;const y=new WeakMap,_=new WeakMap,v=new WeakMap,b=new WeakMap,R=new WeakMap;let x={get(e,t,s){if(e instanceof IDBTransaction){if("done"===t)return _.get(e);if("objectStoreNames"===t)return e.objectStoreNames||v.get(e);if("store"===t)return s.objectStoreNames[1]?void 0:s.objectStore(s.objectStoreNames[0])}return E(e[t])},set:(e,t,s)=>(e[t]=s,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function C(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(m||(m=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(){for(var t=arguments.length,s=new Array(t),n=0;n<t;n++)s[n]=arguments[n];return e.apply(q(this),s),E(y.get(this))}:function(){for(var t=arguments.length,s=new Array(t),n=0;n<t;n++)s[n]=arguments[n];return E(e.apply(q(this),s))}:function(t){for(var s=arguments.length,n=new Array(s>1?s-1:0),a=1;a<s;a++)n[a-1]=arguments[a];const r=e.call(q(this),t,...n);return v.set(r,t.sort?t.sort():[t]),E(r)}}function L(e){return"function"===typeof e?C(e):(e instanceof IDBTransaction&&function(e){if(_.has(e))return;const t=new Promise(((t,s)=>{const n=()=>{e.removeEventListener("complete",a),e.removeEventListener("error",r),e.removeEventListener("abort",r)},a=()=>{t(),n()},r=()=>{s(e.error||new DOMException("AbortError","AbortError")),n()};e.addEventListener("complete",a),e.addEventListener("error",r),e.addEventListener("abort",r)}));_.set(e,t)}(e),g(e,w||(w=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(e,x):e)}function E(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,s)=>{const n=()=>{e.removeEventListener("success",a),e.removeEventListener("error",r)},a=()=>{t(E(e.result)),n()},r=()=>{s(e.error),n()};e.addEventListener("success",a),e.addEventListener("error",r)}));return t.then((t=>{t instanceof IDBCursor&&y.set(t,e)})).catch((()=>{})),R.set(t,e),t}(e);if(b.has(e))return b.get(e);const t=L(e);return t!==e&&(b.set(e,t),R.set(t,e)),t}const q=e=>R.get(e);const D=["get","getKey","getAll","getAllKeys","count"],U=["put","add","delete","clear"],T=new Map;function k(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!==typeof t)return;if(T.get(t))return T.get(t);const s=t.replace(/FromIndex$/,""),n=t!==s,a=U.includes(s);if(!(s in(n?IDBIndex:IDBObjectStore).prototype)||!a&&!D.includes(s))return;const r=async function(e){const t=this.transaction(e,a?"readwrite":"readonly");let r=t.store;for(var i=arguments.length,o=new Array(i>1?i-1:0),c=1;c<i;c++)o[c-1]=arguments[c];return n&&(r=r.index(o.shift())),(await Promise.all([r[s](...o),a&&t.done]))[0]};return T.set(t,r),r}x=(e=>({...e,get:(t,s,n)=>k(t,s)||e.get(t,s,n),has:(t,s)=>!!k(t,s)||e.has(t,s)}))(x);s(190);const N="cache-entries",I=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class K{constructor(e){this._db=null,this._cacheName=e}_upgradeDb(e){const t=e.createObjectStore(N,{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1})}_upgradeDbAndDeleteOldDbs(e){this._upgradeDb(e),this._cacheName&&function(e){let{blocked:t}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const s=indexedDB.deleteDatabase(e);t&&s.addEventListener("blocked",(e=>t(e.oldVersion,e))),E(s).then((()=>{}))}(this._cacheName)}async setTimestamp(e,t){const s={url:e=I(e),timestamp:t,cacheName:this._cacheName,id:this._getId(e)},n=(await this.getDb()).transaction(N,"readwrite",{durability:"relaxed"});await n.store.put(s),await n.done}async getTimestamp(e){const t=await this.getDb(),s=await t.get(N,this._getId(e));return null===s||void 0===s?void 0:s.timestamp}async expireEntries(e,t){const s=await this.getDb();let n=await s.transaction(N).store.index("timestamp").openCursor(null,"prev");const a=[];let r=0;for(;n;){const s=n.value;s.cacheName===this._cacheName&&(e&&s.timestamp<e||t&&r>=t?a.push(n.value):r++),n=await n.continue()}const i=[];for(const o of a)await s.delete(N,o.id),i.push(o.url);return i}_getId(e){return this._cacheName+"|"+I(e)}async getDb(){return this._db||(this._db=await function(e,t){let{blocked:s,upgrade:n,blocking:a,terminated:r}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const i=indexedDB.open(e,t),o=E(i);return n&&i.addEventListener("upgradeneeded",(e=>{n(E(i.result),e.oldVersion,e.newVersion,E(i.transaction),e)})),s&&i.addEventListener("blocked",(e=>s(e.oldVersion,e.newVersion,e))),o.then((e=>{r&&e.addEventListener("close",(()=>r())),a&&e.addEventListener("versionchange",(e=>a(e.oldVersion,e.newVersion,e)))})).catch((()=>{})),o}("workbox-expiration",1,{upgrade:this._upgradeDbAndDeleteOldDbs.bind(this)})),this._db}}class M{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this._isRunning=!1,this._rerunRequested=!1,this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._matchOptions=t.matchOptions,this._cacheName=e,this._timestampModel=new K(e)}async expireEntries(){if(this._isRunning)return void(this._rerunRequested=!0);this._isRunning=!0;const e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),s=await self.caches.open(this._cacheName);for(const n of t)await s.delete(n,this._matchOptions);this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,l(this.expireEntries()))}async updateTimestamp(e){await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(this._maxAgeSeconds){const t=await this._timestampModel.getTimestamp(e),s=Date.now()-1e3*this._maxAgeSeconds;return void 0===t||t<s}return!1}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}s(437);function A(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"===typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const a=new URL(n,location.href),r=new URL(n,location.href);return a.searchParams.set("__WB_REVISION__",s),{cacheKey:a.href,url:r.href}}class P{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async e=>{let{request:t,state:s}=e;s&&(s.originalRequest=t)},this.cachedResponseWillBeUsed=async e=>{let{event:t,state:s,cachedResponse:n}=e;if("install"===t.type&&s&&s.originalRequest&&s.originalRequest instanceof Request){const e=s.originalRequest.url;n?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return n}}}class S{constructor(e){let{precacheController:t}=e;this.cacheKeyWillBeUsed=async e=>{let{request:t,params:s}=e;const n=(null===s||void 0===s?void 0:s.cacheKey)||this._precacheController.getCacheKeyForURL(t.url);return n?new Request(n,{headers:t.headers}):t},this._precacheController=t}}s(833);function O(e){return"string"===typeof e?new Request(e):e}class W{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new u,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const s of this._plugins)this._pluginStateMap.set(s,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let n=O(e);if("navigate"===n.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const a=this.hasCallback("fetchDidFail")?n.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))n=await e({request:n.clone(),event:s})}catch(i){if(i instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:i.message})}const r=n.clone();try{let e;e=await fetch(n,"navigate"===n.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:r,response:e});return e}catch(o){throw a&&await this.runCallbacks("fetchDidFail",{error:o,event:s,originalRequest:a.clone(),request:r.clone()}),o}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=O(e);let s;const{cacheName:n,matchOptions:a}=this._strategy,r=await this.getCacheKey(t,"read"),i=Object.assign(Object.assign({},a),{cacheName:n});s=await caches.match(r,i);for(const o of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await o({cacheName:n,matchOptions:a,cachedResponse:s,request:r,event:this.event})||void 0;return s}async cachePut(e,s){const a=O(e);var r;await(r=0,new Promise((e=>setTimeout(e,r))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:d(i.url)});const o=await this._ensureResponseSafeToCache(s);if(!o)return!1;const{cacheName:h,matchOptions:l}=this._strategy,u=await self.caches.open(h),f=this.hasCallback("cacheDidUpdate"),p=f?await async function(e,t,s,n){const a=c(t.url,s);if(t.url===a)return e.match(t,n);const r=Object.assign(Object.assign({},n),{ignoreSearch:!0}),i=await e.keys(t,r);for(const o of i)if(a===c(o.url,s))return e.match(o,n)}(u,i.clone(),["__WB_REVISION__"],l):null;try{await u.put(i,f?o.clone():o)}catch(g){if(g instanceof Error)throw"QuotaExceededError"===g.name&&await async function(){for(const e of n)await e()}(),g}for(const t of this.iterateCallbacks("cacheDidUpdate"))await t({cacheName:h,oldResponse:p,newResponse:o.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s="".concat(e.url," | ").concat(t);if(!this._cacheKeys[s]){let n=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))n=O(await e({mode:t,request:n,event:this.event,params:this.params}));this._cacheKeys[s]=n}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"===typeof t[e]){const s=this._pluginStateMap.get(t),n=n=>{const a=Object.assign(Object.assign({},n),{state:s});return t[e](a)};yield n}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const n of this.iterateCallbacks("cacheWillUpdate"))if(t=await n({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class B{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.cacheName=o(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"===typeof e.request?new Request(e.request):e.request,n="params"in e?e.params:void 0,a=new W(this,{event:t,request:s,params:n}),r=this._getResponse(a,s,t);return[r,this._awaitComplete(r,a,s,t)]}async _getResponse(e,s,n){let a;await e.runCallbacks("handlerWillStart",{event:n,request:s});try{if(a=await this._handle(s,e),!a||"error"===a.type)throw new t("no-response",{url:s.url})}catch(r){if(r instanceof Error)for(const t of e.iterateCallbacks("handlerDidError"))if(a=await t({error:r,event:n,request:s}),a)break;if(!a)throw r}for(const t of e.iterateCallbacks("handlerWillRespond"))a=await t({event:n,request:s,response:a});return a}async _awaitComplete(e,t,s,n){let a,r;try{a=await e}catch(r){}try{await t.runCallbacks("handlerDidRespond",{event:n,request:s,response:a}),await t.doneWaiting()}catch(i){i instanceof Error&&(r=i)}if(await t.runCallbacks("handlerDidComplete",{event:n,request:s,response:a,error:r}),t.destroy(),r)throw r}}class j extends B{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(j.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let n;const a=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=a.integrity,r=e.integrity,i=!r||r===t;if(n=await s.fetch(new Request(e,{integrity:"no-cors"!==e.mode?r||t:void 0})),t&&i&&"no-cors"!==e.mode){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,n.clone());0}}return n}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const n=await s.fetch(e);if(!await s.cachePut(e,n.clone()))throw new t("bad-precaching-response",{url:e.url,status:n.status});return n}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,n]of this.plugins.entries())n!==j.copyRedirectedCacheableResponsesPlugin&&(n===j.defaultPrecacheCacheabilityPlugin&&(e=s),n.cacheWillUpdate&&t++);0===t?this.plugins.push(j.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}j.defaultPrecacheCacheabilityPlugin={async cacheWillUpdate(e){let{response:t}=e;return!t||t.status>=400?null:t}},j.copyRedirectedCacheableResponsesPlugin={async cacheWillUpdate(e){let{response:t}=e;return t.redirected?await p(t):t}};class F{constructor(){let{cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new j({cacheName:i(e),plugins:[...t,new S({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const n of e){"string"===typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:e,url:a}=A(n),r="string"!==typeof n&&n.revision?"reload":"default";if(this._urlsToCacheKeys.has(a)&&this._urlsToCacheKeys.get(a)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(a),secondEntry:e});if("string"!==typeof n&&n.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==n.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:a});this._cacheKeysToIntegrities.set(e,n.integrity)}if(this._urlsToCacheKeys.set(a,e),this._urlsToCacheModes.set(a,r),s.length>0){const e="Workbox is precaching URLs without revision "+"info: ".concat(s.join(", "),"\nThis is generally NOT safe. ")+"Learn more at https://bit.ly/wb-precache";console.warn(e)}}}install(e){return f(e,(async()=>{const t=new P;this.strategy.plugins.push(t);for(const[a,r]of this._urlsToCacheKeys){const t=this._cacheKeysToIntegrities.get(r),s=this._urlsToCacheModes.get(a),n=new Request(a,{integrity:t,cache:s,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:r},request:n,event:e}))}const{updatedURLs:s,notUpdatedURLs:n}=t;return{updatedURLs:s,notUpdatedURLs:n}}))}activate(e){return f(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),n=[];for(const a of t)s.has(a.url)||(await e.delete(a),n.push(a.url));return{deletedURLs:n}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}let H;const V=()=>(H||(H=new F),H);s(185);const G=e=>e&&"object"===typeof e?e:{handle:e};class ${constructor(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"GET";this.handler=G(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=G(e)}}class Q extends ${constructor(e,t,s){super((t=>{let{url:s}=t;const n=e.exec(s.href);if(n&&(s.origin===location.origin||0===n.index))return n.slice(1)}),t,s)}}class z{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data;0;const s=Promise.all(t.urlsToCache.map((t=>{"string"===typeof t&&(t=[t]);const s=new Request(...t);return this.handleRequest({request:s,event:e})})));e.waitUntil(s),e.ports&&e.ports[0]&&s.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest(e){let{request:t,event:s}=e;const n=new URL(t.url,location.href);if(!n.protocol.startsWith("http"))return void 0;const a=n.origin===location.origin,{params:r,route:i}=this.findMatchingRoute({event:s,request:t,sameOrigin:a,url:n});let o=i&&i.handler;const c=t.method;if(!o&&this._defaultHandlerMap.has(c)&&(o=this._defaultHandlerMap.get(c)),!o)return void 0;let h;try{h=o.handle({url:n,request:t,event:s,params:r})}catch(u){h=Promise.reject(u)}const l=i&&i.catchHandler;return h instanceof Promise&&(this._catchHandler||l)&&(h=h.catch((async e=>{if(l){0;try{return await l.handle({url:n,request:t,event:s,params:r})}catch(a){a instanceof Error&&(e=a)}}if(this._catchHandler)return this._catchHandler.handle({url:n,request:t,event:s});throw e}))),h}findMatchingRoute(e){let{url:t,sameOrigin:s,request:n,event:a}=e;const r=this._routes.get(n.method)||[];for(const i of r){let e;const r=i.match({url:t,sameOrigin:s,request:n,event:a});if(r)return e=r,(Array.isArray(e)&&0===e.length||r.constructor===Object&&0===Object.keys(r).length||"boolean"===typeof r)&&(e=void 0),{route:i,params:e}}return{}}setDefaultHandler(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"GET";this._defaultHandlerMap.set(t,G(e))}setCatchHandler(e){this._catchHandler=G(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this._routes.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this._routes.get(e.method).splice(s,1)}}let J;const X=()=>(J||(J=new z,J.addFetchListener(),J.addCacheListener()),J);function Y(e,s,n){let a;if("string"===typeof e){const t=new URL(e,location.href);0;a=new $((e=>{let{url:s}=e;return s.href===t.href}),s,n)}else if(e instanceof RegExp)a=new Q(e,s,n);else if("function"===typeof e)a=new $(e,s,n);else{if(!(e instanceof $))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});a=e}return X().registerRoute(a),a}class Z extends ${constructor(e,t){super((s=>{let{request:n}=s;const a=e.getURLsToCacheKeys();for(const r of function(e){let{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:n=!0,urlManipulation:a}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return function*(){const r=new URL(e,location.href);r.hash="",yield r.href;const i=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];for(const s of[...e.searchParams.keys()])t.some((e=>e.test(s)))&&e.searchParams.delete(s);return e}(r,t);if(yield i.href,s&&i.pathname.endsWith("/")){const e=new URL(i.href);e.pathname+=s,yield e.href}if(n){const e=new URL(i.href);e.pathname+=".html",yield e.href}if(a){const e=a({url:r});for(const t of e)yield t.href}}()}(n.url,t)){const t=a.get(r);if(t){return{cacheKey:t,integrity:e.getIntegrityForCacheKey(t)}}}}),e.strategy)}}const ee={cacheWillUpdate:async e=>{let{response:t}=e;return 200===t.status||0===t.status?t:null}};var te;self.addEventListener("activate",(()=>self.clients.claim())),function(e){V().precache(e)}([{'revision':'1abb88308d110f76ed6aa70f9ab51c1d','url':'/countryquiz/index.html'},{'revision':null,'url':'/countryquiz/static/css/main.00551ccd.css'},{'revision':null,'url':'/countryquiz/static/js/787.e70eccd5.chunk.js'},{'revision':'4e357960dcdae0c3780e6033dad16b0d','url':'/countryquiz/static/media/abw.7f2de8089209aecdaf83c2ce556a4e15.svg'},{'revision':'82468dd5e8419699e8423c11aa0855af','url':'/countryquiz/static/media/afg.3a00369fedb6fe0ee038146d7fe8dbc3.svg'},{'revision':'f107da1010c723fc8b729d1be982945c','url':'/countryquiz/static/media/ago.799ad11ca65ac34e32ee1efb704a4165.svg'},{'revision':'c9a8ac8fb0c93169fd896fc43e304991','url':'/countryquiz/static/media/aia.6e1799e588e8b3c33511dd5fd81b639a.svg'},{'revision':'b3f467fbbdae9fc88eb3d6efcd7a32c8','url':'/countryquiz/static/media/ala.984f994c15abd43af6207537f56ea941.svg'},{'revision':'7f024538dd57c9e8c13e842aae253462','url':'/countryquiz/static/media/alb.d0507157be3b9160f8d39e6f6c4c44ee.svg'},{'revision':'ac5264950df76dc6129b562fa6e5085a','url':'/countryquiz/static/media/and.f6a5be2d168b883272fd35fcdb31d7c1.svg'},{'revision':'157e1c9657965cfa90072766c9619be0','url':'/countryquiz/static/media/are.cf749be6e341ac4ee8ccbcfd344ad2ac.svg'},{'revision':'0ca92142b4f2fa81db6d0f01b15a3491','url':'/countryquiz/static/media/arg.b2a125cebc670158d98411d6c290d0cd.svg'},{'revision':'bbe661c8913f6e65310307d19841550b','url':'/countryquiz/static/media/arm.62f4fa87abbb24b1c1282bdf40971e47.svg'},{'revision':'6f1787b977f7d856a2175b592b9a9df4','url':'/countryquiz/static/media/asm.4d21362b831a6cc1155222eef4b6b628.svg'},{'revision':'496665702199c71999fd24be66f6d6b9','url':'/countryquiz/static/media/ata.d2bebfcd56a144b47d237c17228ff9e8.svg'},{'revision':'093d20b373b56d020bb0e3e7edda70d1','url':'/countryquiz/static/media/atf.af103f2c1957e898a7f8a26b61fe82aa.svg'},{'revision':'2b2de70780ea4bba5df864a3782b35cd','url':'/countryquiz/static/media/atg.85e138c35145116d83f146719add5c24.svg'},{'revision':'62a67ed8eaf41f021884589a03a95ea4','url':'/countryquiz/static/media/aus.61184ec922b46223bd3af627e8e365b9.svg'},{'revision':'421c6e02f48397b0fcbd1a924412b174','url':'/countryquiz/static/media/aut.58fb796460a8020cdbca602820c254be.svg'},{'revision':'2cbc3453c743b184f93ce7c18c26343f','url':'/countryquiz/static/media/aze.52ffb4dc4ee00d23c8e805bd460fc316.svg'},{'revision':'a022f13a3f1a4e2213756b38c2ff3e9d','url':'/countryquiz/static/media/bdi.2b3222ac08dbb3262263c1136862fc08.svg'},{'revision':'92100a7dcc59b684fae83dccce2829d8','url':'/countryquiz/static/media/bel.09032fa786549edc0d28183779475a8d.svg'},{'revision':'a40a56e2e3db508ea59552c4532fa399','url':'/countryquiz/static/media/ben.0eb596da5a2fd5280e2afb63cbcbd330.svg'},{'revision':'336ae78ac2fd81ab752ec7f87ca402e2','url':'/countryquiz/static/media/bes.92764ae4c719315739ac58173110dd8c.svg'},{'revision':'96595b20440318f404fd9d832e5fdd0b','url':'/countryquiz/static/media/bfa.f40ae8277a69a2fa93af3b2f4de79339.svg'},{'revision':'c2308475c4cfcb8a899445ea7e8bddd1','url':'/countryquiz/static/media/bgd.125979361b3cd747757050b4e7fd5271.svg'},{'revision':'ad61adaaf409a26741e1920683e2b6e6','url':'/countryquiz/static/media/bgr.b599ea313ae894796232de66453f87fe.svg'},{'revision':'e42cb879bc78b0245b1c28c9a5c685ec','url':'/countryquiz/static/media/bhr.94e97f2b1950718d13ac501bf46ca6bb.svg'},{'revision':'cf81714c86a69512e16775cc02d47594','url':'/countryquiz/static/media/bhs.09cba2e1cc7779f9fb3816c505e22899.svg'},{'revision':'4e65dac7b3c158dfe7ff6fa1bb0d619e','url':'/countryquiz/static/media/bih.5035eb59b12bf6ba36c137fa04c23eb5.svg'},{'revision':'7621e31ad048fa4e1ee03186968a7b16','url':'/countryquiz/static/media/blm.10934c7d030bc1be48012ad172bf4db8.svg'},{'revision':'3630412c1edcf70eb938fa98327885d9','url':'/countryquiz/static/media/blr.cc58ee1a0fe69e76acee0568ede37af7.svg'},{'revision':'bd0601872da195c1618c039b85ecc486','url':'/countryquiz/static/media/blz.3e4ebf6174a9e004ad429102270bbc3c.svg'},{'revision':'2738cd224882e961fc8c42738f44932d','url':'/countryquiz/static/media/bmu.ac17446fd0ba3cbe0b6301dbae7ff495.svg'},{'revision':'83e70a05e5d5ea529e93c8e5672040b7','url':'/countryquiz/static/media/bol.2f49a902d9e82d7beb062f098e611891.svg'},{'revision':'ad22ddceb65ae93fcbb0d0ba430f1a8b','url':'/countryquiz/static/media/bra.89ec57ef485b5f22d04a19219dad63ae.svg'},{'revision':'7b48bccd74c8ebc2dc0717c799489b27','url':'/countryquiz/static/media/brain.b5981939db193a6be61da8ce56b0988e.svg'},{'revision':'5f750973bba5c45f8b3b5b8d7a743990','url':'/countryquiz/static/media/brb.16b6cc7218f679e0b5c638cb83c8aec7.svg'},{'revision':'3f611c85a041a8346acc3a5c178f0f0d','url':'/countryquiz/static/media/brn.6c18d0b29ec40e5e061720b7bbaf2e69.svg'},{'revision':'ed0d64cf91f3d0622956bd41f0164d28','url':'/countryquiz/static/media/btn.a164f789c9b00a7d27ade13335456540.svg'},{'revision':'9df0d09af3e42b43dbd6333d8d84ac71','url':'/countryquiz/static/media/bvt.440c02930a793b919fa084b8b53957d4.svg'},{'revision':'f16aea8bc0d862824448ca24ee9b920a','url':'/countryquiz/static/media/bwa.8780a2b06f5087a7d63db8707d0ca81c.svg'},{'revision':'5114ab7bef6181844f3304454874c495','url':'/countryquiz/static/media/caf.dfae15d57e5918189cc6b32418fde1f0.svg'},{'revision':'5ed3ccf2a9b492de39e55e6ff4673cad','url':'/countryquiz/static/media/can.e3f213d12cb16c3a50ad9d061d4a75c7.svg'},{'revision':'40e25cee710248691bb7db31e89589f4','url':'/countryquiz/static/media/cck.29718deaff001884601dfddde39a85ba.svg'},{'revision':'3169b1b2910ef3883b2a518fe5fba808','url':'/countryquiz/static/media/che.8eea47195360a89d479e8e5716266099.svg'},{'revision':'ca6235abce15ee325d619c52891eec6a','url':'/countryquiz/static/media/chl.69ca568579cdbebf89a1cd98a8b69f3f.svg'},{'revision':'0da37a02a510efc55d0a6be197c61884','url':'/countryquiz/static/media/chn.5d2f211e22dfd00d1b54ce62dd8987f9.svg'},{'revision':'8b197aa2a3d2d459c343995d5868486b','url':'/countryquiz/static/media/civ.aabb64ab393c4d2df4bd090454442e4b.svg'},{'revision':'33967b15b75c4e72971ef289c2f322d0','url':'/countryquiz/static/media/cmr.d34d6531d06b6ea57de936a5853a7efe.svg'},{'revision':'4ed65fc4e6fbb6e0cf86173e9fe33e18','url':'/countryquiz/static/media/cod.4d73da318f698c315f98ad9898bc012f.svg'},{'revision':'64d1456d6624074f80d818ba69fc4897','url':'/countryquiz/static/media/cog.84c7f3bc69daf45e40116a942f384477.svg'},{'revision':'aa6af194c1182714e6611fe91bcfbb3a','url':'/countryquiz/static/media/cok.5a897bb7e4dc4e84b6f834de72cb7aa5.svg'},{'revision':'aa935fec9e055b048aec66ec6f8ee516','url':'/countryquiz/static/media/col.85e69ba98659dc565db1f312f499b9f8.svg'},{'revision':'6fc9415f49cbdb9f8e2d33093e0112db','url':'/countryquiz/static/media/com.5d35dc48a62a6d01a69511ad1e1307a5.svg'},{'revision':'721664dcfccb9d9bb8b02bdfadd77688','url':'/countryquiz/static/media/cpv.adeb805384fd9b0f420f1ee13e887c42.svg'},{'revision':'b7c0167c386ba158b5fd760f4b1e2d72','url':'/countryquiz/static/media/cri.ae62b191913d005dc8161861ef8c96c7.svg'},{'revision':'501a3af4c4a17040d356224a10402708','url':'/countryquiz/static/media/cub.f3b3cc55115eeaaaed0bb6ac53246c11.svg'},{'revision':'2e94fa5273760c6e4fec755496cc3ba7','url':'/countryquiz/static/media/cuw.ae87bbd868134b12cd6e7fc8aa4f74db.svg'},{'revision':'bc0c4a2d6c6cdc3bde4a300b48685536','url':'/countryquiz/static/media/cxr.0fc46554c6744ad9727e36a66f9b83e6.svg'},{'revision':'7a57453d220ae09339b659dffd7137cd','url':'/countryquiz/static/media/cym.8b7eec408308cba4f11cbed94f5943e7.svg'},{'revision':'6306ba01820dad5bd5a38016c8ba6605','url':'/countryquiz/static/media/cyp.1a00fbe36da4812b3c9945525b858e96.svg'},{'revision':'36734e420d8077376dbafc1551e8233f','url':'/countryquiz/static/media/cze.2a7f8d614bb4b99dd32626deaa56dc4d.svg'},{'revision':'eb10438dc81cf5e045d13e89187fc735','url':'/countryquiz/static/media/deu.4a57936cbd55718ce1353f28e13b16ee.svg'},{'revision':'18d5ccbb3edf6532dfc8bc5fbc0fadd7','url':'/countryquiz/static/media/dji.e989e78e7d7e56212d2416e19475de4d.svg'},{'revision':'e450aeb5a45e4857a3bc74973e8badcb','url':'/countryquiz/static/media/dma.85fbed72513d5f355586b7c3a9b18dad.svg'},{'revision':'369cae19b04550946583fa536c817591','url':'/countryquiz/static/media/dnk.dd6e957491f4816486d521329e76abb2.svg'},{'revision':'b274ab4a66b4da396c42ffd1b0108379','url':'/countryquiz/static/media/dom.2192dfc331e28fb04fbb2e4e1f60e732.svg'},{'revision':'02d9dbc45b2da46a7c4c6676f8d3b971','url':'/countryquiz/static/media/dza.9bd2a014f38a16a7b0102b9dcbf8944f.svg'},{'revision':'0054c916ed37a922456fc160c52615a3','url':'/countryquiz/static/media/ecu.3eb21e196881c3f912f8f09f6a59c7da.svg'},{'revision':'f89010450820506040ee661662400b09','url':'/countryquiz/static/media/egy.3c4701dc32289a52a8abd83c032836c9.svg'},{'revision':'33836dbe3331b5e13770e3e7e2ca2445','url':'/countryquiz/static/media/eri.a87769f0e33e1c0cc7d723ef64e17e10.svg'},{'revision':'8e58a61aecaa4ec2c892c19aa9fa6463','url':'/countryquiz/static/media/esh.07f7fee67ed2461dac676c31c0c2f832.svg'},{'revision':'e496e9f2fcde70cf48225bbee1167c87','url':'/countryquiz/static/media/esp.dced86a44b10d2699de9f4b4dc4a2c98.svg'},{'revision':'d1dc56a955e4504c6c7e81b7cb9255ab','url':'/countryquiz/static/media/est.c1319e27b0daa27b86cca765453a356d.svg'},{'revision':'e1c01f3be1b16433c9cdbba979a1c76d','url':'/countryquiz/static/media/eth.94b865d1378383f0b36b3a32486aa627.svg'},{'revision':'145ade48bcb63443e42115f5f6d9ae1f','url':'/countryquiz/static/media/fin.11f542b2815f2f49fe7e3097570f0636.svg'},{'revision':'36680df7a0f5c019013c087521a76996','url':'/countryquiz/static/media/fji.99df90e614581710f9edbe5a6e9cf3c9.svg'},{'revision':'b4be9ea11a755cd6827db36f41812e60','url':'/countryquiz/static/media/flag1.08df7bac060942be3983d6dc6d3cb70f.svg'},{'revision':'5a13df935aad2a67aac192a3bbf5b4ba','url':'/countryquiz/static/media/flk.035b62f26d59525cde92a2c0d4bc69f6.svg'},{'revision':'22f15df7203b43376c9f05393cf9caf7','url':'/countryquiz/static/media/fra.d6672cf3319c4f7b8218076117fccbe4.svg'},{'revision':'05d5a4037189c468f3cca0072a766770','url':'/countryquiz/static/media/fro.fb9d35998e2c081cc3e22b304f92626f.svg'},{'revision':'0f58af08097a7163f2e15335c7192180','url':'/countryquiz/static/media/fsm.001dfbd5e9b421d5202159dd967a5d2a.svg'},{'revision':'643102438411bc8aca5cf297eb209fc8','url':'/countryquiz/static/media/gab.61b4f55a717e7b14687561b9b0e92f4f.svg'},{'revision':'3847b01507745ffbba5cd4a44115a42d','url':'/countryquiz/static/media/gbr.aadf532143b6efbd32e1148ea61ee2aa.svg'},{'revision':'9df6d08e8c7c4e8a1efbf95581abd777','url':'/countryquiz/static/media/geo.e6cbcec3890fd4b1779fb837334ca59d.svg'},{'revision':'07a60b4db1e6ab56c406dcecda3a0b60','url':'/countryquiz/static/media/ggy.254e1e0f35bb084e6e7cc029220a5b3f.svg'},{'revision':'edaf8616322016063bdd3ba0c8179bc4','url':'/countryquiz/static/media/gha.399195c4a226cbe1a0a9a68120e1ff57.svg'},{'revision':'c30c04ce4e4e3b8f656843fa72419942','url':'/countryquiz/static/media/gib.2232fcc8102a491d42b91c4422e3bd02.svg'},{'revision':'7090985f254becbcdded50960c54c7c1','url':'/countryquiz/static/media/gin.cc082683e6f7ec81821d7e9de79a082a.svg'},{'revision':'0beb36587301c9ee12f959155d9cdd9f','url':'/countryquiz/static/media/globe.ea43faff935757145bde9cbcdda36091.svg'},{'revision':'dd60d0ab3b127a9386fb1c1d6498580b','url':'/countryquiz/static/media/glp.52cb46482c888f76838b60976d692348.svg'},{'revision':'24cd9e340c87e49ec8e90f37e5410f8e','url':'/countryquiz/static/media/gmb.73e30f5b84f2bddcb97d4f448e178b0e.svg'},{'revision':'a8b90ac21939d355220651f38e829664','url':'/countryquiz/static/media/gnb.671e248d2683935a130dccee4904514c.svg'},{'revision':'49bef4f57b9afdddb16f46ab4ee817b7','url':'/countryquiz/static/media/gnq.4be2c8db89f6c7e42f61fb867a61c845.svg'},{'revision':'e62fd992354e1ddd7519a55064b67af3','url':'/countryquiz/static/media/grc.dabed3497bc92c7d7635ac921d1f08f4.svg'},{'revision':'5a48e1eb55baea26652a9591670a5b30','url':'/countryquiz/static/media/grd.445002c592dbbf553bb9bc48876649bd.svg'},{'revision':'66822d7412de128b9d095b1f6dbfd21d','url':'/countryquiz/static/media/grl.b9773ae2751886a1531dad9a78226fe8.svg'},{'revision':'ab0f01ce1b5c496ec6c96667306f4866','url':'/countryquiz/static/media/gtm.cce7c279706ea8cfd1c48eec1c4c56b7.svg'},{'revision':'4e02d2121cb6c79bcb0d871c93ea2f79','url':'/countryquiz/static/media/guf.53f1b26a0e428f195f575aaa746364de.svg'},{'revision':'9a127f9beade1e901242e1e5cd88f2b2','url':'/countryquiz/static/media/gum.e1fba5ce80ab47bda8a2b66f6cf94a56.svg'},{'revision':'4866f2a935e8f36e115c2cdfa30cb326','url':'/countryquiz/static/media/guy.c80fb0d974a3ff36580cbb5f753ed31c.svg'},{'revision':'ffbfb6f2d5ae766a57ecef556a860c77','url':'/countryquiz/static/media/hkg.0d2d78e79ffcea02680bc1e65cc7d9f3.svg'},{'revision':'494d0d2551754c950bfeeed6efc2949c','url':'/countryquiz/static/media/hmd.d12846e9aaf1842c84fe51bdbea7db9e.svg'},{'revision':'6c116749b9b97100656e459254c6bb0d','url':'/countryquiz/static/media/hnd.1abdb2e5d9a9a4ee7ca921669645b492.svg'},{'revision':'fefe55d9e4ebb27eebabc68266976a44','url':'/countryquiz/static/media/hrv.c455ad78b70406286aaf86938567bcfd.svg'},{'revision':'8701f9870dee5d298c006a7b40c90ea7','url':'/countryquiz/static/media/hti.9df342c64fb08a4b6f9fd00a0470c39d.svg'},{'revision':'c247bf7dc91e8939c76ca5c4f9556436','url':'/countryquiz/static/media/hun.8d07ca1fcafd78e1c6c187c0f90485e9.svg'},{'revision':'7a23267612f292705dc216477448d64b','url':'/countryquiz/static/media/idn.051af5a55573b55c21bce7a3c655d773.svg'},{'revision':'a0e8ba4afeb17bfcb0ab152a3f259210','url':'/countryquiz/static/media/imn.3eab1800a121bf1fda813362bbce7305.svg'},{'revision':'ffcaff4f4ab949948836250067cc5ae8','url':'/countryquiz/static/media/ind.5592a783539181b9ec6bd30b7d02fd1d.svg'},{'revision':'51d0a690af68ff0df98ce841cedf922e','url':'/countryquiz/static/media/iot.c1423404127edd108d6133e30b8d1b4d.svg'},{'revision':'b1a5e20f20906973206658fe79309c03','url':'/countryquiz/static/media/irl.d4c7a977e66d70a5c1ec59a6cbd4d44e.svg'},{'revision':'97ff45a1f16b21a0c10f63fdfb08707d','url':'/countryquiz/static/media/irn.eee5b4ba0f24705b31eac9406011018b.svg'},{'revision':'d944786b85fa8262c3f5bede1a2833ad','url':'/countryquiz/static/media/irq.3ab8ada6463030d09010e943d8a7a8cd.svg'},{'revision':'b30e08dacc1a41597f4d3f66e2461048','url':'/countryquiz/static/media/isl.f530c16103df5e8c2f3e0c16f83c10e7.svg'},{'revision':'748aef4196bc56221aac43db056b85a3','url':'/countryquiz/static/media/isr.8023547060e6224e0780ab2ce7f9c2db.svg'},{'revision':'8c5ed0c458a346acbf59ed7ec4764e5a','url':'/countryquiz/static/media/ita.577045e511d0151038e4977380aff91d.svg'},{'revision':'292273be5758158213c08f72f5a305e7','url':'/countryquiz/static/media/jam.f1b71458554623e6f4598426fffb5d0f.svg'},{'revision':'eec3fb09a015dd6bd20856083db06bca','url':'/countryquiz/static/media/jey.fe19a26d63fb829bfbec9a42962a79fd.svg'},{'revision':'3a568f4fe9077474573936163ea36171','url':'/countryquiz/static/media/jor.b8841c5d163358382ae7f13d40bce23c.svg'},{'revision':'839d6f0b5a1c6267c1540f0058ea2aa3','url':'/countryquiz/static/media/jpn.5421531806902ba68aeadfe0f8f30513.svg'},{'revision':'1a13b7a974d327f74f51fa1fa9d543b8','url':'/countryquiz/static/media/kaz.606c948b295fed3124c6d2c39380f9c4.svg'},{'revision':'7bbfbc313c81dbb85a88c8d5dab951b6','url':'/countryquiz/static/media/ken.b2c67a98c93b71e5d19eab8c243781a9.svg'},{'revision':'68317954a61f11be10b503b2c89d53f1','url':'/countryquiz/static/media/kgz.355cb18173b5034d18be3d0836715551.svg'},{'revision':'e7ca6c72f42086069fe095512342f14e','url':'/countryquiz/static/media/khm.16edd29c43b397a9982f3ef0dd231052.svg'},{'revision':'3da48dc28d33972c635f856e666ef748','url':'/countryquiz/static/media/kir.40e6240b3260b561cc5bb0ddba46be3b.svg'},{'revision':'2f31a6a8da7f62086df81c0601e029e3','url':'/countryquiz/static/media/kna.8f7b92040a28ef53bf9e8edcab990e8c.svg'},{'revision':'2414e64b377b4202b3bb82b261f67986','url':'/countryquiz/static/media/kor.abebc6feacbc54e051630fc23952d404.svg'},{'revision':'a78972ba4977febba060f04e66281ed2','url':'/countryquiz/static/media/kwt.2526e67653c4f5bbc0bb2d91453b76a2.svg'},{'revision':'cd5982c6392a759ba012b567e93b542c','url':'/countryquiz/static/media/lao.863472918a47e9ec403d43efb7d587f3.svg'},{'revision':'730c7a718a66d6446e9874377b5df519','url':'/countryquiz/static/media/lbn.899bf8229ca3eb24a810dbf49241d524.svg'},{'revision':'727b2b9126719b585c9043be47d8d02f','url':'/countryquiz/static/media/lbr.7f3c22b753673a83ed576a2e29e2ee71.svg'},{'revision':'4575fc76dec7b1457e687d5a270694f6','url':'/countryquiz/static/media/lby.fd94202368c42e18b2c08d67f52b5a8c.svg'},{'revision':'299c895ee75006eccbff5091e4809d35','url':'/countryquiz/static/media/lca.01cb67418670db796ad24b541c89d3a8.svg'},{'revision':'f90a36a2ecfec2823ef5f45b78f69834','url':'/countryquiz/static/media/lie.6e319c2236c2a3ab22232813eae4b36f.svg'},{'revision':'94d4a5de05fd395c483c44a22398b562','url':'/countryquiz/static/media/lka.2e656e15c8a343830bfd1a9bbfbe99c0.svg'},{'revision':'9003f8dd01453aa1478581e7cc534aed','url':'/countryquiz/static/media/location.ef60cf16bbc53a4b2458a4215b59b1bb.svg'},{'revision':'5ba575850c722c3c4c8c1934f07a492a','url':'/countryquiz/static/media/lso.06718829165944483847285d9b54ff4e.svg'},{'revision':'144bc35c6f5d290de46ed4c84c45f7e0','url':'/countryquiz/static/media/ltu.ccdb673f0ffae41ec76acdc6da711203.svg'},{'revision':'05ba794a637fc1ab8c34a1b8c4e26d37','url':'/countryquiz/static/media/lux.ae145a05a95ec47aa773b44948598943.svg'},{'revision':'f915ea18e98c50d1b8c59963134db1bb','url':'/countryquiz/static/media/lva.e2706940f4fc1f99fefdf20396626cf5.svg'},{'revision':'0ae0566052e6e2fac6e5a1bd1eda40a9','url':'/countryquiz/static/media/mac.67cab8616d6763077be8ecf5839f5314.svg'},{'revision':'8ccae2883431f9ff6a150938eb8e9ab7','url':'/countryquiz/static/media/maf.f654096b3693e42b38adae8f6ef793cb.svg'},{'revision':'cdd4bc5886ec4fffbe9e741060807328','url':'/countryquiz/static/media/map.0f6e419f05fd4e723b364509f4777948.svg'},{'revision':'4ed4b1ae9364102b3a50b642c8329fd2','url':'/countryquiz/static/media/mar.9fa3376ed02a63e183ea68d907d8699d.svg'},{'revision':'f57d6edd0176fef6e084590dece9d418','url':'/countryquiz/static/media/mco.23f01cccbeec69f1419a85a6fe690e97.svg'},{'revision':'e6ca4b3cfadb15041151d38e719ddd89','url':'/countryquiz/static/media/mda.66855c3c560ee50fcae8bd1a08f840e8.svg'},{'revision':'fe90cd007f18ce0a3e3c75e530a31026','url':'/countryquiz/static/media/mdg.f14751f9da072e946215014c38c89020.svg'},{'revision':'932d7ecad31e8e11102ba141a1278d8c','url':'/countryquiz/static/media/mdv.772dfe149b3c5d51d85045c81b9ae153.svg'},{'revision':'5b59b06054708346bab026f5932ecceb','url':'/countryquiz/static/media/mex.3e3797850cf2dd301d976bfb0351b6d4.svg'},{'revision':'c7cf261486127f0c30484572b81040e5','url':'/countryquiz/static/media/mhl.879cc3288e2090c2fe70aac950e7cee9.svg'},{'revision':'c8f4610ffcac947c872b4292d3d0c611','url':'/countryquiz/static/media/mkd.c917e6453c94bedecdd916d24f7b074d.svg'},{'revision':'b956924e93807692cfcf42956db8aa58','url':'/countryquiz/static/media/mli.66b6c5ad70ebfa915a645c5d1e22c7b3.svg'},{'revision':'62bf4823858e0195ea9fcd283725b28f','url':'/countryquiz/static/media/mlt.8a5842f6774db0c408463d7f7d34d6f6.svg'},{'revision':'bf152e256c0bd38d8a893bc8858f52da','url':'/countryquiz/static/media/mmr.6fa2725bfe2e9aefd4f00d603b0de059.svg'},{'revision':'394a94c54ffc66e0e1532f103affac65','url':'/countryquiz/static/media/mne.e9905c047f20a8528efa98e419260e90.svg'},{'revision':'e47185db631fb682da18253f7c3e1b9d','url':'/countryquiz/static/media/mng.1b24fadb93eff7f072663c1409590baf.svg'},{'revision':'bda183867d8cdbfc0cfa17a93ecfbf57','url':'/countryquiz/static/media/mnp.c8a5590acbe71d61360962b8f3c0e394.svg'},{'revision':'1aad6e076f46c9f57e6a276cb32fdee3','url':'/countryquiz/static/media/moz.f142693581506e75e6ccfdf68e010890.svg'},{'revision':'21785c5ecd62c7223b3f2b924656de51','url':'/countryquiz/static/media/mrt.7491b55285d05222ae5e0d3538e883e2.svg'},{'revision':'5ea1e8cb0d1f821bf6f23c65597d8dda','url':'/countryquiz/static/media/msr.5fa00798a26df45e612ad02f96046cdb.svg'},{'revision':'769132edfb232d6e128e88a4f4fd6882','url':'/countryquiz/static/media/mtq.d4bf389dde9e9f114c0c671cf51155f1.svg'},{'revision':'ba880ad01b5c6018bfd2d12f9722866f','url':'/countryquiz/static/media/mus.e7f52b48787b193129ea803674e67c15.svg'},{'revision':'77942e938bde169424a59b539d9c8120','url':'/countryquiz/static/media/mwi.54fff294db89c87bcd4e05d8f9702ca8.svg'},{'revision':'da5085904eea5ef9a2ca4e70568feb54','url':'/countryquiz/static/media/mys.cbb3ecf5428e52ad8c2c6c30d894aa0f.svg'},{'revision':'500c0077c4e6082929473d740c8ca967','url':'/countryquiz/static/media/myt.5b5887f99fd667ff017dcf5724862484.svg'},{'revision':'1b625f10bda46b1838a7d376c56497d4','url':'/countryquiz/static/media/nam.165d3b7a20efd54c58cc2a3b5d29891d.svg'},{'revision':'79a4a6a61f4b1fb63fa3b70260fbae30','url':'/countryquiz/static/media/ncl.bdbc37096c2b3258674aaf4b3aaf18fb.svg'},{'revision':'4db592b1ee2fef55b99b9d47f8ecb68c','url':'/countryquiz/static/media/ner.d386ddcd6941cd6dbefdd4de68ee84ea.svg'},{'revision':'405fdee4728f8fec2dc62c0c6bdc3e62','url':'/countryquiz/static/media/nfk.ede9778440427ce3e727828082f8574a.svg'},{'revision':'9f67d08cbb8786a11a7db08db0c1e83d','url':'/countryquiz/static/media/nga.132e971033e1f47b595f456e5664cabc.svg'},{'revision':'3940fa0d83977b85184e9d0927ea7584','url':'/countryquiz/static/media/nic.1040a0ffbd126def5adf7aacd482ee25.svg'},{'revision':'12b631ae72087bc1a2637d91c67e3c84','url':'/countryquiz/static/media/niu.c223ecb9519ed652145bcb5605e19a87.svg'},{'revision':'12fcfacb9e09ed0ef1035bbf82a78e0d','url':'/countryquiz/static/media/nld.6365c9885952cf58a42369874bbdbfe8.svg'},{'revision':'9df0d09af3e42b43dbd6333d8d84ac71','url':'/countryquiz/static/media/nor.440c02930a793b919fa084b8b53957d4.svg'},{'revision':'7a40481b3a7f712fdb5f864c3e379ea3','url':'/countryquiz/static/media/npl.dbecbdd897b31a09e3d2eb95f240b31d.svg'},{'revision':'9b65b11fc873a0b12bb0651b626dccb9','url':'/countryquiz/static/media/nru.a1747f663d677d00486b1ae63d37e131.svg'},{'revision':'d4d039b8b4aeec45f83299f34a789e94','url':'/countryquiz/static/media/nzl.412eb056d63b536de01748edae02b0df.svg'},{'revision':'f1446d85ec28b9ed1eee3e7a8f018800','url':'/countryquiz/static/media/omn.9c76ab2f03da1d0b87b124f2eba14f62.svg'},{'revision':'88ab8b850d47c4a702a180a3f24c309e','url':'/countryquiz/static/media/pak.e417a74f419d755899f758dad3474f07.svg'},{'revision':'116b5ae3b3251c9107f94f6f77673880','url':'/countryquiz/static/media/pan.62344a3a71d92fbaa35414f98d632661.svg'},{'revision':'52cdb2faa82e1cf4ac2d710d88d1d96a','url':'/countryquiz/static/media/pcn.291e87370e7640cde10fd663f2d56258.svg'},{'revision':'cf10f781f009bc6916c52bc5958144a1','url':'/countryquiz/static/media/per.c0b4b888d6c5fec6215dd2c2cef97990.svg'},{'revision':'849573cf5c044c34a585ae006a13b4ee','url':'/countryquiz/static/media/phl.0722df5ef2aeb33f3d0f6659380c9b23.svg'},{'revision':'9142054950b9b8a9db1a152e1ae0961b','url':'/countryquiz/static/media/plw.c4cd7e44ba29d19f62d8759b71c124d0.svg'},{'revision':'024ce11ccee0faa0058f09c89389dcb1','url':'/countryquiz/static/media/png.22674151263a78d747e4d2fb551a8839.svg'},{'revision':'13dfd0161448c23eaee0ce9d7c21d6a7','url':'/countryquiz/static/media/pol.6514c409652c9cc3472401fa88a655f6.svg'},{'revision':'d036529709c5dc419385393453f3a19d','url':'/countryquiz/static/media/pri.8ef952162ef556ebb35aeb65c35b5d1d.svg'},{'revision':'ce2fff04ea386c014e43ab2816e78917','url':'/countryquiz/static/media/prk.fe3163dfbba2e5c26792334fcd078d85.svg'},{'revision':'d18eaf8906cf99ad8443fb08d14ff6ea','url':'/countryquiz/static/media/prt.979050d3293902dd83f7370e083269de.svg'},{'revision':'4402d83c79253d7a46ae241a0d3d9f7e','url':'/countryquiz/static/media/pry.4baf6fb8dd8c09dd20dcfde740d4d5a6.svg'},{'revision':'26c67a03d8b65d669f92c7e0b26d7ac6','url':'/countryquiz/static/media/pse.ba70e628c0608ce413d837478b7ae86b.svg'},{'revision':'052b4d29c3ca74c5d022aa6c94c709d7','url':'/countryquiz/static/media/pyf.55ea81de13c06ab5b5c5e70091d444c7.svg'},{'revision':'3c6bb8a5e7e7bc38b353a58abe4f5146','url':'/countryquiz/static/media/qat.670214d42bf2837a94e84fb08c772cfb.svg'},{'revision':'8ccae2883431f9ff6a150938eb8e9ab7','url':'/countryquiz/static/media/reu.f654096b3693e42b38adae8f6ef793cb.svg'},{'revision':'06d984491187e72258c5f5b3828526ec','url':'/countryquiz/static/media/rou.1e4f528176b43ad0d46dff32a9160bcd.svg'},{'revision':'0f7d9a842e0fdea71def81789481c096','url':'/countryquiz/static/media/rus.1093ffe51b637fe0cd5c4f3d24ef25ca.svg'},{'revision':'46de5dde80cbfb3ec6640bada0d96cd7','url':'/countryquiz/static/media/rwa.37ed06b9a6b98ba784c892e24a62587c.svg'},{'revision':'3c964d14db36cd5377e4c9068e31d31e','url':'/countryquiz/static/media/sau.8fc057672f1f490c7162b9a0deed30f0.svg'},{'revision':'e4984ee2bfc1acf1f84841b542dcd99b','url':'/countryquiz/static/media/sdn.0c3bb5edd2f84d1da3d5fed1217eb486.svg'},{'revision':'7818a76e86dd6d7ff6ec6d1a7a102cb9','url':'/countryquiz/static/media/sen.b6a60342c505cfa7ad4ae2a2e0e3babc.svg'},{'revision':'ddbc1fd2f1b2e884a7129881de7b64dc','url':'/countryquiz/static/media/sgp.f23cb83dfe7c7316b5a3dc3eae148b13.svg'},{'revision':'254b2e847c58cac36dd7cdd1feeedede','url':'/countryquiz/static/media/sgs.eb0f308285d7194d5768e7731fb52349.svg'},{'revision':'1b0363faaa264407e724d257bb0f7ad9','url':'/countryquiz/static/media/shn.1b20218dd8a734c427d13e771f20f96b.svg'},{'revision':'9df0d09af3e42b43dbd6333d8d84ac71','url':'/countryquiz/static/media/sjm.440c02930a793b919fa084b8b53957d4.svg'},{'revision':'6cc146f4db05d82897132dce1854041c','url':'/countryquiz/static/media/slb.0458ba7b1f4fc54b83fed6f8d98b9586.svg'},{'revision':'d009ba9e7915521e44b958da79dcd8e4','url':'/countryquiz/static/media/sle.58779ec90803e48846f13f3bf6baafe8.svg'},{'revision':'01804eb4d5e06841cc84aa01ffd9b08d','url':'/countryquiz/static/media/slv.0b9afa2ef4e1187ddf3261b805fccb80.svg'},{'revision':'af21fa397814b1b99e247f6d8adb3bd5','url':'/countryquiz/static/media/smr.c7ae60ec52ba7fc43253bf5faf082f79.svg'},{'revision':'13252df11939685aef5deaebc71130e8','url':'/countryquiz/static/media/som.b8514ebe358e8b88e1855c1e07e6d4a0.svg'},{'revision':'8763937f4928fdb597ff39fe9c504539','url':'/countryquiz/static/media/spm.de1b9ffb764361fb02adfdc345cfbfa4.svg'},{'revision':'48c82dc001f747e925f7e0636dfc70e5','url':'/countryquiz/static/media/srb.f66733b53927125c7abb292bfe066baa.svg'},{'revision':'aaa7a502217bcb0101f7ab4f9fa509ea','url':'/countryquiz/static/media/ssd.31f6582aad9b75f33eb0a7cab4840cb9.svg'},{'revision':'65bc8d85c1dee65a7cad893af5595964','url':'/countryquiz/static/media/stp.34fb0dca91d7afb1739cfb595fee5556.svg'},{'revision':'a3278058a6313946dd2047fef8e06198','url':'/countryquiz/static/media/sur.96883f0390862cd623b0ff122ade7472.svg'},{'revision':'85bb4fb470336f224facb0405b1d127c','url':'/countryquiz/static/media/svk.21657256559ac3fb2cc288b469aada2e.svg'},{'revision':'1f6a0264ee224fc4cf9b7686b0bed630','url':'/countryquiz/static/media/svn.e499c79f35ef86cf99c2e79e0667f537.svg'},{'revision':'f22300df78174c2d2a800a5b5820c275','url':'/countryquiz/static/media/swe.fbabbc9f44e563b99b0930223c5badaa.svg'},{'revision':'474139a688489ab54a36ef1ba7f1f6bd','url':'/countryquiz/static/media/swz.5cfcff61fea5aa0740fb694acb6f6621.svg'},{'revision':'6c5c8e254cb2b2f2dff07457cf6f6b86','url':'/countryquiz/static/media/sxm.4d0834ca649560ec3a63c2860f9652aa.svg'},{'revision':'61563959d9b54e484e509ba7dc0866cb','url':'/countryquiz/static/media/syc.30b710cc1ece7e104ddf737c886a8ff2.svg'},{'revision':'71a6dceb0766b7ec851ba54274461c49','url':'/countryquiz/static/media/syr.61487bb6d9c0d3c75bef0b2cb708f179.svg'},{'revision':'faec029fce804c757cf7cc79cc86558a','url':'/countryquiz/static/media/tca.1c3539c6fba11edb81a5a9a50e1ad56e.svg'},{'revision':'4d3fd4ce990e50ab97e1e3d8ed47d50c','url':'/countryquiz/static/media/tcd.c08a90aa34f5f81d5dfca4803472bcb4.svg'},{'revision':'4f2b16e7d7310006a625c4b97de91818','url':'/countryquiz/static/media/tgo.1503d9fe5f79d3d445da1a6e07b234dd.svg'},{'revision':'8f869fd0c915a9239da4924f9c64b2f9','url':'/countryquiz/static/media/tha.d175aa7aefebdb2ccf062512f523c1eb.svg'},{'revision':'0b7c9e8301cbacb8dffcdf6020e5eea0','url':'/countryquiz/static/media/tjk.cb48a7a1ce2714dafaa7f3f1d9daa4fe.svg'},{'revision':'e2a10ce7df39cefe9928baae275893f0','url':'/countryquiz/static/media/tkl.6bebe926a294f9268bb93323d4ec15ab.svg'},{'revision':'70de91582829683d8a18e8f619a3f15e','url':'/countryquiz/static/media/tkm.a0382b7864c71e1e8d7f34a53201e68d.svg'},{'revision':'946c8529f95c75e1f90ec3e701bf09cd','url':'/countryquiz/static/media/tls.19135d17fb15d0f06532bb8818d89c0f.svg'},{'revision':'24ddf991de560daca2a72fae69439494','url':'/countryquiz/static/media/ton.0e3f20ff0822db7ba22607f3a1fbf17d.svg'},{'revision':'276e2631711125ba421dd8b3dd43767c','url':'/countryquiz/static/media/tto.5d099d9ff60384b35cdb11ac9c443bb6.svg'},{'revision':'efda526be3c436fee144db302eb08cd4','url':'/countryquiz/static/media/tun.5b1ec2df44bde41cad821a9a2dbc90dc.svg'},{'revision':'cfb1ceedfd011c130d483bd4cf96b559','url':'/countryquiz/static/media/tur.7911d05f4effa632e9f355fa81d814ec.svg'},{'revision':'f4643d9c58c65edc5e3a9cff1e633960','url':'/countryquiz/static/media/tuv.d9f7584a5579950bd730e0754b6343b6.svg'},{'revision':'aeea6738d1afdfddff9712085927a8be','url':'/countryquiz/static/media/twn.c8b88661f86f042cd3c8ae4a1cdb1362.svg'},{'revision':'9d53a8bbce181bffe68643c28460a3a6','url':'/countryquiz/static/media/tza.9c8373425e3ee799aaa5be21224b2e83.svg'},{'revision':'af1a7c08a3e536c14db8f60c943dac9c','url':'/countryquiz/static/media/uga.c0e8b30b8b95c8deba74225db9a59e18.svg'},{'revision':'0bfbc3bf57954d823d84cded352c799c','url':'/countryquiz/static/media/ukr.7401bf19c0c0fbb2b58d41801399385a.svg'},{'revision':'bc6889943718410f96a7467dddb5229f','url':'/countryquiz/static/media/umi.18335d3e98818ddd154f2b7841f5f51e.svg'},{'revision':'14632bb3647453ba40343e6d1a09c5c4','url':'/countryquiz/static/media/unk.ec2a01aafc9d02bad779dac0efe9667d.svg'},{'revision':'cdd5f75c6ada55a84285b677737f7b8d','url':'/countryquiz/static/media/ury.ef0b84fe6a1ac10e69874ece5473e0b5.svg'},{'revision':'2f011938f62db9d0d4e812a0ba1fbee2','url':'/countryquiz/static/media/usa.328f0469f9a133258a19c887a76ffc52.svg'},{'revision':'aeee80c517e002abf4be485a3bd10154','url':'/countryquiz/static/media/uzb.f3249da27102241eb388308acdcf8455.svg'},{'revision':'21dd6b33020d6722380c59b533e2ef26','url':'/countryquiz/static/media/vat.14992ab1349efee31134bbba8b7a7e81.svg'},{'revision':'d92854fd20fab87b091ffb289eda45a4','url':'/countryquiz/static/media/vct.2c3d701f788c5d26666e22fbfc232585.svg'},{'revision':'f706f68f9c2ff25f65b75a60f982ac9e','url':'/countryquiz/static/media/ven.dd565aa9cc74d18ecbc01aab67a5ab30.svg'},{'revision':'be1be35813e6970195ba3f657962979b','url':'/countryquiz/static/media/vgb.1ee03e6231ea424b70c19ed512a5a28d.svg'},{'revision':'1fb5ff758aca006ce2e667a68a9f3f95','url':'/countryquiz/static/media/vir.eff17acc2392fe728f18653e556acd39.svg'},{'revision':'1290397054517b5da7c2350fa21cf44a','url':'/countryquiz/static/media/vnm.e5fdd910ad7c4d0639b2fc5c58737534.svg'},{'revision':'9e3b3e3b4387cbc4f6638c0957d53056','url':'/countryquiz/static/media/vut.716e8eabebba1c5f784542437678ffdc.svg'},{'revision':'2319be5ce967c7c2e485b2e3f4a9516d','url':'/countryquiz/static/media/wlf.eba2aa2c48cbb696cb7545b0d0f4b886.svg'},{'revision':'3fc21e5c254bd200bed20cc4afeb43c6','url':'/countryquiz/static/media/wsm.12c32473e8db3dc9d53209562b487216.svg'},{'revision':'dc217b66f8e08019008d358f8cf449cc','url':'/countryquiz/static/media/yem.0bbcae032fc20347492abf8e3c62bb63.svg'},{'revision':'6df550df895b4a7a15c44353f1f83941','url':'/countryquiz/static/media/zaf.ea180aacea250f368d879178731ce407.svg'},{'revision':'18ea30f3680a7b7de6b53b9cf280355d','url':'/countryquiz/static/media/zmb.a441b76923a8d42ea8b3c27c2e283e9b.svg'},{'revision':'e003c5625f0c5a6e483d0a65b01b8b2b','url':'/countryquiz/static/media/zwe.038351693917ae800ad3a55eb58f7dea.svg'}]),function(e){const t=V();Y(new Z(t,e))}(te);const se=new RegExp("/[^/?]+\\.[^/]+$");var ne;Y((e=>{let{request:t,url:s}=e;return"navigate"===t.mode&&(!s.pathname.startsWith("/_")&&!s.pathname.match(se))}),(ne="/countryquiz/index.html",V().createHandlerBoundToURL(ne))),Y((e=>{let{url:t}=e;return t.origin===self.location.origin&&(t.pathname.endsWith(".png")||t.pathname.endsWith(".json"))}),new class extends B{constructor(){super(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift(ee)}async _handle(e,s){const n=s.fetchAndCachePut(e).catch((()=>{}));s.waitUntil(n);let a,r=await s.cacheMatch(e);if(r)0;else{0;try{r=await n}catch(i){i instanceof Error&&(a=i)}}if(!r)throw new t("no-response",{url:e.url,error:a});return r}}({cacheName:"images",plugins:[new class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.cachedResponseWillBeUsed=async e=>{let{event:t,request:s,cacheName:n,cachedResponse:a}=e;if(!a)return null;const r=this._isResponseDateFresh(a),i=this._getCacheExpiration(n);l(i.expireEntries());const o=i.updateTimestamp(s.url);if(t)try{t.waitUntil(o)}catch(c){0}return r?a:null},this.cacheDidUpdate=async e=>{let{cacheName:t,request:s}=e;const n=this._getCacheExpiration(t);await n.updateTimestamp(s.url),await n.expireEntries()},this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&function(e){n.add(e)}((()=>this.deleteCacheAndMetadata()))}_getCacheExpiration(e){if(e===o())throw new t("expire-custom-caches-only");let s=this._cacheExpirations.get(e);return s||(s=new M(e,this._config),this._cacheExpirations.set(e,s)),s}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;const t=this._getDateHeaderTimestamp(e);if(null===t)return!0;return t>=Date.now()-1e3*this._maxAgeSeconds}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete();this._cacheExpirations=new Map}}({maxEntries:50})]})),self.addEventListener("message",(e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}))})()})();
//# sourceMappingURL=service-worker.js.map