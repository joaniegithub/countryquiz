{"version":3,"file":"static/js/994.558aa5f1.chunk.js","mappings":"wJAIA,MA0BA,EA1BkBA,IACd,MAAM,QAAEC,EAAO,aAAEC,EAAY,KAAEC,GAASH,EAExC,OACII,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACAC,UAAU,MACVC,IAAG,GAAAC,OAAKC,eAAsB,4BAAAD,OAA2BP,EAAQS,cAAa,QAC9EC,IAAEC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEC,OAAQ,OACRC,SAAU,MACVC,UAAW,QACPZ,EACE,CAAEa,UAAU,OAADR,OAASC,eAAsB,gCAAgCQ,SAAU,aACpF,CAAC,GAAG,CAAF,GACRC,cAAe,QAMZhB,IAET,C,uLCZV,MA6KA,EA7KiBF,IACb,MAAM,KAAEmB,EAAI,YAAEC,EAAW,UAAEC,EAAS,UAAEC,EAAS,WAAEC,EAAU,QAAEC,GAAYxB,EACnEyB,GAAQC,EAAAA,EAAAA,MACPC,EAAQC,IAAaC,EAAAA,EAAAA,eAASC,IAC9BC,EAAQC,IAAaH,EAAAA,EAAAA,eAASC,IAC9BG,EAAoBC,IAAyBL,EAAAA,EAAAA,eAASC,IAQtDK,EAAYC,IAAiBP,EAAAA,EAAAA,eAASC,IACtCO,EAAMC,IAAWT,EAAAA,EAAAA,eAASC,GAoCjC,IAlCAS,EAAAA,EAAAA,YAAU,KACN,GAAIlB,GAAaD,EAAa,CAC1BgB,OAAcN,GACd,MAAMU,EAAQ,GAAAhC,OAAMC,eAAsB,wBAAAD,OAAuBa,EAAS,KAAAb,OAAIY,EAAW,aACzFqB,MAAM,GAADjC,OAAIgC,IACJE,MAAMC,IACH,IAAKA,EAASC,GAEV,MAAM,IAAIC,MAAM,+BAEpB,OAAOF,EAASG,MAAM,IAEzBJ,MAAMK,IAEHT,EAAQlB,GACRgB,EAAcW,GACdf,EAAUgB,IAAYD,GAAU,IAEnCE,OAAOC,OAGhB,IACD,CAAC7B,EAAWD,KAEfmB,EAAAA,EAAAA,YAAU,KAEN,GAAIf,GAAWA,EAAQ2B,OAAQ,CAC3B,MAAMC,EAAS5B,EAAQ6B,KAAKC,IAAMC,EAAAA,EAAAA,IAAiBD,KACnDpB,EAAsBkB,EAC1B,MACIlB,OAAsBJ,EAC1B,GACD,CAACN,IAEAH,GAAaD,IAAgBe,EAC7B,OAAO,KAUX,MAcMqB,EAAaC,IACVrC,GACK,OAANO,QAAM,IAANA,GAAAA,EAAQ+B,MAAMzB,EAAmB,GAAI,EAAG,CAAE0B,SAAS,GACvD,EAGEC,EAAO,IAAIC,IAAAA,MAAO,CACpBC,QAASC,EAAAA,EACTC,WAAY,IAAIH,IAAAA,OAAQ,GAAI,IAC5BI,YAAa,KACbC,UAAW,KACXC,WAAY,KACZC,kBAActC,EACduC,SAAU,IAAIR,IAAAA,OAAQ,GAAI,MAI9B,OACIzD,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACAM,GAAI,CACA2D,MAAO,OACPzD,OAAO,GAADL,OAAKc,GAEX,qBAAsB,CAClBgD,MAAO,OACPzD,OAAO,GAADL,OAAKc,IAGf,eAAgB,CACZiD,OAAQ,6FAEZ,iBAAkB,CACdA,OAAQ,2FAEZ,gBAAiB,CACbA,OAAQ,6FAEdC,UAEFC,EAAAA,EAAAA,MAACC,EAAAA,EACG,CACAC,GAAG,aACHC,OA9GG,CAAC,QAAS,KA+GbC,KAAMrD,EAAU,EAAI,EACpBsD,iBAAiB,EACjBC,UAAW,CACP,EAAE,IAAK,KACP,CAAC,GAAI,MAETC,mBAAoB,EACpBC,UAAYxB,IACR7B,EAAU6B,EAAEyB,OAAO,EACrBV,SAAA,CAEI,OAAJrD,QAAI,IAAJA,GAAAA,EAAMgE,kBAgBJ,KAfA5D,GACInB,EAAAA,EAAAA,KAACgF,EAAAA,EACG,CACAC,IAAI,+GAEJC,QAAS,MAGblF,EAAAA,EAAAA,KAACgF,EAAAA,EACG,CACAC,IAAI,sEAEJC,QAAS,MAIrBlF,EAAAA,EAAAA,KAACmF,EAAAA,EAGG,CAEAC,KAAMrD,EACNsD,MAhJCC,IAAqB,IAApB,WAAEC,GAAYD,EAC5B,MAAO,CAAEE,OAAQ,EAAGC,MAAOpE,EAAMqE,QAAQC,QAAQC,KAAM,EAgJ3CC,cA5FMC,CAACC,EAASC,KAGxBrE,GACAJ,EAAO0E,YACH,CACI,CAACtE,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,KAEvB,CAAE4B,SAAS,EAAO2C,QAAS,CAAC,GAAI,KAExC,GA8EiBjE,GAKRJ,IACqB,OAAlBA,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBoB,KAAI,CAACC,EAAGiD,IACtBjD,GACElD,EAAAA,EAAAA,KAACoG,EAAAA,EAAM,CAEHC,cAAe,CACXC,IAAKlD,GAETI,KAAMA,EACN+C,SAAUrD,GALLiD,GAOT,YAGd,C,mMCxKd,MA+OA,EA/OqBvG,IACjB,MAAM,MAAE4G,EAAK,OAAEC,EAAM,QAAEC,EAAO,OAAEC,EAAM,MAAEC,GAAUhH,EAC5CyB,GAAQC,EAAAA,EAAAA,KACRuF,GAAWC,EAAAA,EAAAA,OACX,EAAEC,IAAMC,EAAAA,EAAAA,OAEPC,EAAgBC,IAAqBzF,EAAAA,EAAAA,UAAS+E,GAASC,EAAO,KAC9DU,EAAgBC,IAAqB3F,EAAAA,EAAAA,UAAS,IAC9C4F,EAAMC,IAAW7F,EAAAA,EAAAA,WAAS,IAC1B8F,EAAkBC,IAAuB/F,EAAAA,EAAAA,WAAS,IAClDgG,EAA2BC,IAAgCjG,EAAAA,EAAAA,WAAS,GAoB3E,IAlBAU,EAAAA,EAAAA,YAAU,KACNqF,GAAoB,GACpBJ,EAAkB,GAClBF,EAAkBV,GAASC,EAAO,GAAG,GACtC,CAACD,EAAOC,KAEXtE,EAAAA,EAAAA,YAAU,KACQ,IAAVyE,GACAY,GAAoB,EACxB,GACD,CAACZ,KAEJzE,EAAAA,EAAAA,YAAU,KACFsE,GACAS,EAAkBT,EAAOU,GAC7B,GACD,CAACA,IAEe,OAAdF,QAAc,IAAdA,IAAAA,EAAgB9G,IACjB,OAAO,KAGX,MAGMwH,EAAaA,KACfL,GAAQ,EAAM,EAqBlB,OAAKM,UAAUC,QA0BXxD,EAAAA,EAAAA,MAACpE,EAAAA,EAAG,CAAC6H,QAAQ,eAAevB,SAAS,WAAUnC,SAAA,EAC3CpE,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACAC,UAAU,MACVC,IAAK8G,EAAe9G,IACpB4H,IAAKrB,EACLsB,QAxDOC,KACfX,GAAQ,EAAK,EAwDL/G,IAAEC,EAAAA,EAAAA,GAAA,CACEC,OAAQ,OACRE,UAAW,OACXuD,MAAO,OACPxD,SAAU,OACVwH,cAAe,SACfC,OAAQ,WACLvI,EAAMwI,cAGhBzB,GACGtC,EAAAA,EAAAA,MAAAgE,EAAAA,SAAA,CAAAjE,SAAA,EACIpE,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACAqI,wBAAyBf,EAAmB,CAAEgB,OAAQtB,EAAeuB,aAAgB,KACrFjI,GAAI,CACAkI,QAAS,mBACTlC,SAAU,WACVmC,OAAQ,EACRC,UAAUC,EAAAA,EAAAA,IAAQ,IAClBC,UAAW,OACXpD,MAAOpE,EAAMqE,QAAQoD,KAAKN,YAC1BtC,QAAQ,GAAD9F,QAAKwI,EAAAA,EAAAA,IAAQ,GAAE,KAAAxI,QAAIwI,EAAAA,EAAAA,IAAQ,IAClC,YAAa,CACTD,UAAUC,EAAAA,EAAAA,IAAQ,IAClBnD,MAAOpE,EAAMqE,QAAQoD,KAAKN,YAC1BO,oBAAqB1H,EAAMqE,QAAQoD,KAAKN,cAE9CpE,SAEAmD,EAIE,MAHAvH,EAAAA,EAAAA,KAACgJ,EAAAA,EAAI,CAAC9I,UAAU,SAAS8H,QAjFvBiB,KACtBvB,GAA6B,EAAK,EAgFsCtD,SAC/C2C,EAAE,uBAIf/G,EAAAA,EAAAA,KAACkJ,EAAAA,EAAa,CACV7B,KAAMI,EACN0B,MAAOpC,EAAE,mBACT+B,KAAM/B,EAAE,uBACRqC,YAvFgBC,KAChC7B,GAAoB,GACpBE,GAA6B,GAC7Bb,GAASyC,EAAAA,EAAAA,IAAW,IAAI,EAqFRC,UAAWxC,EAAE,kBACbyC,aApFUC,KAC1B/B,GAA6B,EAAM,EAoFnBgC,WAAY3C,EAAE,kBAItB1C,EAAAA,EAAAA,MAAAgE,EAAAA,SAAA,CAAAjE,SAAA,EACIpE,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACAqI,wBAAyB,CAAEC,OAAQtB,EAAeuB,aAClDjI,GAAI,CACAkI,QAAS,mBACTlC,SAAU,WACVmC,OAAQ,EACRC,UAAUC,EAAAA,EAAAA,IAAQ,IAClBC,UAAW,OACXpD,MAAOpE,EAAMqE,QAAQoD,KAAKN,YAC1BtC,QAAQ,GAAD9F,QAAKwI,EAAAA,EAAAA,IAAQ,GAAE,KAAAxI,QAAIwI,EAAAA,EAAAA,IAAQ,IAClCe,EAAG,CACClE,MAAOpE,EAAMqE,QAAQoD,KAAKN,iBAI/B,OAAN/B,QAAM,IAANA,OAAM,EAANA,EAAQ1D,QAAS,IACdsB,EAAAA,EAAAA,MAAAgE,EAAAA,SAAA,CAAAjE,SAAA,EACIpE,EAAAA,EAAAA,KAAC4J,EAAAA,EAAU,CACPC,UAAU,aACV7B,QAzGT8B,KACf1C,EAAkBD,EAAiB,EAAE,EAyGb4C,SAA6B,IAAnB5C,EACV6C,KAAK,SACLzJ,GAAI,CACAgG,SAAU,WACV0D,MAAMrB,EAAAA,EAAAA,IAAQ,GACdsB,IAAK,EACLzJ,QAAQmI,EAAAA,EAAAA,IAAQ,IAChBuB,QAA4B,IAAnBhD,EAAuB,GAAM,EACtCiD,IAAK,CACDC,KAAM,SAEZjG,UAEFpE,EAAAA,EAAAA,KAACsK,EAAAA,EAAmB,OAExBtK,EAAAA,EAAAA,KAAC4J,EAAAA,EAAU,CACPC,UAAU,aACV7B,QAxHbuC,KACXnD,EAAkBD,EAAiB,EAAE,EAwHb4C,SAAU5C,IAAmBV,EAAO1D,OAAS,EAC7CiH,KAAK,SACLzJ,GAAI,CACAgG,SAAU,WACViE,OAAO5B,EAAAA,EAAAA,IAAQ,GACfsB,IAAK,EACLzJ,QAAQmI,EAAAA,EAAAA,IAAQ,IAChBuB,QAAShD,IAAmBV,EAAO1D,OAAS,EAAI,GAAM,EACtDqH,IAAK,CACDC,KAAM,SAEZjG,UAEFpE,EAAAA,EAAAA,KAACyK,EAAAA,EAAoB,aAMzCzK,EAAAA,EAAAA,KAAC0K,EAAAA,EAAK,CACFrD,KAAMA,EACNsD,QAAShD,EACT,kBAAgB,oBAChB,mBAAiB,0BAAyBvD,UAE1CpE,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACAM,GAAI,CACAkI,QAAS,mBACTmC,OAAQ,iBACRrE,SAAU,YACZnC,UAEFpE,EAAAA,EAAAA,KAAA,OACIG,IAAK8G,EAAe9G,IACpB4H,IAAKrB,EACLsB,QAASL,EACTtC,MAAO,CACHyC,QAAS,QACTrH,OAAQ,OACRyD,MAAO,OACPxD,SAAU,OACVC,UAAW,+BA5J3BX,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACAC,UAAU,OACVK,GAAI,CACAE,OAAQ,QACRyD,MAAO,QACP4D,QAAS,OACT+C,eAAgB,SAChBC,WAAY,SACZF,OAAO,aAADxK,OAAeiB,EAAMqE,QAAQqF,UAAUC,SAC7CC,gBAAiB5J,EAAMqE,QAAQwF,QAAQC,OACvCf,IAAK,CACD3E,MAAOpE,EAAMqE,QAAQqF,UAAUC,QAC/BvK,QAAQmI,EAAAA,EAAAA,IAAQ,IAChB1E,OAAO0E,EAAAA,EAAAA,IAAQ,IACfyB,KAAM,iBAEZjG,UAEFpE,EAAAA,EAAAA,KAACoL,EAAAA,EAAY,KA4Jf,C,sFCnPd,MA2BA,EA3BmBxL,IACf,MAAM,KAAE4D,GAAS5D,EACXyB,GAAQC,EAAAA,EAAAA,KACd,OACItB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACAC,UAAU,OACVK,GAAI,CACAE,OAAQ,QACRyD,MAAO,QACP4D,QAAS,OACT+C,eAAgB,SAChBC,WAAY,SACZF,OAAO,aAADxK,OAAeiB,EAAMqE,QAAQqF,UAAUC,SAC7CC,gBAAiB5J,EAAMqE,QAAQwF,QAAQC,OACvCf,IAAK,CACD3E,MAAOpE,EAAMqE,QAAQqF,UAAUC,QAC/BvK,QAAQmI,EAAAA,EAAAA,IAAQ,IAChB1E,OAAO0E,EAAAA,EAAAA,IAAQ,IACfyB,KAAM,iBAEZjG,UAEDiH,EAAAA,EAAAA,IAAW7H,IACV,C,2HCnBd,MA6HA,EA7HqB5D,IAAW,IAAD0L,EAAAC,EAAAC,EAAAC,EAAAC,EAC3B,MAAM,QAAE7L,EAAO,OAAE0K,EAAM,WAAET,EAAU,eAAE6B,GAAmB/L,GAClD,KAAEgM,EAAI,EAAE7E,IAAMC,EAAAA,EAAAA,MACd6E,GAAYC,EAAAA,EAAAA,MAElB,IAAKjM,EACD,OAAO,KAGX,MAAMkM,EAAuB,QAAjBT,EAAGzL,EAAQkM,cAAM,IAAAT,OAAA,EAAdA,EAAgBU,QAAQJ,EAAKK,UACtCC,EAA6B,QAApBX,EAAG1L,EAAQqM,iBAAS,IAAAX,OAAA,EAAjBA,EAAmBS,QAAQJ,EAAKK,UAE5CE,GAAqBtM,EAAQuM,aAAevM,EAAQwM,eACpDC,EAAwBH,EAAoBN,EAAUhM,EAAQwM,qBAAkB3K,EAEhF6K,EACF1M,EAAQ0M,SAAW1M,EAAQ0M,QAAQxJ,OAC7BlD,EAAQ0M,QAAQtJ,KAAI,CAAC2H,EAAQ4B,KACzB,MAAMC,EAAUZ,EAAUjB,GAE1B,OACI5K,EAAAA,EAAAA,KAAC0M,EAAAA,EAAoB,CAEjB7M,QAAS4M,EACTd,eAAgBA,EAChBM,SAAUL,EAAKK,UAHVrB,EAIP,IAGV,GACJ+B,EAAY9M,EAAQ8M,UAAYC,OAAOC,OAAOhN,EAAQ8M,WAAWG,KAAK,MAAQ,GAC9EC,EAAalN,EAAQkN,WACrBH,OAAOI,KAAKnN,EAAQkN,YACf9J,KAAKgK,GAAQpN,EAAQkN,WAAWE,GAAKC,OACrCJ,KAAK,MACV,GAEAK,EAAgB,CAClB,CACIC,MAAOrG,EAAE,iBACTsG,MAAOxN,EAAQyN,gBAAgB1B,EAAKK,WAExC,CACImB,MAAOrG,EAAE,aACTsG,MAAM,GAADjN,OAAKP,EAAQ0N,KAAI,MAAAnN,OAAKP,EAAQ2N,OAEvC,CACIJ,MAAOrG,EAAE,UACTsG,MAAOxN,EAAQuM,YAAcrF,EAAE,eAAiBA,EAAE,iBAElDoF,EACE,CACI,CACIiB,MAAOrG,EAAE,mBACTsG,OACIrN,EAAAA,EAAAA,KAAC0M,EAAAA,EAAoB,CACjB7M,QAASyM,EACTX,eAAgBA,EAChBM,SAAUL,EAAKK,aAK/B,GACN,CACImB,MAAOrG,EAAE,WACTsG,MAAc,OAAPxN,QAAO,IAAPA,GAAgB,QAAT2L,EAAP3L,EAAS4N,eAAO,IAAAjC,OAAT,EAAPA,EAAkBvI,KAAKyK,GAAQA,EAAIR,KAAKtB,EAAKK,YAAWa,KAAK,OAExE,CACIM,MAAOrG,EAAE,gBACTsG,MAAc,OAAPxN,QAAO,IAAPA,GAAe,QAAR4L,EAAP5L,EAAS8N,cAAM,IAAAlC,OAAR,EAAPA,EAAiBxI,KAAK2K,GAASA,EAAKV,KAAKtB,EAAKK,YAAWa,KAAK,OAEzE,CACIM,MAAOrG,EAAE,UACTsG,MAAM,GAADjN,OAAK2L,GAAM3L,OAAG8L,EAAS,KAAA9L,OAAQ8L,GAAc,KAEtD,CACIkB,MAAOrG,EAAE,WACTsG,MAAOd,GAEX,CACIa,MAAOrG,EAAE,aACTsG,MAAOV,GAEX,CACIS,MAAOrG,EAAE,cACTsG,MAAON,IAIT3L,EAAU,IACF,OAAPvB,QAAO,IAAPA,GAAgB,QAAT6L,EAAP7L,EAAS4N,eAAO,IAAA/B,OAAT,EAAPA,EAAkBzI,KAAK4K,GAAMA,EAAEC,eAEpC3J,QAAQ0J,KAAQA,IAElB,OACIxJ,EAAAA,EAAAA,MAAC0J,EAAAA,GAAQ,CAAA3J,SAAA,EACLpE,EAAAA,EAAAA,KAACgO,EAAAA,GAAS,CAAC7E,MAAOtJ,EAAQmM,QAAQJ,EAAKK,UAAWnC,WAAYA,EAAYS,OAAQA,KAClFvK,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACAM,GAAI,CACAuH,QAAS,OACTgD,WAAY,SACZD,eAAgB,UAClBzG,UAEFpE,EAAAA,EAAAA,KAACiO,EAAAA,EAAQ,CACLpO,QAASA,EAAQ2N,KACjB1N,aAAc,CACVqE,OAAQ,8CACRxD,UAAW,YAIvBX,EAAAA,EAAAA,KAACkO,EAAAA,EAAO,CACJ9M,QAASA,EACTJ,YAAanB,EAAQ2N,KAAKlN,cAC1BW,UAAU,MACVE,YAAY,EACZD,UAAU,UAEdlB,EAAAA,EAAAA,KAACmO,EAAAA,GAAS,CAACC,KAAI,WAAAhO,OAAaP,EAAQmM,QAAQJ,EAAKK,WAAaoC,KAAMlB,MAC7D,C,iGC5HZ,MAAMT,EAAwB9M,IACjC,MAAM,QAAEC,EAAO,eAAE8L,EAAc,SAAEM,GAAarM,EACxCyB,GAAQC,EAAAA,EAAAA,KAEd,OACI+C,EAAAA,EAAAA,MAACiK,EAAAA,EAAU,CACPpO,UAAU,IACV4H,QAAQ,eACRa,UAAUC,EAAAA,EAAAA,IAAQ,IAClB2F,YAAY3F,EAAAA,EAAAA,IAAQ,IACpBZ,QAASA,KACS,OAAd2D,QAAc,IAAdA,GAAAA,EAAiB9L,EAAS2O,EAAAA,aAAa,EAG3CjO,GAAI,CACAkO,WAAY,cACZhJ,MAAOpE,EAAMqE,QAAQoD,KAAKlD,KAC1BgF,OAAQ,OACR1E,QAAS,EACTwI,eAAgB,YAChB7F,UAAW,OACX8F,GAAI,OACJxG,OAAQwD,EAAiB,UAAY,UACrC,UAAW,CACPlG,MAAOpE,EAAMqE,QAAQwF,QAAQtF,OAEnCxB,SAAA,CAEDvE,EAAQmM,QAAQC,GAAU,QAC3BjM,EAAAA,EAAAA,KAACiO,EAAAA,EAAQ,CACLpO,QAASA,EAAQ2N,KACjB1N,aAAc,CACVY,UAAUkI,EAAAA,EAAAA,IAAQ,IAClBjI,UAAW,OACXuD,MAAO,OACPzD,QAAQmI,EAAAA,EAAAA,IAAQ,IAChBV,cAAe,SACf3B,SAAU,gBAxBb1G,EAAQ2N,KA2BJ,C,kJCpCrB,MAyFA,EAzFsB5N,IAClB,MAAM,SAAEgP,EAAQ,OAAErE,EAAM,WAAET,EAAU,eAAE6B,GAAmB/L,GACnD,KAAEgM,EAAI,EAAE7E,IAAMC,EAAAA,EAAAA,MAEpB,IAAK4H,EACD,OAAO,KAGX,MAAM/C,EACF+C,EAAS/O,SAAW+O,EAAS/O,QAAQkD,OAC/B6L,EAAS/O,QAAQoD,KAAI,CAAC4K,EAAGrB,KAEjBxM,EAAAA,EAAAA,KAAC0M,EAAAA,EAAoB,CAEjB7M,QAASgO,EACTlC,eAAgBA,EAChBM,SAAUL,EAAKK,UAHV4B,EAAEL,QAOnB,GAEJL,EAAgB,CAClB,CACIC,MAAOrG,EAAE,eACTsG,MAAOuB,EAASC,eAEpB,CACIzB,MAAOrG,EAAE,WACTsG,MAAOxB,MAUP+C,EAASE,MACP,CACI,CACI1B,MAAOrG,EAAE,eACTsG,OACIhJ,EAAAA,EAAAA,MAAC2E,EAAAA,EAAI,CAAC+F,KAAI,oCAAA3O,OAAsCwO,EAASE,OAAShK,OAAO,SAAQV,SAAA,CAC5EwK,EAASE,MAAM,QAEhB9O,EAAAA,EAAAA,KAACgP,EAAAA,EAAa,CACVhF,KAAK,QACLzJ,GAAI,CAAE2H,cAAe,SAAUhE,MAAO,SAAUzD,OAAQ,iBAM5E,IAGV,OACI4D,EAAAA,EAAAA,MAAC0J,EAAAA,GAAQ,CAAA3J,SAAA,EACLpE,EAAAA,EAAAA,KAACgO,EAAAA,GAAS,CAAC7E,MAAOyF,EAAS5C,QAAQJ,EAAKK,UAAWnC,WAAYA,EAAYS,OAAQA,KACnFvK,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACAM,GAAI,CACAuH,QAAS,OACTgD,WAAY,SACZD,eAAgB,SAChBpK,OAAQ,QACV2D,SAEDwK,EAASnI,QAAUmI,EAASnI,OAAO1D,OAAS,GACzC/C,EAAAA,EAAAA,KAACiP,EAAAA,EAAW,CACRzI,MAAOoI,EAASnI,OAAO,GACvBA,OAAQmI,EAASnI,OACjBC,QAASkI,EAAS5C,UAClB5D,WAAY,CACR3H,OAAQ,OACRE,UAAW,OACXuD,MAAO,WAIflE,EAAAA,EAAAA,KAACkP,EAAAA,EAAS,CAAC1L,KAAM2L,EAAAA,kBAGzBnP,EAAAA,EAAAA,KAACmO,EAAAA,GAAS,CAACC,KAAI,YAAAhO,OAAcwO,EAAS5C,QAAQJ,EAAKK,WAAaoC,KAAMlB,MAC/D,C,kJCrFnB,MAkGA,EAlGkBvN,IACd,MAAM,KAAEwP,EAAI,OAAE7E,EAAM,WAAET,EAAU,eAAE6B,GAAmB/L,GAC/C,KAAEgM,EAAI,EAAE7E,IAAMC,EAAAA,EAAAA,MAEpB,IAAKoI,EACD,OAAO,KAGX,MAAMvD,EACFuD,EAAKvP,SAAWuP,EAAKvP,QAAQkD,OACvBqM,EAAKvP,QAAQoD,KAAI,CAAC4K,EAAGrB,KAEbxM,EAAAA,EAAAA,KAAC0M,EAAAA,EAAoB,CAEjB7M,QAASgO,EACTlC,eAAgBA,EAChBM,SAAUL,EAAKK,UAHV4B,EAAEL,QAOnB,GAEJL,EAAgB,CAClB,CACIC,MAAOrG,EAAE,eACTsG,MAAO+B,EAAKC,iBAEhB,CACIjC,MAAOrG,EAAE,mBACTsG,MAAO+B,EAAKE,iBAEhB,CACIlC,MAAOrG,EAAE,aACTsG,OACIhJ,EAAAA,EAAAA,MAAAgE,EAAAA,SAAA,CAAAjE,SAAA,CACKgL,EAAKG,UAAU,KAACvP,EAAAA,EAAAA,KAAA,SAAAoE,SAAQ2C,EAAE,gBAIvC,CACIqG,MAAOrG,EAAE,cACTsG,OACIhJ,EAAAA,EAAAA,MAAAgE,EAAAA,SAAA,CAAAjE,SAAA,CACKgL,EAAKI,WAAW,KAACxP,EAAAA,EAAAA,KAAA,SAAAoE,SAAQ2C,EAAE,gBAIxC,CACIqG,MAAOrG,EAAE,WACTsG,MAAOxB,GAEX,CACIuB,MAAOrG,EAAE,UACTsG,MAAO+B,EAAKK,UAAU7D,EAAKK,WAE/B,CACImB,MAAOrG,EAAE,eACTsG,OACIhJ,EAAAA,EAAAA,MAAC2E,EAAAA,EAAI,CAAC+F,KAAI,oCAAA3O,OAAsCgP,EAAKN,OAAShK,OAAO,SAAQV,SAAA,CACxEgL,EAAKN,MAAM,QAEZ9O,EAAAA,EAAAA,KAACgP,EAAAA,EAAa,CAAChF,KAAK,QAAQzJ,GAAI,CAAE2H,cAAe,SAAUhE,MAAO,SAAUzD,OAAQ,iBAMpG,OACI4D,EAAAA,EAAAA,MAAC0J,EAAAA,GAAQ,CAAA3J,SAAA,EACLpE,EAAAA,EAAAA,KAACgO,EAAAA,GAAS,CAAC7E,MAAOiG,EAAKpD,QAAQJ,EAAKK,UAAWnC,WAAYA,EAAYS,OAAQA,KAC/EvK,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACAM,GAAI,CACAuH,QAAS,OACTgD,WAAY,SACZD,eAAgB,SAChBpK,OAAQ,QACV2D,SAEDgL,EAAK3I,QAAU2I,EAAK3I,OAAO1D,OAAS,GACjC/C,EAAAA,EAAAA,KAACiP,EAAAA,EAAW,CACRzI,MAAO4I,EAAK3I,OAAO,GACnBA,OAAQ2I,EAAK3I,OACbC,QAAS0I,EAAKpD,UACd5D,WAAY,CACR3H,OAAQ,OACRE,UAAW,OACXuD,MAAO,WAIflE,EAAAA,EAAAA,KAACkP,EAAAA,EAAS,CAAC1L,KAAMkM,EAAAA,cAGzB1P,EAAAA,EAAAA,KAACmO,EAAAA,GAAS,CAACC,KAAI,QAAAhO,OAAUgP,EAAKpD,QAAQJ,EAAKK,WAAaoC,KAAMlB,MACvD,C,8FCnGnB,MA8EA,EA9EiBvN,IACb,MAAM,IAAE+P,EAAG,OAAEpF,EAAM,WAAET,EAAU,eAAE6B,GAAmB/L,GAC9C,KAAEgM,EAAI,EAAE7E,IAAMC,EAAAA,EAAAA,MAEpB,IAAK2I,EACD,OAAO,KAGX,MAAMpD,EACFoD,EAAIpD,SAAWoD,EAAIpD,QAAQxJ,OACrB4M,EAAIpD,QAAQtJ,KAAI,CAACpD,EAAS2M,KAElBxM,EAAAA,EAAAA,KAAC0M,EAAAA,EAAoB,CAEjB7M,QAASA,EACT8L,eAAgBA,EAChBM,SAAUL,EAAKK,UAHVpM,EAAQ2N,QAOzB,GAEJL,EAAgB,CAClB,CACIC,MAAOrG,EAAE,QACTsG,MAAOsC,EAAIC,KAAK3M,KAAK4M,GAAO9I,EAAE8I,MAElC,CACIzC,MAAOrG,EAAE,WACTsG,MAAOd,MAEPoD,EAAIG,KACF,CACI,CACI1C,MAAOrG,EAAE,QACTsG,OACIhJ,EAAAA,EAAAA,MAAAgE,EAAAA,SAAA,CAAAjE,SAAA,CACKuL,EAAIG,KAAK,KAAC9P,EAAAA,EAAAA,KAAA,SAAAoE,SAAQ2C,EAAE,qBAKrC,MACF4I,EAAII,MACF,CACI,CACI3C,MAAOrG,EAAE,SACTsG,OACIhJ,EAAAA,EAAAA,MAAAgE,EAAAA,SAAA,CAAAjE,SAAA,CACKuL,EAAII,MAAM,KAAC/P,EAAAA,EAAAA,KAAA,SAAAoE,SAAQ2C,EAAE,iBAKtC,MACF4I,EAAIK,OACF,CACI,CACI5C,MAAOrG,EAAE,UACTsG,OACIhJ,EAAAA,EAAAA,MAAAgE,EAAAA,SAAA,CAAAjE,SAAA,CACKuL,EAAIK,OAAO,KAAChQ,EAAAA,EAAAA,KAAA,SAAAoE,SAAQ2C,EAAE,qBAKvC,IAGV,OACI1C,EAAAA,EAAAA,MAAC0J,EAAAA,GAAQ,CAAA3J,SAAA,EACLpE,EAAAA,EAAAA,KAACgO,EAAAA,GAAS,CAAC7E,MAAOwG,EAAI3D,QAAQJ,EAAKK,UAAWnC,WAAYA,EAAYS,OAAQA,KAC9EvK,EAAAA,EAAAA,KAACkO,EAAAA,EAAO,CAAClN,YAAa2O,EAAI1C,IAAKhM,UAAU,UAAUE,YAAY,EAAMD,UAAU,UAC/ElB,EAAAA,EAAAA,KAACmO,EAAAA,GAAS,CAACC,KAAI,OAAAhO,OAASuP,EAAI3D,QAAQJ,EAAKK,WAAaoC,KAAMlB,MACrD,C,yTCnENqB,EAAe,EACfyB,EAAY,EACZC,EAAgB,EAChBC,EAAW,EAqNxB,EAnNcvQ,IACV,MAAM,KAAEgM,EAAI,EAAE7E,IAAMC,EAAAA,EAAAA,MACdoJ,EAAgBxD,OAAOC,QAAOf,EAAAA,EAAAA,OAC9BuE,GAAYC,EAAAA,EAAAA,MACZC,GAAgBC,EAAAA,EAAAA,MAChBC,EAAW7D,OAAOC,QAAO6D,EAAAA,EAAAA,QAExB7Q,EAAS8Q,IAAclP,EAAAA,EAAAA,UAAS2O,EAAc,KAC9ChB,EAAMwB,IAAWnP,EAAAA,EAAAA,UAAS4O,EAAU,KACpCzB,EAAUiC,IAAepP,EAAAA,EAAAA,UAAS8O,EAAc,KAChDZ,EAAKmB,IAAUrP,EAAAA,EAAAA,UAASgP,EAAS,KACjCM,EAAaC,IAAkBvP,EAAAA,EAAAA,UAAS,IACxCwP,EAAQC,IAAazP,EAAAA,EAAAA,eAASC,IAC9ByP,EAAUC,IAAe3P,EAAAA,EAAAA,UAAS2O,GAEnCiB,EAAcA,CAACC,EAASC,KAC1B,MAAM3B,EAAwB,qBAAV2B,EAAwBA,EAAQR,EAEpD,OADAG,EAAUI,GACF1B,GACJ,KAAKO,EACDW,EAAOQ,GACPF,EAAYX,GACZ,MACJ,KAAKP,EACDW,EAAYS,GACZF,EAAYb,GACZ,MACJ,KAAKN,EACDW,EAAQU,GACRF,EAAYf,GACZ,MAEJ,QACIM,EAAWW,GACXF,EAAYhB,GAEpB,EAMEoB,EAAsBA,KACxB,MAAMC,EAAaC,IACbP,EAAWQ,IACXC,EAAYT,EAASU,QAAQJ,GAC7BK,EAAWF,EAAY,EAAI,EAAIT,EAASpO,OAAS,EAAI6O,EAAY,EACvEP,EAAYF,EAASW,GAAU,EAE7BC,EAAkBA,KACpB,MAAMN,EAAaC,IACbP,EAAWQ,IACXC,EAAYT,EAASU,QAAQJ,GAC7BK,EAAWF,EAAY,GAAKT,EAASpO,OAAS,EAAI6O,EAAY,EACpEP,EAAYF,EAASW,GAAU,EAG7BE,EAAoBA,CAACf,EAAQrB,KAC3BA,IAASmB,GACTC,EAAepB,GAEnByB,EAAYJ,EAAQrB,EAAK,EAwBvB+B,EAAeJ,IAEjB,OAD8B,qBAAVA,EAAwBA,EAAQR,GAGhD,KAAKb,EACD,OAAOK,EACX,KAAKJ,EACD,OAAOM,EACX,KAAKR,EACD,OAAOI,EAEX,QACI,OAAOD,EACf,EAEEsB,EAAoBH,IAEtB,OAD8B,qBAAVA,EAAwBA,EAAQR,GAGhD,KAAKZ,EACD,OAAOR,EACX,KAAKO,EACD,OAAOtB,EACX,KAAKqB,EACD,OAAOb,EAEX,QACI,OAAOvP,EACf,EAGJ,OACIG,EAAAA,EAAAA,KAAAqI,EAAAA,SAAA,CAAAjE,UACIC,EAAAA,EAAAA,MAACpE,EAAAA,EAAG,CACA6H,QAAQ,OACRmK,KAAK,WACLnH,WAAW,SACXoH,cAAc,SACdrH,eAAe,aACf3G,MAAM,OACNzD,OAAO,OACP0R,SAAU,EACV5L,SAAS,WAAUnC,SAAA,EAEnBC,EAAAA,EAAAA,MAAC+N,EAAAA,EAAI,CAAC/E,MAAO0D,EAAasB,SAlENC,CAACC,EAAOC,KAEpC,OADAxB,EAAewB,GACPA,GACJ,KAAKrC,EACDe,EAAUvB,GACVyB,EAAYX,GACZ,MACJ,KAAKP,EACDgB,EAAUtC,GACVwC,EAAYb,GACZ,MACJ,KAAKN,EACDiB,EAAU9B,GACVgC,EAAYf,GACZ,MAEJ,QACIa,EAAUrR,GACVuR,EAAYhB,GAEpB,EA8CqE,aAAW,WAAUhM,SAAA,EAC9EpE,EAAAA,EAAAA,KAACyS,EAAAA,EAAG,CAACrF,MAAOrG,EAAE,aAAcsG,MAAOmB,KACnCxO,EAAAA,EAAAA,KAACyS,EAAAA,EAAG,CAACrF,MAAOrG,EAAE,SAAUsG,MAAO4C,KAC/BjQ,EAAAA,EAAAA,KAACyS,EAAAA,EAAG,CAACrF,MAAOrG,EAAE,aAAcsG,MAAO6C,KACnClQ,EAAAA,EAAAA,KAACyS,EAAAA,EAAG,CAACrF,MAAOrG,EAAE,gBAAiBsG,MAAO8C,QAE1CnQ,EAAAA,EAAAA,KAAC0S,EAAAA,EAAY,CACTnO,GAAG,SACHyF,KAAK,QACLzJ,GAAI,CAAE2D,OAAO0E,EAAAA,EAAAA,IAAQ,KAAM+J,GAAI,GAC/BC,QAASzB,EACT0B,cAAY,EACZC,eAAiBC,GACA,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQ/G,QAAQJ,EAAKK,UAEhC+G,aAAcA,CAACpT,EAAOmT,KAClB,MAAM,IAAE9F,GAAqBrN,EAAbqT,GAAQC,EAAAA,EAAAA,GAAKtT,EAAKuT,GAClC,OACIC,EAAAA,EAAAA,eAACnT,EAAAA,GAAGO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACN,UAAU,MAAS+S,GAAQ,IAAEhG,IAAK8F,EAAO9F,MACzC8D,IAAgBvC,IACbxO,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAC6H,QAAQ,QAAQuL,WAAY,EAAGnP,OAAO0E,EAAAA,EAAAA,IAAQ,IAAIxE,UACnDpE,EAAAA,EAAAA,KAACiO,EAAAA,EAAQ,CACLpO,QAASkT,EAAOvF,KAChB1N,aAAc,CACVoE,MAAO,OACPC,OAAQ,oDAKxBnE,EAAAA,EAAAA,KAACsO,EAAAA,EAAU,CAACpO,UAAU,OAAOqO,YAAY3F,EAAAA,EAAAA,IAAQ,IAAKyK,WAAY,EAAEjP,SACzD,OAAN2O,QAAM,IAANA,OAAM,EAANA,EAAQ/G,QAAQJ,EAAKK,YAExB,EAGdqH,YAAcC,IACVvT,EAAAA,EAAAA,KAACwT,EAAAA,GAAShT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACF+S,GAAM,IACV,aAAYxM,EAAE,wBACd0M,YAAUjT,EAAAA,EAAAA,GAAA,GACH+S,EAAOE,eAItBpG,MAAa,OAAN4D,QAAM,IAANA,EAAAA,EAAU,KACjBoB,SAxIWqB,CAACnB,EAAOoB,KAC/BtC,EAAYsC,EAAW5C,EAAY,IAyI1BA,IAAgBvC,GACbxO,EAAAA,EAAAA,KAAC4T,EAAAA,EAAW,CACR/T,QAASA,EACT0K,OAAQwH,EACRpG,eAAgBqG,EAChBlI,WAAY0H,IAEhBT,IAAgBd,GAChBjQ,EAAAA,EAAAA,KAAC6T,EAAAA,EAAQ,CACLzE,KAAMA,EACN7E,OAAQwH,EACRpG,eAAgBqG,EAChBlI,WAAY0H,IAEhBT,IAAgBb,GAChBlQ,EAAAA,EAAAA,KAAC8T,EAAAA,EAAY,CACTlF,SAAUA,EACVrE,OAAQwH,EACRpG,eAAgBqG,EAChBlI,WAAY0H,IAEhBT,IAAgBZ,GAChBnQ,EAAAA,EAAAA,KAAC+T,EAAAA,EAAO,CACJpE,IAAKA,EACLpF,OAAQwH,EACRpG,eAAgBqG,EAChBlI,WAAY0H,IAEhB,SAET,C,yLC1NX,MA4BaxD,EAAapO,IACtB,MAAM,WAAEkK,EAAU,OAAES,EAAM,MAAEpB,EAAK,WAAE6K,GAAepU,EAClD,OACIyE,EAAAA,EAAAA,MAACpE,EAAAA,EAAG,CACAM,IAAEC,EAAAA,EAAAA,GAAA,CACE+F,SAAU,YACPyN,GACL5P,SAAA,CAED0F,IACG9J,EAAAA,EAAAA,KAAC4J,EAAAA,EAAU,CACPC,UAAU,aACV7B,QAAS8B,EACTE,KAAK,QACLzJ,GAAI,CACAgG,SAAU,WACV0D,KAAM,EACNC,KAAKtB,EAAAA,EAAAA,KAAS,GACdnI,QAAQmI,EAAAA,EAAAA,IAAQ,KAClBxE,UAEFpE,EAAAA,EAAAA,KAACiU,EAAAA,EAAmB,OAG5BjU,EAAAA,EAAAA,KAACsO,EAAAA,EAAU,CAAC3F,UAAUC,EAAAA,EAAAA,IAAQ,IAAKsL,WAAW,MAAM3F,YAAY3F,EAAAA,EAAAA,IAAQ,IAAKuL,IAAIvL,EAAAA,EAAAA,IAAQ,IAAIxE,SACxF+E,IAEJoB,IACGvK,EAAAA,EAAAA,KAAC4J,EAAAA,EAAU,CACPC,UAAU,aACV7B,QAASuC,EACTP,KAAK,QACLzJ,GAAI,CACAgG,SAAU,WACViE,MAAO,EACPN,KAAKtB,EAAAA,EAAAA,KAAS,GACdnI,QAAQmI,EAAAA,EAAAA,IAAQ,KAClBxE,UAEFpE,EAAAA,EAAAA,KAACoU,EAAAA,EAAmB,QAG1B,EAIDjG,EAAavO,IACtB,MAAM,KAAEwO,EAAI,KAAEC,GAASzO,EACjByB,GAAQC,EAAAA,EAAAA,KACd,OACItB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACA6H,QAAQ,OACRmK,KAAK,WACL1R,GAAI,CACAgG,SAAU,WACV8N,SAAU,OAEVzJ,OAAQ,EACR0J,YAAajT,EAAMqE,QAAQ6O,QAAQ,KACnCC,aAAc,OAChBpQ,UAEFpE,EAAAA,EAAAA,KAACyU,EAAAA,EAAK,CACFzK,KAAK,QACLzJ,GAAI,CACAoI,UAAUC,EAAAA,EAAAA,IAAQ,IAClB2F,YAAY3F,EAAAA,EAAAA,IAAQ,IACpBrC,SAAU,WACV2D,IAAK,EACLxB,OAAQ,EACRuB,KAAM,EACNO,MAAO,GAEX,gBAAApK,OAAegO,GAAOhK,UAEtBpE,EAAAA,EAAAA,KAAA,SAAAoE,SACKiK,EAAKpL,KAAKyR,IACPrQ,EAAAA,EAAAA,MAACsQ,EAAG,CAAAvQ,SAAA,EACApE,EAAAA,EAAAA,KAAC4U,EAAQ,CAAAxQ,UACLpE,EAAAA,EAAAA,KAAC6U,EAAe,CAAAzQ,SAAEsQ,EAAEtH,WAExBpN,EAAAA,EAAAA,KAAC8U,EAAS,CAAA1Q,UACNpE,EAAAA,EAAAA,KAAC6U,EAAe,CAAAzQ,SAAEsQ,EAAErH,YALlBqH,EAAEtH,cAWtB,EAIDuH,EAAO/U,IAChB,MAAMyB,GAAQC,EAAAA,EAAAA,KACd,OACItB,EAAAA,EAAAA,KAAC+U,EAAAA,GAAQvU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDZ,GAAK,IACTW,GAAI,CAEA,qBAAsB,CAClByU,IAAIpM,EAAAA,EAAAA,IAAQ,KAEhB,kBAAmB,CACfqM,IAAIrM,EAAAA,EAAAA,IAAQ,KAEhB,yBAA0B,CACtBqC,gBAAiB5J,EAAMqE,QAAQ+I,WAAWyG,WAEhD9Q,SAEDxE,EAAMwE,WACA,EAINwQ,EAAYhV,IAEjBI,EAAAA,EAAAA,KAACmV,EAAAA,GAAS3U,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACFZ,GAAK,IACTW,GAAI,CACAkF,MAAQpE,GAAUA,EAAMqE,QAAQoD,KAAKiC,UACrCqK,IAAIxM,EAAAA,EAAAA,IAAQ,IACZV,cAAe,WACfhE,OAAO0E,EAAAA,EAAAA,IAAQ,KACfgC,OAAQ,GACVxG,SAEDxE,EAAMwE,YAKN0Q,EAAalV,IAElBI,EAAAA,EAAAA,KAACmV,EAAAA,GAAS3U,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACFZ,GAAK,IACTW,GAAI,CACA8U,aAAazM,EAAAA,EAAAA,IAAQ,IACrBV,cAAe,WACf0C,OAAQ,GACVxG,SAEDxE,EAAMwE,YAKNyQ,EAAmBjV,IAExBI,EAAAA,EAAAA,KAACsO,EAAAA,GAAU9N,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACHZ,GAAK,IACTW,GAAI,CACAoI,UAAUC,EAAAA,EAAAA,IAAQ,IAClB2F,YAAY3F,EAAAA,EAAAA,IAAQ,IACpBV,cAAe,UACjB9D,SAEDxE,EAAMwE,YAKnB,EA9LkBxE,IAEVI,EAAAA,EAAAA,KAACsV,EAAAA,EAAI,CACD/U,GAAI,CACA6U,GAAI,EACJG,GAAI,EACJ5C,GAAI,EACJ9J,UAAW,SACX3E,MAAO,OACPzD,OAAQ,OAER8F,SAAU,WACVuB,QAAS,OACT0N,SAAU,SACVrD,SAAU,EACV,UAAW,CACPQ,IAAI/J,EAAAA,EAAAA,IAAQ,KAEhB,wBAAyB,CACrB+J,GAAI,IAEVvO,SAEDxE,EAAMwE,U","sources":["components/ui/GameFlag.js","components/ui/GameMap.js","components/ui/GamePicture.js","components/ui/NoPicture.js","components/wiki/CountryCard.js","components/wiki/CountryLabelWithFlag.js","components/wiki/LandmarkCard.js","components/wiki/PeakCard.js","components/wiki/SeaCard.js","components/wiki/Wiki.js","components/wiki/WikiCard.js"],"sourcesContent":["import * as React from 'react';\n\nimport { Box } from '@mui/material';\n\nconst GameFlag = (props) => {\n    const { country, svgOverrides, mask } = props;\n\n    return (\n        <Box\n            component=\"img\"\n            src={`${process.env.PUBLIC_URL}/assets/flagsAndGeo/svg/${country.toLowerCase()}.svg`}\n            sx={{\n                height: 'auto',\n                maxWidth: '60%',\n                maxHeight: '15vh',\n                ...(mask\n                    ? { maskImage: `url(${process.env.PUBLIC_URL}/assets/images/flagMask.svg)`, maskSize: '100% 100%' }\n                    : {}),\n                pointerEvents: 'none',\n                //   border: border ? \"2px solid #fff\" : \"none\",\n                //   boxShadow:\n                //       '0px 5px 22px rgba(0, 0, 0, 0.4), 0px 0px 0px 0.5px rgba(0, 0, 0, 0.3)',\n                //   maxHeight: { xs: 233, md: 167 },\n                //   maxWidth: { xs: 350, md: 250 },\n                ...svgOverrides,\n            }}\n        />\n    );\n};\n\nexport default GameFlag;\n\n/*\n    return (\n\t\t<Box\n\t\t\tcomponent=\"span\"\n            sx={{\n                height: 'auto',\n\t\t\t\t'svg': {\n                \theight: 'auto',\n\t\t\t\t\tmaxWidth: '60%',\n\t\t\t\t\tmaxHeight: '15vh',\n\t\t\t\t\tfilter: 'drop-shadow(0px 5px 5px rgba(0, 0, 0, 0.4))',\n                \t...svgOverrides,\n\t\t\t\t}\n            }}\n\t\t>\n\t\t\t<SvgCountry />\n\t\t</Box>\n\t);\n    return (\n        <Box\n            component=\"img\"\n            src={`${process.env.PUBLIC_URL}/assets/flagsAndGeo/svg/${country}.svg`}\n            sx={{\n                height: 'auto',\n                maxWidth: '60%',\n                maxHeight: '15vh',\n                //   border: border ? \"2px solid #fff\" : \"none\",\n                //   boxShadow:\n                //       '0px 5px 22px rgba(0, 0, 0, 0.4), 0px 0px 0px 0.5px rgba(0, 0, 0, 0.3)',\n                //   maxHeight: { xs: 233, md: 167 },\n                //   maxWidth: { xs: 350, md: 250 },\n                ...svgOverrides,\n            }}\n        />\n    );\n*/\n","import { useTheme } from '@emotion/react';\nimport locationMarker from 'assets/images/location.svg';\n// import { booleanIntersects } from '@turf/boolean-intersects';\nimport geojsonBbox from 'geojson-bbox';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { GeoJSON, MapContainer, Marker, TileLayer } from 'react-leaflet';\n\nimport { Box } from '@mui/system';\n\nimport { parseCoordinates } from 'util/util';\n\nconst GameMap = (props) => {\n    const { game, geoFileName, geoFolder, mapHeight, withLabels, markers } = props;\n    const theme = useTheme();\n    const [mapRef, setMapRef] = useState(undefined);\n    const [extent, setExtent] = useState(undefined);\n    const [markersCoordinates, setMarkersCoordinates] = useState(undefined);\n\n    const center = [51.505, -0.09];\n    const setColor = ({ properties }) => {\n        return { weight: 2, color: theme.palette.success.main };\n    };\n\n    // With loaded json files -->\n    const [entityJson, setEntityJson] = useState(undefined);\n    const [hash, setHash] = useState(undefined);\n\n    useEffect(() => {\n        if (geoFolder && geoFileName) {\n            setEntityJson(undefined);\n            const jsonPath = `${process.env.PUBLIC_URL}/assets/flagsAndGeo/${geoFolder}/${geoFileName}.geo.json`;\n            fetch(`${jsonPath}`)\n                .then((response) => {\n                    if (!response.ok) {\n                        // console.log(response);\n                        throw new Error('Network response was not ok');\n                    }\n                    return response.json();\n                })\n                .then((jsonData) => {\n                    // console.log(jsonData); // it correctly prints json file.\n                    setHash(geoFileName);\n                    setEntityJson(jsonData);\n                    setExtent(geojsonBbox(jsonData));\n                })\n                .catch((err) => {\n                    // console.log('ERR:', err, err.name, err.message);\n                });\n        }\n    }, [geoFolder, geoFileName]);\n\n    useEffect(() => {\n        // console.log(markers);\n        if (markers && markers.length) {\n            const coords = markers.map((m) => parseCoordinates(m));\n            setMarkersCoordinates(coords);\n        } else {\n            setMarkersCoordinates(undefined);\n        }\n    }, [markers]);\n\n    if (geoFolder && geoFileName && !entityJson) {\n        return null;\n    }\n\n    // const extent = geojsonBbox(entityJson);\n    // -- With loaded json files\n\n    // With embeded json files -->\n    // const extent = geojsonBbox(geo_config[geoFileName]);\n    // -- With embeded json files\n\n    const handleFeature = (feature, layer) => {\n        // console.log(\"handleFeature feature\", feature);\n        // console.log(\"handleFeature layer\", layer);\n        if (extent) {\n            mapRef.flyToBounds(\n                [\n                    [extent[1], extent[0]],\n                    [extent[3], extent[2]],\n                ],\n                { animate: false, padding: [30, 30] }\n            );\n        }\n    };\n\n    const addMarker = (e) => {\n        if (!geoFileName) {\n            mapRef?.flyTo(markersCoordinates[0], 6, { animate: false });\n        }\n    };\n\n    const icon = new L.Icon({\n        iconUrl: locationMarker,\n        iconAnchor: new L.Point(12, 20),\n        popupAnchor: null,\n        shadowUrl: null,\n        shadowSize: null,\n        shadowAnchor: undefined,\n        iconSize: new L.Point(24, 24),\n        // className: 'iconTertiary',\n    });\n\n    return (\n        <Box\n            sx={{\n                width: '100%',\n                height: `${mapHeight}`,\n                // minHeight: '240px',\n                '.leaflet-container': {\n                    width: '100%',\n                    height: `${mapHeight}`,\n                    // minHeight: '240px',\n                },\n                '.iconPrimary': {\n                    filter: 'invert(45%) sepia(35%) saturate(7494%) hue-rotate(222deg) brightness(100%) contrast(102%)',\n                },\n                '.iconSecondary': {\n                    filter: 'invert(16%) sepia(93%) saturate(1308%) hue-rotate(225deg) brightness(91%) contrast(98%)',\n                },\n                '.iconTertiary': {\n                    filter: 'invert(74%) sepia(80%) saturate(3204%) hue-rotate(129deg) brightness(97%) contrast(103%)',\n                },\n            }}\n        >\n            <MapContainer\n                // ref={mapRef}\n                id=\"mapSection\"\n                center={center}\n                zoom={markers ? 6 : 1}\n                scrollWheelZoom={true}\n                maxBounds={[\n                    [-80, -200],\n                    [90, 200],\n                ]}\n                maxBoundsViscosity={1.0}\n                whenReady={(e) => {\n                    setMapRef(e.target);\n                }}\n            >\n                {!game?.hideBackgroundMap ? (\n                    withLabels ? (\n                        <TileLayer\n                            // attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                            url=\"https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}\"\n                            // noWrap\n                            maxZoom={16}\n                        />\n                    ) : (\n                        <TileLayer\n                            // attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                            url=\"https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png\"\n                            // noWrap\n                            maxZoom={12}\n                        />\n                    )\n                ) : null}\n                <GeoJSON\n                    // ref={groupRef}\n                    // key={hash(geoFileName)}\n                    // data={geo_config[geoFileName]}\n                    key={hash}\n                    data={entityJson}\n                    style={setColor}\n                    onEachFeature={handleFeature}\n                />\n                {markersCoordinates &&\n                    markersCoordinates?.map((m, i) =>\n                        !!m ? (\n                            <Marker\n                                key={i}\n                                eventHandlers={{\n                                    add: addMarker,\n                                }}\n                                icon={icon}\n                                position={m}\n                            ></Marker>\n                        ) : null\n                    )}\n            </MapContainer>\n        </Box>\n    );\n};\n\nexport default GameMap;\n","import { useTheme } from '@emotion/react';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\n\nimport ArrowCircleLeftIcon from '@mui/icons-material/ArrowCircleLeft';\nimport ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\nimport CloudOffIcon from '@mui/icons-material/CloudOff';\nimport { Box, IconButton, Link, Modal } from '@mui/material';\n\nimport ConfirmDialog from 'components/ui/ConfirmDialog';\nimport { gameAnswer } from 'store/actions';\nimport { pxToRem } from 'util/util';\n\nconst GamePicture = (props) => {\n    const { image, images, altText, inGame, phase } = props;\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const { t } = useTranslation();\n\n    const [displayedImage, setDisplayedImage] = useState(image || images[0]);\n    const [displayedIndex, setDisplayedIndex] = useState(0);\n    const [open, setOpen] = useState(false);\n    const [creditsDisplayed, setCreditsDisplayed] = useState(false);\n    const [confirmDisplayCreditsOpen, setConfirmDisplayCreditsOpen] = useState(false);\n\n    useEffect(() => {\n        setCreditsDisplayed(false);\n        setDisplayedIndex(0);\n        setDisplayedImage(image || images[0]);\n    }, [image, images]);\n\n    useEffect(() => {\n        if (phase === 2) {\n            setCreditsDisplayed(true);\n        }\n    }, [phase]);\n\n    useEffect(() => {\n        if (images) {\n            setDisplayedImage(images[displayedIndex]);\n        }\n    }, [displayedIndex]);\n\n    if (!displayedImage?.src) {\n        return null;\n    }\n\n    const onClickImg = () => {\n        setOpen(true);\n    };\n    const onCloseImg = () => {\n        setOpen(false);\n    };\n    const onClickSeeCredits = () => {\n        setConfirmDisplayCreditsOpen(true);\n    };\n    const handleConfirmDisplayCredits = () => {\n        setCreditsDisplayed(true);\n        setConfirmDisplayCreditsOpen(false);\n        dispatch(gameAnswer(''));\n    };\n    const handleConfirmContinue = () => {\n        setConfirmDisplayCreditsOpen(false);\n    };\n\n    const onPrevious = () => {\n        setDisplayedIndex(displayedIndex - 1);\n    };\n    const onNext = () => {\n        setDisplayedIndex(displayedIndex + 1);\n    };\n\n    if (!navigator.onLine) {\n        return (\n            <Box\n                component=\"span\"\n                sx={{\n                    height: '160px',\n                    width: '240px',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    border: `solid 2px ${theme.palette.secondary.alpha30}`,\n                    backgroundColor: theme.palette.primary.alpha8,\n                    svg: {\n                        color: theme.palette.secondary.alpha30,\n                        height: pxToRem(96),\n                        width: pxToRem(96),\n                        fill: 'currentColor',\n                    },\n                }}\n            >\n                <CloudOffIcon />\n            </Box>\n        );\n    }\n\n    return (\n        <Box display=\"inline-block\" position=\"relative\">\n            <Box\n                component=\"img\"\n                src={displayedImage.src}\n                alt={altText}\n                onClick={onClickImg}\n                sx={{\n                    height: 'auto',\n                    maxHeight: '30vh',\n                    width: 'auto',\n                    maxWidth: '100%',\n                    verticalAlign: 'middle',\n                    cursor: 'zoom-in',\n                    ...props.overrideSx,\n                }}\n            />\n            {inGame ? (\n                <>\n                    <Box\n                        dangerouslySetInnerHTML={creditsDisplayed ? { __html: displayedImage.attribution } : null}\n                        sx={{\n                            bgcolor: 'rgba(0,0,0,0.75)',\n                            position: 'absolute',\n                            bottom: 0,\n                            fontSize: pxToRem(10),\n                            textAlign: 'left',\n                            color: theme.palette.text.attribution,\n                            padding: `${pxToRem(2)} ${pxToRem(4)}`,\n                            'a, button': {\n                                fontSize: pxToRem(10),\n                                color: theme.palette.text.attribution,\n                                textDecorationColor: theme.palette.text.attribution,\n                            },\n                        }}\n                    >\n                        {!creditsDisplayed ? (\n                            <Link component=\"button\" onClick={onClickSeeCredits}>\n                                {t('Display Credit')}\n                            </Link>\n                        ) : null}\n                    </Box>\n                    <ConfirmDialog\n                        open={confirmDisplayCreditsOpen}\n                        title={t('Display Credit?')}\n                        text={t('Display Credit Text')}\n                        leftHandler={handleConfirmDisplayCredits}\n                        leftLabel={t('Display Credit')}\n                        rightHandler={handleConfirmContinue}\n                        rightLabel={t('Continue')}\n                    />\n                </>\n            ) : (\n                <>\n                    <Box\n                        dangerouslySetInnerHTML={{ __html: displayedImage.attribution }}\n                        sx={{\n                            bgcolor: 'rgba(0,0,0,0.75)',\n                            position: 'absolute',\n                            bottom: 0,\n                            fontSize: pxToRem(10),\n                            textAlign: 'left',\n                            color: theme.palette.text.attribution,\n                            padding: `${pxToRem(2)} ${pxToRem(4)}`,\n                            a: {\n                                color: theme.palette.text.attribution,\n                            },\n                        }}\n                    ></Box>\n                    {images?.length > 1 && (\n                        <>\n                            <IconButton\n                                className=\"standalone\"\n                                onClick={onPrevious}\n                                disabled={displayedIndex === 0}\n                                size=\"medium\"\n                                sx={{\n                                    position: 'absolute',\n                                    left: pxToRem(3),\n                                    top: 0,\n                                    height: pxToRem(37),\n                                    opacity: displayedIndex === 0 ? 0.5 : 1,\n                                    svg: {\n                                        fill: '#fff',\n                                    },\n                                }}\n                            >\n                                <ArrowCircleLeftIcon />\n                            </IconButton>\n                            <IconButton\n                                className=\"standalone\"\n                                onClick={onNext}\n                                disabled={displayedIndex === images.length - 1}\n                                size=\"medium\"\n                                sx={{\n                                    position: 'absolute',\n                                    right: pxToRem(3),\n                                    top: 0,\n                                    height: pxToRem(37),\n                                    opacity: displayedIndex === images.length - 1 ? 0.5 : 1,\n                                    svg: {\n                                        fill: '#fff',\n                                    },\n                                }}\n                            >\n                                <ArrowCircleRightIcon />\n                            </IconButton>\n                        </>\n                    )}\n                </>\n            )}\n            <Modal\n                open={open}\n                onClose={onCloseImg}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box\n                    sx={{\n                        bgcolor: 'background.paper',\n                        border: '2px solid #000',\n                        position: 'relative',\n                    }}\n                >\n                    <img\n                        src={displayedImage.src}\n                        alt={altText}\n                        onClick={onCloseImg}\n                        style={{\n                            display: 'block',\n                            height: 'auto',\n                            width: 'auto',\n                            maxWidth: '100%',\n                            maxHeight: 'calc(100vh - 0px)',\n                        }}\n                    />\n                    {/*<IconButton className='standalone'\n                        // aria-label={t('Close')}\n                        onClick={onCloseImg}\n                        color=\"primary.contrast\"\n                        sx={{\n                            backgroundColor: 'black',\n                            position: 'absolute',\n                            right: pxToRem(16),\n                            top: pxToRem(16),\n                        }}\n                    >\n                        <CloseIcon />\n                    </IconButton>*/}\n                </Box>\n            </Modal>\n        </Box>\n    );\n};\n\nexport default GamePicture;\n","import { useTheme } from '@emotion/react';\nimport * as React from 'react';\n\nimport { Box } from '@mui/material';\n\nimport { getGameSVG, pxToRem } from 'util/util';\n\nconst NoPicture = (props) => {\n    const { icon } = props;\n    const theme = useTheme();\n    return (\n        <Box\n            component=\"span\"\n            sx={{\n                height: '160px',\n                width: '240px',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                border: `solid 2px ${theme.palette.secondary.alpha30}`,\n                backgroundColor: theme.palette.primary.alpha8,\n                svg: {\n                    color: theme.palette.secondary.alpha30,\n                    height: pxToRem(96),\n                    width: pxToRem(96),\n                    fill: 'currentColor',\n                },\n            }}\n        >\n            {getGameSVG(icon)}\n        </Box>\n    );\n};\n\nexport default NoPicture;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Box } from '@mui/material';\n\nimport GameFlag from 'components/ui/GameFlag';\nimport GameMap from 'components/ui/GameMap';\nimport { CountryLabelWithFlag } from 'components/wiki/CountryLabelWithFlag';\nimport WikiCard, { CardTable, CardTitle } from 'components/wiki/WikiCard';\nimport { getCountries } from 'data/data';\n\nconst CountryCard = (props) => {\n    const { country, onNext, onPrevious, onClickCountry } = props;\n    const { i18n, t } = useTranslation();\n    const countries = getCountries();\n\n    if (!country) {\n        return null;\n    }\n\n    const region = country.region?.getName(i18n.language);\n    const subregion = country.subregion?.getName(i18n.language);\n\n    const hasSovereignState = !country.independent && country.sovereignState;\n    const sovereignStateCountry = hasSovereignState ? countries[country.sovereignState] : undefined;\n\n    const borders =\n        country.borders && country.borders.length\n            ? country.borders.map((border, index) => {\n                  const cBorder = countries[border];\n\n                  return (\n                      <CountryLabelWithFlag\n                          key={border}\n                          country={cBorder}\n                          onClickCountry={onClickCountry}\n                          language={i18n.language}\n                      />\n                  );\n              })\n            : '';\n    const languages = country.languages ? Object.values(country.languages).join(', ') : '';\n    const currencies = country.currencies\n        ? Object.keys(country.currencies)\n              .map((key) => country.currencies[key].name)\n              .join(', ')\n        : '';\n\n    const cardTableRows = [\n        {\n            label: t('Official Name'),\n            value: country.getOfficialName(i18n.language),\n        },\n        {\n            label: t('ISO codes'),\n            value: `${country.cca2}, ${country.cca3}`,\n        },\n        {\n            label: t('Status'),\n            value: country.independent ? t('independent') : t('dependent'),\n        },\n        ...(hasSovereignState\n            ? [\n                  {\n                      label: t('Sovereign State'),\n                      value: (\n                          <CountryLabelWithFlag\n                              country={sovereignStateCountry}\n                              onClickCountry={onClickCountry}\n                              language={i18n.language}\n                          />\n                      ),\n                  },\n              ]\n            : []),\n        {\n            label: t('Capital'),\n            value: country?.capital?.map((cap) => cap.name[i18n.language]).join(', '),\n        },\n        {\n            label: t('Other Cities'),\n            value: country?.cities?.map((city) => city.name[i18n.language]).join(', '),\n        },\n        {\n            label: t('Region'),\n            value: `${region}${subregion ? `, ${subregion}` : ''}`,\n        },\n        {\n            label: t('Borders'),\n            value: borders,\n        },\n        {\n            label: t('Languages'),\n            value: languages,\n        },\n        {\n            label: t('Currencies'),\n            value: currencies,\n        },\n    ];\n\n    const markers = [\n        ...country?.capital?.map((c) => c.coordinates),\n        // ...country?.cities?.map((c) => c.coordinates),\n    ].filter((c) => !!c);\n\n    return (\n        <WikiCard>\n            <CardTitle title={country.getName(i18n.language)} onPrevious={onPrevious} onNext={onNext} />\n            <Box\n                sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                }}\n            >\n                <GameFlag\n                    country={country.cca3}\n                    svgOverrides={{\n                        filter: 'drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.3))',\n                        maxHeight: '9vh',\n                    }}\n                />\n            </Box>\n            <GameMap\n                markers={markers}\n                geoFileName={country.cca3.toLowerCase()}\n                geoFolder=\"geo\"\n                withLabels={true}\n                mapHeight=\"24vh\"\n            />\n            <CardTable aria={`Country ${country.getName(i18n.language)}`} rows={cardTableRows} />\n        </WikiCard>\n    );\n};\n\nexport default CountryCard;\n","import { useTheme } from '@emotion/react';\n\nimport { Typography } from '@mui/material';\n\nimport GameFlag from 'components/ui/GameFlag';\nimport { TYPE_COUNTRY } from 'components/wiki/Wiki';\nimport { pxToRem } from 'util/util';\n\nexport const CountryLabelWithFlag = (props) => {\n    const { country, onClickCountry, language } = props;\n    const theme = useTheme();\n\n    return (\n        <Typography\n            component=\"a\"\n            display=\"inline-block\"\n            fontSize={pxToRem(14)}\n            lineHeight={pxToRem(18)}\n            onClick={() => {\n                onClickCountry?.(country, TYPE_COUNTRY);\n            }}\n            key={country.cca3}\n            sx={{\n                background: 'transparent',\n                color: theme.palette.text.main,\n                border: 'none',\n                padding: 0,\n                textDecoration: 'underline',\n                textAlign: 'left',\n                pr: '24px',\n                cursor: onClickCountry ? 'pointer' : 'initial',\n                '&:hover': {\n                    color: theme.palette.primary.main,\n                },\n            }}\n        >\n            {country.getName(language)}&nbsp;\n            <GameFlag\n                country={country.cca3}\n                svgOverrides={{\n                    maxWidth: pxToRem(20),\n                    maxHeight: 'none',\n                    width: 'auto',\n                    height: pxToRem(16),\n                    verticalAlign: 'middle',\n                    position: 'absolute',\n                }}\n            />\n        </Typography>\n    );\n};\n","import { CAT_LANDMARK } from 'config/baseConfig';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport { Box, Link } from '@mui/material';\n\nimport GamePicture from 'components/ui/GamePicture';\nimport NoPicture from 'components/ui/NoPicture';\nimport { CountryLabelWithFlag } from 'components/wiki/CountryLabelWithFlag';\nimport WikiCard, { CardTable, CardTitle } from 'components/wiki/WikiCard';\n\nconst LandmarkCard = (props) => {\n    const { landmark, onNext, onPrevious, onClickCountry } = props;\n    const { i18n, t } = useTranslation();\n\n    if (!landmark) {\n        return null;\n    }\n\n    const countries =\n        landmark.country && landmark.country.length\n            ? landmark.country.map((c, index) => {\n                  return (\n                      <CountryLabelWithFlag\n                          key={c.cca3}\n                          country={c}\n                          onClickCountry={onClickCountry}\n                          language={i18n.language}\n                      />\n                  );\n              })\n            : '';\n\n    const cardTableRows = [\n        {\n            label: t('Other Names'),\n            value: landmark.name_complete,\n        },\n        {\n            label: t('Country'),\n            value: countries,\n        },\n        // {\n        //     label: t('Type'),\n        //     value: landmark.type.map((ty) => t(ty)),\n        // },\n        // {\n        //     label: t('Region'),\n        //     value: landmark.getRegion(i18n.language),\n        // },\n        ...(landmark.coord\n            ? [\n                  {\n                      label: t('Coordinates'),\n                      value: (\n                          <Link href={`https://www.google.ca/maps/place/${landmark.coord}`} target=\"_blank\">\n                              {landmark.coord}\n                              &nbsp;\n                              <OpenInNewIcon\n                                  size=\"small\"\n                                  sx={{ verticalAlign: 'middle', width: '0.75em', height: '0.75em' }}\n                              />\n                          </Link>\n                      ),\n                  },\n              ]\n            : []),\n    ];\n\n    return (\n        <WikiCard>\n            <CardTitle title={landmark.getName(i18n.language)} onPrevious={onPrevious} onNext={onNext} />\n            <Box\n                sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    height: '25vh',\n                }}\n            >\n                {landmark.images && landmark.images.length > 0 ? (\n                    <GamePicture\n                        image={landmark.images[0]} // Math.floor(Math.random()*landmark.images.length)\n                        images={landmark.images} // Math.floor(Math.random()*landmark.images.length)\n                        altText={landmark.getName()}\n                        overrideSx={{\n                            height: 'auto',\n                            maxHeight: '25vh',\n                            width: 'auto',\n                        }}\n                    />\n                ) : (\n                    <NoPicture icon={CAT_LANDMARK} />\n                )}\n            </Box>\n            <CardTable aria={`landmark ${landmark.getName(i18n.language)}`} rows={cardTableRows} />\n        </WikiCard>\n    );\n};\n\nexport default LandmarkCard;\n","import { CAT_PEAK } from 'config/baseConfig';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport { Box, Link } from '@mui/material';\n\nimport GamePicture from 'components/ui/GamePicture';\nimport NoPicture from 'components/ui/NoPicture';\nimport { CountryLabelWithFlag } from 'components/wiki/CountryLabelWithFlag';\nimport WikiCard, { CardTable, CardTitle } from 'components/wiki/WikiCard';\n\nconst PeakCard = (props) => {\n    const { peak, onNext, onPrevious, onClickCountry } = props;\n    const { i18n, t } = useTranslation();\n\n    if (!peak) {\n        return null;\n    }\n\n    const countries =\n        peak.country && peak.country.length\n            ? peak.country.map((c, index) => {\n                  return (\n                      <CountryLabelWithFlag\n                          key={c.cca3}\n                          country={c}\n                          onClickCountry={onClickCountry}\n                          language={i18n.language}\n                      />\n                  );\n              })\n            : '';\n\n    const cardTableRows = [\n        {\n            label: t('Other Names'),\n            value: peak.altername_names,\n        },\n        {\n            label: t('Range or Island'),\n            value: peak.range_or_island,\n        },\n        {\n            label: t('Elevation'),\n            value: (\n                <>\n                    {peak.elevation} <small>{t('meters')}</small>\n                </>\n            ),\n        },\n        {\n            label: t('Prominence'),\n            value: (\n                <>\n                    {peak.prominence} <small>{t('meters')}</small>\n                </>\n            ),\n        },\n        {\n            label: t('Country'),\n            value: countries,\n        },\n        {\n            label: t('Region'),\n            value: peak.getRegion(i18n.language),\n        },\n        {\n            label: t('Coordinates'),\n            value: (\n                <Link href={`https://www.google.ca/maps/place/${peak.coord}`} target=\"_blank\">\n                    {peak.coord}\n                    &nbsp;\n                    <OpenInNewIcon size=\"small\" sx={{ verticalAlign: 'middle', width: '0.75em', height: '0.75em' }} />\n                </Link>\n            ),\n        },\n    ];\n\n    return (\n        <WikiCard>\n            <CardTitle title={peak.getName(i18n.language)} onPrevious={onPrevious} onNext={onNext} />\n            <Box\n                sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    height: '25vh',\n                }}\n            >\n                {peak.images && peak.images.length > 0 ? (\n                    <GamePicture\n                        image={peak.images[0]} // Math.floor(Math.random()*peak.images.length)\n                        images={peak.images} // Math.floor(Math.random()*peak.images.length)\n                        altText={peak.getName()}\n                        overrideSx={{\n                            height: 'auto',\n                            maxHeight: '25vh',\n                            width: 'auto',\n                        }}\n                    />\n                ) : (\n                    <NoPicture icon={CAT_PEAK} />\n                )}\n            </Box>\n            <CardTable aria={`Peak ${peak.getName(i18n.language)}`} rows={cardTableRows} />\n        </WikiCard>\n    );\n};\n\nexport default PeakCard;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport GameMap from 'components/ui/GameMap';\nimport { CountryLabelWithFlag } from 'components/wiki/CountryLabelWithFlag';\nimport WikiCard, { CardTable, CardTitle } from 'components/wiki/WikiCard';\n\nconst SeaCard = (props) => {\n    const { sea, onNext, onPrevious, onClickCountry } = props;\n    const { i18n, t } = useTranslation();\n\n    if (!sea) {\n        return null;\n    }\n\n    const borders =\n        sea.borders && sea.borders.length\n            ? sea.borders.map((country, index) => {\n                  return (\n                      <CountryLabelWithFlag\n                          key={country.cca3}\n                          country={country}\n                          onClickCountry={onClickCountry}\n                          language={i18n.language}\n                      />\n                  );\n              })\n            : '';\n\n    const cardTableRows = [\n        {\n            label: t('Type'),\n            value: sea.type.map((ty) => t(ty)),\n        },\n        {\n            label: t('Borders'),\n            value: borders,\n        },\n        ...(sea.area\n            ? [\n                  {\n                      label: t('Area'),\n                      value: (\n                          <>\n                              {sea.area} <small>{t('sq. meters')}</small>\n                          </>\n                      ),\n                  },\n              ]\n            : []),\n        ...(sea.depth\n            ? [\n                  {\n                      label: t('Depth'),\n                      value: (\n                          <>\n                              {sea.depth} <small>{t('meters')}</small>\n                          </>\n                      ),\n                  },\n              ]\n            : []),\n        ...(sea.volume\n            ? [\n                  {\n                      label: t('Volume'),\n                      value: (\n                          <>\n                              {sea.volume} <small>{t('cu. meters')}</small>\n                          </>\n                      ),\n                  },\n              ]\n            : []),\n    ];\n\n    return (\n        <WikiCard>\n            <CardTitle title={sea.getName(i18n.language)} onPrevious={onPrevious} onNext={onNext} />\n            <GameMap geoFileName={sea.key} geoFolder=\"geoSeas\" withLabels={true} mapHeight=\"30vh\" />\n            <CardTable aria={`sea ${sea.getName(i18n.language)}`} rows={cardTableRows} />\n        </WikiCard>\n    );\n};\n\nexport default SeaCard;\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Autocomplete, Box, Tab, Tabs, TextField, Typography } from '@mui/material';\n\nimport GameFlag from 'components/ui/GameFlag';\nimport CountryCard from 'components/wiki/CountryCard';\nimport LandmarkCard from 'components/wiki/LandmarkCard';\nimport PeakCard from 'components/wiki/PeakCard';\nimport SeaCard from 'components/wiki/SeaCard';\nimport { getCountries, getLandmarks, getPeaks, getSeasAndLakes } from 'data/data';\nimport { pxToRem } from 'util/util';\n\nexport const TYPE_COUNTRY = 0;\nexport const TYPE_PEAK = 1;\nexport const TYPE_LANDMARK = 2;\nexport const TYPE_SEA = 3;\n\nconst Wiki = (props) => {\n    const { i18n, t } = useTranslation();\n    const countriesData = Object.values(getCountries());\n    const peaksData = getPeaks();\n    const landmarksData = getLandmarks();\n    const seasData = Object.values(getSeasAndLakes());\n\n    const [country, setCountry] = useState(countriesData[0]);\n    const [peak, setPeak] = useState(peaksData[0]);\n    const [landmark, setLandmark] = useState(landmarksData[0]);\n    const [sea, setSea] = useState(seasData[0]);\n    const [currentType, setCurrentType] = useState(0);\n    const [entity, setEntity] = useState(undefined);\n    const [entities, setEntities] = useState(countriesData);\n\n    const doSetEntity = (_entity, _type) => {\n        const type = typeof _type !== 'undefined' ? _type : currentType;\n        setEntity(_entity);\n        switch (type) {\n            case TYPE_SEA:\n                setSea(_entity);\n                setEntities(seasData);\n                break;\n            case TYPE_LANDMARK:\n                setLandmark(_entity);\n                setEntities(landmarksData);\n                break;\n            case TYPE_PEAK:\n                setPeak(_entity);\n                setEntities(peaksData);\n                break;\n            case TYPE_COUNTRY:\n            default:\n                setCountry(_entity);\n                setEntities(countriesData);\n                break;\n        }\n    };\n\n    const handleChangeEntity = (event, newEntity) => {\n        doSetEntity(newEntity, currentType);\n    };\n    const handleClickPrevious = () => {\n        const currEntity = getCurrentEntity();\n        const entities = getEntities();\n        const currIndex = entities.indexOf(currEntity);\n        const newIndex = currIndex - 1 < 0 ? entities.length - 1 : currIndex - 1;\n        doSetEntity(entities[newIndex]);\n    };\n    const handleClickNext = () => {\n        const currEntity = getCurrentEntity();\n        const entities = getEntities();\n        const currIndex = entities.indexOf(currEntity);\n        const newIndex = currIndex + 1 >= entities.length ? 0 : currIndex + 1;\n        doSetEntity(entities[newIndex]);\n    };\n\n    const handleClickEntity = (entity, type) => {\n        if (type !== currentType) {\n            setCurrentType(type);\n        }\n        doSetEntity(entity, type);\n    };\n    const handleChangeCurrentType = (event, newType) => {\n        setCurrentType(newType);\n        switch (newType) {\n            case TYPE_SEA:\n                setEntity(sea);\n                setEntities(seasData);\n                break;\n            case TYPE_LANDMARK:\n                setEntity(landmark);\n                setEntities(landmarksData);\n                break;\n            case TYPE_PEAK:\n                setEntity(peak);\n                setEntities(peaksData);\n                break;\n            case TYPE_COUNTRY:\n            default:\n                setEntity(country);\n                setEntities(countriesData);\n                break;\n        }\n    };\n    const getEntities = (_type) => {\n        const type = typeof _type !== 'undefined' ? _type : currentType;\n        switch (type) {\n            // OTHER TYPES EVENTUALLY\n            case TYPE_LANDMARK:\n                return landmarksData;\n            case TYPE_SEA:\n                return seasData;\n            case TYPE_PEAK:\n                return peaksData;\n            case TYPE_COUNTRY:\n            default:\n                return countriesData;\n        }\n    };\n    const getCurrentEntity = (_type) => {\n        const type = typeof _type !== 'undefined' ? _type : currentType;\n        switch (type) {\n            // OTHER TYPES EVENTUALLY\n            case TYPE_SEA:\n                return sea;\n            case TYPE_LANDMARK:\n                return landmark;\n            case TYPE_PEAK:\n                return peak;\n            case TYPE_COUNTRY:\n            default:\n                return country;\n        }\n    };\n\n    return (\n        <>\n            <Box\n                display=\"flex\"\n                flex=\"0 1 auto\"\n                alignItems=\"center\"\n                flexDirection=\"column\"\n                justifyContent=\"flex-start\"\n                width=\"100%\"\n                height=\"100%\"\n                flexGrow={1}\n                position=\"relative\"\n            >\n                <Tabs value={currentType} onChange={handleChangeCurrentType} aria-label=\"Sections\">\n                    <Tab label={t('Countries')} value={TYPE_COUNTRY} />\n                    <Tab label={t('Peaks')} value={TYPE_PEAK} />\n                    <Tab label={t('Landmarks')} value={TYPE_LANDMARK} />\n                    <Tab label={t('Seas & Lakes')} value={TYPE_SEA} />\n                </Tabs>\n                <Autocomplete\n                    id=\"select\"\n                    size=\"small\"\n                    sx={{ width: pxToRem(300), mt: 2 }}\n                    options={entities}\n                    blurOnSelect\n                    getOptionLabel={(option) => {\n                        return option?.getName(i18n.language);\n                    }}\n                    renderOption={(props, option) => {\n                        const { key, ...restProp } = props;\n                        return (\n                            <Box component=\"li\" {...restProp} key={option.key}>\n                                {currentType === TYPE_COUNTRY && (\n                                    <Box display=\"block\" flexShrink={0} width={pxToRem(36)}>\n                                        <GameFlag\n                                            country={option.cca3}\n                                            svgOverrides={{\n                                                width: '100%',\n                                                filter: 'drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3))',\n                                            }}\n                                        />\n                                    </Box>\n                                )}\n                                <Typography component=\"span\" lineHeight={pxToRem(20)} flexShrink={1}>\n                                    {option?.getName(i18n.language)}\n                                </Typography>\n                            </Box>\n                        );\n                    }}\n                    renderInput={(params) => (\n                        <TextField\n                            {...params}\n                            aria-label={t('Choose from the list')}\n                            inputProps={{\n                                ...params.inputProps,\n                            }}\n                        />\n                    )}\n                    value={entity ?? null}\n                    onChange={handleChangeEntity}\n                />\n                {currentType === TYPE_COUNTRY ? (\n                    <CountryCard\n                        country={country}\n                        onNext={handleClickNext}\n                        onClickCountry={handleClickEntity}\n                        onPrevious={handleClickPrevious}\n                    />\n                ) : currentType === TYPE_PEAK ? (\n                    <PeakCard\n                        peak={peak}\n                        onNext={handleClickNext}\n                        onClickCountry={handleClickEntity}\n                        onPrevious={handleClickPrevious}\n                    />\n                ) : currentType === TYPE_LANDMARK ? (\n                    <LandmarkCard\n                        landmark={landmark}\n                        onNext={handleClickNext}\n                        onClickCountry={handleClickEntity}\n                        onPrevious={handleClickPrevious}\n                    />\n                ) : currentType === TYPE_SEA ? (\n                    <SeaCard\n                        sea={sea}\n                        onNext={handleClickNext}\n                        onClickCountry={handleClickEntity}\n                        onPrevious={handleClickPrevious}\n                    />\n                ) : null}\n            </Box>\n        </>\n    );\n};\n\nexport default Wiki;\n","import { useTheme } from '@emotion/react';\n\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport { Box, Card, IconButton, Table, TableCell, TableRow, Typography } from '@mui/material';\n\nimport { pxToRem } from 'util/util';\n\nconst WikiCard = (props) => {\n    return (\n        <Card\n            sx={{\n                px: 2,\n                py: 2,\n                mt: 2,\n                textAlign: 'center',\n                width: '100%',\n                height: '100%',\n                // boxSizing: 'border-box',\n                position: 'relative',\n                display: 'flex',\n                flexFlow: 'column',\n                flexGrow: 1,\n                '& > div': {\n                    mt: pxToRem(16),\n                },\n                '& > div:first-of-type': {\n                    mt: 0,\n                },\n            }}\n        >\n            {props.children}\n        </Card>\n    );\n};\n\nexport const CardTitle = (props) => {\n    const { onPrevious, onNext, title, sxOverride } = props;\n    return (\n        <Box\n            sx={{\n                position: 'relative',\n                ...sxOverride,\n            }}\n        >\n            {onPrevious && (\n                <IconButton\n                    className=\"standalone\"\n                    onClick={onPrevious}\n                    size=\"small\"\n                    sx={{\n                        position: 'absolute',\n                        left: 0,\n                        top: pxToRem(-8),\n                        height: pxToRem(37),\n                    }}\n                >\n                    <ArrowBackIosNewIcon />\n                </IconButton>\n            )}\n            <Typography fontSize={pxToRem(20)} fontWeight=\"700\" lineHeight={pxToRem(21)} mx={pxToRem(36)}>\n                {title}\n            </Typography>\n            {onNext && (\n                <IconButton\n                    className=\"standalone\"\n                    onClick={onNext}\n                    size=\"small\"\n                    sx={{\n                        position: 'absolute',\n                        right: 0,\n                        top: pxToRem(-8),\n                        height: pxToRem(37),\n                    }}\n                >\n                    <ArrowForwardIosIcon />\n                </IconButton>\n            )}\n        </Box>\n    );\n};\n\nexport const CardTable = (props) => {\n    const { aria, rows } = props;\n    const theme = useTheme();\n    return (\n        <Box\n            display=\"flex\"\n            flex=\"1 1 auto\"\n            sx={{\n                position: 'relative',\n                overflow: 'auto',\n                // boxShadow: 5,\n                border: 1,\n                borderColor: theme.palette.neutral[200],\n                borderRadius: '8px',\n            }}\n        >\n            <Table\n                size=\"small\"\n                sx={{\n                    fontSize: pxToRem(11),\n                    lineHeight: pxToRem(12),\n                    position: 'absolute',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                }}\n                aria-label={`${aria}`}\n            >\n                <tbody>\n                    {rows.map((r) => (\n                        <Row key={r.label}>\n                            <CellProp>\n                                <TypographyTable>{r.label}</TypographyTable>\n                            </CellProp>\n                            <CellValue>\n                                <TypographyTable>{r.value}</TypographyTable>\n                            </CellValue>\n                        </Row>\n                    ))}\n                </tbody>\n            </Table>\n        </Box>\n    );\n};\n\nexport const Row = (props) => {\n    const theme = useTheme();\n    return (\n        <TableRow\n            {...props}\n            sx={{\n                // border: 0,\n                '&:first-of-type td': {\n                    pt: pxToRem(10),\n                },\n                '&:last-child td': {\n                    pb: pxToRem(10),\n                },\n                '&:nth-of-type(even) td': {\n                    backgroundColor: theme.palette.background.tableRow,\n                },\n            }}\n        >\n            {props.children}\n        </TableRow>\n    );\n};\n\nexport const CellProp = (props) => {\n    return (\n        <TableCell\n            {...props}\n            sx={{\n                color: (theme) => theme.palette.text.secondary,\n                px: pxToRem(10),\n                verticalAlign: 'baseline',\n                width: pxToRem(130),\n                border: 0,\n            }}\n        >\n            {props.children}\n        </TableCell>\n    );\n};\n\nexport const CellValue = (props) => {\n    return (\n        <TableCell\n            {...props}\n            sx={{\n                paddingLeft: pxToRem(10),\n                verticalAlign: 'baseline',\n                border: 0,\n            }}\n        >\n            {props.children}\n        </TableCell>\n    );\n};\n\nexport const TypographyTable = (props) => {\n    return (\n        <Typography\n            {...props}\n            sx={{\n                fontSize: pxToRem(14),\n                lineHeight: pxToRem(16),\n                verticalAlign: 'middle',\n            }}\n        >\n            {props.children}\n        </Typography>\n    );\n};\n\nexport default WikiCard;\n"],"names":["props","country","svgOverrides","mask","_jsx","Box","component","src","concat","process","toLowerCase","sx","_objectSpread","height","maxWidth","maxHeight","maskImage","maskSize","pointerEvents","game","geoFileName","geoFolder","mapHeight","withLabels","markers","theme","useTheme","mapRef","setMapRef","useState","undefined","extent","setExtent","markersCoordinates","setMarkersCoordinates","entityJson","setEntityJson","hash","setHash","useEffect","jsonPath","fetch","then","response","ok","Error","json","jsonData","geojsonBbox","catch","err","length","coords","map","m","parseCoordinates","addMarker","e","flyTo","animate","icon","L","iconUrl","locationMarker","iconAnchor","popupAnchor","shadowUrl","shadowSize","shadowAnchor","iconSize","width","filter","children","_jsxs","MapContainer","id","center","zoom","scrollWheelZoom","maxBounds","maxBoundsViscosity","whenReady","target","hideBackgroundMap","TileLayer","url","maxZoom","GeoJSON","data","style","_ref","properties","weight","color","palette","success","main","onEachFeature","handleFeature","feature","layer","flyToBounds","padding","i","Marker","eventHandlers","add","position","image","images","altText","inGame","phase","dispatch","useDispatch","t","useTranslation","displayedImage","setDisplayedImage","displayedIndex","setDisplayedIndex","open","setOpen","creditsDisplayed","setCreditsDisplayed","confirmDisplayCreditsOpen","setConfirmDisplayCreditsOpen","onCloseImg","navigator","onLine","display","alt","onClick","onClickImg","verticalAlign","cursor","overrideSx","_Fragment","dangerouslySetInnerHTML","__html","attribution","bgcolor","bottom","fontSize","pxToRem","textAlign","text","textDecorationColor","Link","onClickSeeCredits","ConfirmDialog","title","leftHandler","handleConfirmDisplayCredits","gameAnswer","leftLabel","rightHandler","handleConfirmContinue","rightLabel","a","IconButton","className","onPrevious","disabled","size","left","top","opacity","svg","fill","ArrowCircleLeftIcon","onNext","right","ArrowCircleRightIcon","Modal","onClose","border","justifyContent","alignItems","secondary","alpha30","backgroundColor","primary","alpha8","CloudOffIcon","getGameSVG","_country$region","_country$subregion","_country$capital","_country$cities","_country$capital2","onClickCountry","i18n","countries","getCountries","region","getName","language","subregion","hasSovereignState","independent","sovereignState","sovereignStateCountry","borders","index","cBorder","CountryLabelWithFlag","languages","Object","values","join","currencies","keys","key","name","cardTableRows","label","value","getOfficialName","cca2","cca3","capital","cap","cities","city","c","coordinates","WikiCard","CardTitle","GameFlag","GameMap","CardTable","aria","rows","Typography","lineHeight","TYPE_COUNTRY","background","textDecoration","pr","landmark","name_complete","coord","href","OpenInNewIcon","GamePicture","NoPicture","CAT_LANDMARK","peak","altername_names","range_or_island","elevation","prominence","getRegion","CAT_PEAK","sea","type","ty","area","depth","volume","TYPE_PEAK","TYPE_LANDMARK","TYPE_SEA","countriesData","peaksData","getPeaks","landmarksData","getLandmarks","seasData","getSeasAndLakes","setCountry","setPeak","setLandmark","setSea","currentType","setCurrentType","entity","setEntity","entities","setEntities","doSetEntity","_entity","_type","handleClickPrevious","currEntity","getCurrentEntity","getEntities","currIndex","indexOf","newIndex","handleClickNext","handleClickEntity","flex","flexDirection","flexGrow","Tabs","onChange","handleChangeCurrentType","event","newType","Tab","Autocomplete","mt","options","blurOnSelect","getOptionLabel","option","renderOption","restProp","_objectWithoutProperties","_excluded","_createElement","flexShrink","renderInput","params","TextField","inputProps","handleChangeEntity","newEntity","CountryCard","PeakCard","LandmarkCard","SeaCard","sxOverride","ArrowBackIosNewIcon","fontWeight","mx","ArrowForwardIosIcon","overflow","borderColor","neutral","borderRadius","Table","r","Row","CellProp","TypographyTable","CellValue","TableRow","pt","pb","tableRow","TableCell","px","paddingLeft","Card","py","flexFlow"],"sourceRoot":""}