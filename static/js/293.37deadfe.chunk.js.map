{"version":3,"file":"static/js/293.37deadfe.chunk.js","mappings":"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","sources":["components/game/GameEnd.js","../node_modules/@mui/material/LinearProgress/LinearProgress.js","components/game/GameProgress.js","../node_modules/@mui/icons-material/esm/Info.js","../node_modules/@mui/icons-material/esm/CheckCircle.js","components/game/GameButton.js","model/game/Question.js","components/game/GameQuestion.js","components/game/Game.js"],"sourcesContent":["import { useTheme } from '@emotion/react';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\n\nimport { Stack, Typography } from '@mui/material';\n\nimport FunTypo from 'components/ui/FunTypo';\nimport MainButton from 'components/ui/MainButton';\nimport { getRegions } from 'data/data';\nimport { GameUtil } from 'model/game/GameUtil';\nimport { reStartGame } from 'store/actions';\nimport { useCurrentGame, useGameCategory, useGameConfig } from 'store/selector';\nimport { pxToRem } from 'util/util';\n\nconst styles = {\n    main: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        position: 'relative',\n        margin: `${pxToRem(16)} 0`,\n        flexGrow: 1,\n        width: '100%',\n    },\n    textGameCat: {\n        display: 'block',\n        fontSize: pxToRem(32),\n        lineHeight: pxToRem(40),\n        fontWeight: 800,\n        textAlign: 'center',\n        marginBottom: pxToRem(-8),\n    },\n    textFinalScore: {\n        display: 'block',\n        marginTop: pxToRem(16),\n    },\n};\nconst GameEnd = () => {\n    const dispatch = useDispatch();\n    const theme = useTheme();\n    const { t, i18n } = useTranslation();\n    const game = useCurrentGame();\n    const gameConfig = useGameConfig();\n    const gameCategory = useGameCategory();\n    const regions = getRegions();\n    const region = regions[game.region];\n\n    const handleClickPlayAgain = () => {\n        dispatch(reStartGame());\n    };\n\n    return (\n        <Stack {...styles.main}>\n            <Typography component=\"span\" color=\"primary\" {...styles.textGameCat}>\n                {gameCategory?.name[i18n.language]}\n            </Typography>\n            <Typography component=\"span\" color=\"secondary\" {...styles.textGameCat}>\n                {region ? region[i18n.language] : t('World')}\n            </Typography>\n            <Typography component=\"span\" color=\"success.main\" {...styles.textGameCat}>\n                {t(gameConfig?.difficultyLevels.find((d) => d.key === game.difficultyLevel).name)}\n            </Typography>\n\n            {!GameUtil.isFlashcard(game) && (\n                <>\n                    <Typography {...styles.textFinalScore}>\n                        <FunTypo\n                            text={t('Final_Score_1')}\n                            color={theme.palette.text.title.replace('#', '')}\n                            stroke={true}\n                            strokeWidth={pxToRem(2)}\n                            distance={pxToRem(4)}\n                            sx={{\n                                display: 'block',\n                                fontSize: pxToRem(64),\n                                lineHeight: pxToRem(72),\n                                fontWeight: 800,\n                                textAlign: 'center',\n                                mb: pxToRem(-32),\n                            }}\n                        />\n                        <FunTypo\n                            text={t('Final_Score_2')}\n                            color={theme.palette.text.title.replace('#', '')}\n                            stroke={false}\n                            strokeWidth={pxToRem(2)}\n                            distance={pxToRem(5)}\n                            sx={{\n                                display: 'block',\n                                fontSize: pxToRem(72),\n                                lineHeight: pxToRem(84),\n                                fontWeight: 800,\n                                textAlign: 'center',\n                            }}\n                        />\n                    </Typography>\n                    <Stack\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                        alignItems=\"flex-end\"\n                        direction=\"row\"\n                        sx={{\n                            width: 'auto',\n                            paddingBottom: pxToRem(16),\n                        }}>\n                        <FunTypo\n                            text={game.currentScore}\n                            color={theme.palette.primary.main.replace('#', '')}\n                            stroke={false}\n                            distance={pxToRem(7)}\n                            flexGrow={0}\n                            sx={{\n                                display: 'block',\n                                fontSize: pxToRem(96),\n                                lineHeight: pxToRem(108),\n                                fontWeight: 800,\n                                width: 'auto',\n                            }}\n                        />\n                        <FunTypo\n                            text={'/' + game.questions.length}\n                            color={theme.palette.success.main.replace('#', '')}\n                            stroke={false}\n                            distance={pxToRem(7)}\n                            flexGrow={0}\n                            sx={{\n                                display: 'block',\n                                fontSize: pxToRem(72),\n                                lineHeight: pxToRem(84),\n                                fontWeight: 800,\n                                width: 'auto',\n                            }}\n                        />\n                    </Stack>\n                </>\n            )}\n            <MainButton\n                buttonP={{\n                    color: 'primary',\n                    size: 'large',\n                    onClick: handleClickPlayAgain,\n                }}>\n                {t('Play Again')}\n            </MainButton>\n        </Stack>\n    );\n};\n\nexport default GameEnd;\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, lighten } from '@mui/system/colorManipulator';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { keyframes, css, styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport { getLinearProgressUtilityClass } from \"./linearProgressClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\nconst indeterminate1Keyframe = keyframes`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`;\n\n// This implementation is for supporting both Styled-components v4+ and Pigment CSS.\n// A global animation has to be created here for Styled-components v4+ (https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#12).\n// which can be done by checking typeof indeterminate1Keyframe !== 'string' (at runtime, Pigment CSS transform keyframes`` to a string).\nconst indeterminate1Animation = typeof indeterminate1Keyframe !== 'string' ? css`\n        animation: ${indeterminate1Keyframe} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n      ` : null;\nconst indeterminate2Keyframe = keyframes`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`;\nconst indeterminate2Animation = typeof indeterminate2Keyframe !== 'string' ? css`\n        animation: ${indeterminate2Keyframe} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n      ` : null;\nconst bufferKeyframe = keyframes`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`;\nconst bufferAnimation = typeof bufferKeyframe !== 'string' ? css`\n        animation: ${bufferKeyframe} 3s infinite linear;\n      ` : null;\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', 'bar1', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', 'bar2', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\nconst getColorShade = (theme, color) => {\n  if (theme.vars) {\n    return theme.vars.palette.LinearProgress[`${color}Bg`];\n  }\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  // Fix Safari's bug during composition of different paint.\n  zIndex: 0,\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: getColorShade(theme, color)\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.color === 'inherit' && ownerState.variant !== 'buffer',\n    style: {\n      '&::before': {\n        content: '\"\"',\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'currentColor',\n        opacity: 0.3\n      }\n    }\n  }, {\n    props: {\n      variant: 'buffer'\n    },\n    style: {\n      backgroundColor: 'transparent'\n    }\n  }, {\n    props: {\n      variant: 'query'\n    },\n    style: {\n      transform: 'rotate(180deg)'\n    }\n  }]\n})));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'absolute',\n  marginTop: 0,\n  height: '100%',\n  width: '100%',\n  backgroundSize: '10px 10px',\n  backgroundPosition: '0 -23px',\n  variants: [{\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      opacity: 0.3,\n      backgroundImage: `radial-gradient(currentColor 0%, currentColor 16%, transparent 42%)`\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => {\n    const backgroundColor = getColorShade(theme, color);\n    return {\n      props: {\n        color\n      },\n      style: {\n        backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`\n      }\n    };\n  })]\n})), bufferAnimation || {\n  // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.\n  animation: `${bufferKeyframe} 3s infinite linear`\n});\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles.bar1, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  variants: [{\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      backgroundColor: 'currentColor'\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette[color].main\n    }\n  })), {\n    props: {\n      variant: 'determinate'\n    },\n    style: {\n      transition: `transform .${TRANSITION_DURATION}s linear`\n    }\n  }, {\n    props: {\n      variant: 'buffer'\n    },\n    style: {\n      zIndex: 1,\n      transition: `transform .${TRANSITION_DURATION}s linear`\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: {\n      width: 'auto'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: indeterminate1Animation || {\n      animation: `${indeterminate1Keyframe} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`\n    }\n  }]\n})));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles.bar2, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      '--LinearProgressBar2-barColor': (theme.vars || theme).palette[color].main\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.variant !== 'buffer' && ownerState.color !== 'inherit',\n    style: {\n      backgroundColor: 'var(--LinearProgressBar2-barColor, currentColor)'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant !== 'buffer' && ownerState.color === 'inherit',\n    style: {\n      backgroundColor: 'currentColor'\n    }\n  }, {\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      opacity: 0.3\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      variant: 'buffer'\n    },\n    style: {\n      backgroundColor: getColorShade(theme, color),\n      transition: `transform .${TRANSITION_DURATION}s linear`\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: {\n      width: 'auto'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: indeterminate2Animation || {\n      animation: `${indeterminate2Keyframe} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`\n    }\n  }]\n})));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n  const {\n    className,\n    color = 'primary',\n    value,\n    valueBuffer,\n    variant = 'indeterminate',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const isRtl = useRtl();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\",\n    ...rootProps,\n    ref: ref,\n    ...other,\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","import { useTheme } from '@emotion/react';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { LinearProgress, Stack, Typography } from '@mui/material';\n\nimport FunTypo from 'components/ui/FunTypo';\nimport { GameUtil } from 'model/game/GameUtil';\nimport { useCurrentGame } from 'store/selector';\nimport { pxToRem } from 'util/util';\n\nconst styles = {\n    main: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        width: '100%',\n        margin: `${pxToRem(16)} 0`,\n    },\n    rowText: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: '100%',\n        margin: `${pxToRem(4)} 0`,\n    },\n    textQuestion: {\n        fontSize: pxToRem(18),\n        textAlign: 'right',\n        fontWeight: 700,\n    },\n    containerTextScore: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'row',\n        width: 'auto',\n    },\n    textScoreValue: {\n        display: 'block',\n        fontSize: pxToRem(20),\n        lineHeight: pxToRem(24),\n        fontWeight: 800,\n        width: 'auto',\n    },\n    progress: {\n        flexGrow: 1,\n        marginRight: pxToRem(16),\n        marginLeft: pxToRem(16),\n        width: '100%',\n    },\n};\n\nconst GameProgress = () => {\n    const theme = useTheme();\n    const { t } = useTranslation();\n    const game = useCurrentGame();\n\n    return (\n        <Stack {...styles.main}>\n            <Stack {...styles.rowText}>\n                <Typography {...styles.textQuestion}>\n                    {t('Question')}: {GameUtil.getProgress(game)}\n                </Typography>\n\n                {!GameUtil.isFlashcard(game) && (\n                    <Stack {...styles.containerTextScore}>\n                        <Typography {...styles.textQuestion}>{t('Score')}:</Typography>\n                        &nbsp;\n                        <FunTypo\n                            text={game.currentScore}\n                            color={theme.palette.text.main.replace('#', '')}\n                            stroke={false}\n                            distance={pxToRem(2)}\n                            flexGrow={0}\n                            sx={styles.textScoreValue}\n                        />\n                    </Stack>\n                )}\n            </Stack>\n            <LinearProgress\n                color=\"success\"\n                variant=\"buffer\"\n                value={GameUtil.getProgressValue(game)}\n                valueBuffer={GameUtil.getProgressValueBuffer(game)}\n                sx={styles.progress}\n            />\n        </Stack>\n    );\n};\n\nexport default GameProgress;\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckCircle');","import { useTheme } from '@emotion/react';\r\nimport * as React from 'react';\r\n\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport { SvgIcon, Typography } from '@mui/material';\r\n\r\nimport MainButton from 'components/ui/MainButton';\r\nimport { pxToRem } from 'util/util';\r\n\r\nconst GameButton = (props) => {\r\n    const {\r\n        // text,\r\n        // colorEffect = '000',\r\n        // // stroke = false,\r\n        // distance = pxToRem(3),\r\n        // patternZoom = 2,\r\n        onClick,\r\n        phase,\r\n        choice,\r\n        rightAnswer,\r\n        chosenAnswer,\r\n        isFlag,\r\n        answerAdditionnalText,\r\n    } = props;\r\n    const theme = useTheme();\r\n\r\n    let color = 'primary';\r\n    let icon = undefined;\r\n    if (phase === 2) {\r\n        if (\r\n            (choice?.value ?? choice) === (rightAnswer?.value ?? rightAnswer) &&\r\n            (chosenAnswer?.value ?? chosenAnswer) === (choice?.value ?? choice)\r\n        ) {\r\n            color = 'success';\r\n            icon = <CheckCircleIcon />;\r\n        } else if ((choice?.value ?? choice) === (rightAnswer?.value ?? rightAnswer)) {\r\n            color = 'secondary';\r\n        } else if ((choice?.value ?? choice) === (chosenAnswer?.value ?? chosenAnswer)) {\r\n            color = 'error';\r\n            icon = <CancelIcon />;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MainButton\r\n            buttonP={{\r\n                color: color,\r\n                onClick: onClick,\r\n                variant: isFlag ? 'outlined' : 'contained',\r\n                // variant: 'outlined',\r\n                // variant: isFlag || (phase === 1 && choice !== rightAnswer && chosenAnswer !== choice) ? 'outlined' : 'contained',\r\n                sx: {\r\n                    position: 'relative',\r\n                    ...(color === 'secondary' || color === 'success'\r\n                        ? {\r\n                              outlineOffset: pxToRem(3),\r\n                              outline: `2px solid ${color === 'success' ? theme.palette[color].main : theme.palette.background.rightAnswer}`,\r\n                          }\r\n                        : {}),\r\n                    // ...(phase === 0 ? {\r\n                    // backgroundColor: \"#fff\",\r\n                    // '&:hover': {\r\n                    // \tbackgroundColor: \"rgba(255,255,255,0.5)\",\r\n                    // },\r\n                    // } : {}),\r\n                    textAlign: 'center',\r\n                    // width: isFlag ? `calc(50% - ${pxToRem(8)})` : '100%',\r\n                    width: '100%',\r\n                    ...(isFlag ? { minHeight: '126px', backgroundColor: theme.palette.neutral[50] } : {}),\r\n                    padding: pxToRem(10),\r\n                    cursor: phase === 2 ? 'initial' : 'pointer',\r\n\r\n                    // boxShadow: `2px 6px #${colorEffect}`,\r\n\r\n                    /* '&:after': {\r\n\t\t\t\t\t\tpointerEvents: \"none\",\r\n\t\t\t\t\t\tcontent: '\"\"',\r\n\t\t\t\t\t\tbackground: 'url(\\'data:image/svg+xml;utf8,<svg viewBox=\"0 0 4 4\" width=\"'+(4*patternZoom)+'px\" height=\"'+(4*patternZoom)+'px\"><polygon points=\"0 0 4 4 4 2 2 0\" fill=\"%23'+colorEffect+'\"></polygon><polygon points=\"0 4 2 4 0 2\" fill=\"%23'+colorEffect+'\"></polygon></svg>\\') repeat',\r\n\t\t\t\t\t\t// background: 'url(\\'data:image/svg+xml;utf8,<svg viewBox=\"0 0 6 4\" width=\"'+(6*patternZoom)+'px\" height=\"'+(4*patternZoom)+'px\"><polygon points=\"0 0 6 4 6 3 1.5 0\" fill=\"%23'+colorEffect+'\"></polygon><polygon points=\"0 4 1.5 4 0 3\" fill=\"%23'+colorEffect+'\"></polygon></svg>\\') repeat',\r\n\t\t\t\t\t\tdisplay: \"block\",\r\n\t\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\tleft: \"calc(50% + \"+distance+\")\",\r\n\t\t\t\t\t\ttop: \"calc(50% + \"+distance+\")\",\r\n\t\t\t\t\t\ttransform: \"translate(-50%, -50%)\",\r\n\t\t\t\t\t\tborderRadius: \"12px\",\r\n\t\t\t\t\t\tzIndex: -1,\r\n\t\t\t\t\t} */\r\n                },\r\n                ...(!isFlag && icon\r\n                    ? {\r\n                          endIcon: <SvgIcon fontSize={pxToRem(20)}>{icon}</SvgIcon>,\r\n                      }\r\n                    : {}),\r\n            }}\r\n            typoP={{\r\n                fontSize: pxToRem(20),\r\n                fontWeight: '700',\r\n                lineHeight: pxToRem(26),\r\n            }}\r\n            isFlag={isFlag}\r\n        >\r\n            {props.children}\r\n            {choice === rightAnswer && phase === 2 && answerAdditionnalText ? (\r\n                <>\r\n                    <br />\r\n                    <Typography component=\"sub\" lineHeight=\"1.5\" display=\"block\">\r\n                        {answerAdditionnalText}\r\n                    </Typography>\r\n                </>\r\n            ) : null}\r\n            {isFlag && icon && (\r\n                <SvgIcon\r\n                    fontSize=\"large\"\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        right: pxToRem(8),\r\n                    }}\r\n                >\r\n                    {icon}\r\n                </SvgIcon>\r\n            )}\r\n        </MainButton>\r\n    );\r\n};\r\n\r\nexport default GameButton;\r\n","// import { questionTypes } from 'config/baseConfig';\n\nexport class Question {\n    constructor(obj) {\n        // obj is the parsed json\n        Object.assign(this, obj);\n        // console.log(obj);\n    }\n\n    getRightAnswer() {\n        return this.answer?.value ?? this.answer;\n    }\n    isType(type) {\n        return this.questionTypeKey === type;\n    }\n}\n","import { useTheme } from '@emotion/react';\nimport { t } from 'i18next';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\n\nimport CloseIcon from '@mui/icons-material/Close';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { Box, Card, Grow, IconButton, Modal, Stack, Typography } from '@mui/material';\n\nimport GameButton from 'components/game/GameButton';\nimport GameFlag from 'components/ui/GameFlag';\nimport GameMap from 'components/ui/GameMap';\nimport GamePicture from 'components/ui/GamePicture';\nimport CountryCard from 'components/wiki/CountryCard';\nimport LandmarkCard from 'components/wiki/LandmarkCard';\nimport PeakCard from 'components/wiki/PeakCard';\nimport SeaCard from 'components/wiki/SeaCard';\nimport { getEntityForKey } from 'data/ConfigGeoGo';\nimport { GameUtil } from 'model/game/GameUtil';\nimport { Question } from 'model/game/Question';\nimport { gameAnswer } from 'store/actions';\nimport { useCurrentGame, useGameCategory, useGameConfig } from 'store/selector';\nimport { getGameSVG, getQuestionType, pxToRem } from 'util/util';\n\nconst GameQuestion = () => {\n    const dispatch = useDispatch();\n    const { i18n } = useTranslation();\n    const theme = useTheme();\n    const game = useCurrentGame();\n    const gameCategory = useGameCategory();\n    const gameConfig = useGameConfig();\n\n    const [chosenAnswer, setChosenAnswer] = useState('');\n    const [question, setQuestion] = useState();\n    const [entityCardOpen, setEntityCardOpen] = useState(false);\n\n    // preload images for next Question\n    const nextQuestionImages = () => {\n        const nextQuestion = GameUtil.getNextQuestion(game);\n        // const nextQuestionKey = nextQuestion?.questionTypeKey;\n        if (!nextQuestion) {\n            return null;\n        }\n        if (nextQuestion.hasFlag || nextQuestion.hasAnswerFlag) {\n            const countries =\n                nextQuestion.answerProperty === 'cca3' && nextQuestion.choices\n                    ? nextQuestion.choices.map((choice) => choice.toLowerCase())\n                    : [nextQuestion.key.toLowerCase()];\n            countries.forEach((c) => {\n                var img = new Image();\n                img.src = `${process.env.PUBLIC_URL}/assets/flagsAndGeo/svg/${c.toLowerCase()}.svg`;\n            });\n        } else if (nextQuestion.hasPicture) {\n            var img = new Image();\n            img.src = `${nextQuestion.questionText.src}`;\n        }\n        return null;\n    };\n\n    useEffect(() => {\n        nextQuestionImages();\n        setQuestion(new Question(GameUtil.getQuestion(game)));\n    }, [game.currentTurn]);\n\n    if (!game || !question) {\n        return;\n    }\n    const questionType = getQuestionType(gameConfig.questionTypes, question.questionTypeKey);\n    const phase = game.currentPhase;\n    // console.log(question);\n\n    const handleChoiceClick = (_chosenAnswer) => {\n        if (phase === 1) {\n            setChosenAnswer(_chosenAnswer);\n            dispatch(gameAnswer(_chosenAnswer));\n        }\n    };\n\n    const textReplace = (text, replacements) => {\n        if (!replacements || replacements.length === 0) {\n            return text;\n        }\n        replacements.forEach((rep, i) => {\n            text = text.split('{' + i + '}').join(rep);\n        });\n        return text;\n    };\n\n    const handleClickOpenEntity = (event) => {\n        setEntityCardOpen(true);\n    };\n    const handleCloseEntityCard = (event) => {\n        setEntityCardOpen(false);\n    };\n\n    const entity = getEntityForKey(questionType.entityType, question.key);\n\n    const questionPhrase = (\n        <>\n            <Typography\n                fontSize={pxToRem(20)}\n                fontWeight=\"600\"\n                lineHeight={pxToRem(24)}\n                mb={questionType.questionPhraseInverted ? 0 : pxToRem(16)}\n                mt={questionType.questionPhraseInverted ? pxToRem(16) : 0}\n                sx={{\n                    '&:first-of-type': {\n                        mt: 0,\n                    },\n                    '&:last-child': {\n                        mb: 0,\n                    },\n                }}>\n                {textReplace(questionType.questionPhrase[i18n.language], question.questionPhraseValues)}\n            </Typography>\n            {questionType.questionSubPhrase && (\n                <Typography fontSize={pxToRem(12)} fontWeight=\"400\" lineHeight={pxToRem(12)} mt={pxToRem(12)} mb=\"0\">\n                    {questionType.questionSubPhrase[i18n.language]}\n                </Typography>\n            )}\n        </>\n    );\n\n    const choiceButtons = (\n        <>\n            {GameUtil.isFlashcard(game) ? (\n                <ChoiceButton\n                    game={game}\n                    question={question}\n                    handleChoiceClick={handleChoiceClick}\n                    chosenAnswer={chosenAnswer}\n                    choice={question.answer}\n                    index={1}\n                    isFlag={false}\n                />\n            ) : question.choices ? (\n                question.choices.map((choice, index) => (\n                    <ChoiceButton\n                        key={index}\n                        game={game}\n                        question={question}\n                        handleChoiceClick={handleChoiceClick}\n                        chosenAnswer={chosenAnswer}\n                        choice={choice}\n                        index={index}\n                        isFlag={question.questionTypeKey === 'flag'}\n                    />\n                ))\n            ) : null}\n        </>\n    );\n\n    const getInfoButton = (position) => {\n        return phase === 2 && entity ? (\n            <IconButton\n                aria-label={t('Info')}\n                onClick={handleClickOpenEntity}\n                sx={{\n                    color: theme.palette.text.main,\n                    p: 1.8,\n                    position: 'absolute',\n                    ...(questionType.hasMap || questionType.hasPicture ? { top: pxToRem(8) } : { bottom: 0 }),\n                    right: 0,\n                    zIndex: 2,\n                }}>\n                <InfoIcon />\n            </IconButton>\n        ) : null;\n    };\n\n    // console.log('question render');\n\n    return (\n        <>\n            <Stack\n                alignItems=\"center\"\n                flexDirection=\"column\"\n                justifyContent=\"center\"\n                spacing={2}\n                sx={{\n                    flexGrow: 1,\n                    width: '100%',\n                    position: 'relative',\n                }}>\n                <Grow in={phase > 0} timeout={200} key={question.questionText}>\n                    <Card\n                        sx={{\n                            px: 2,\n                            ...(questionType.hasMap || questionType.hasPicture ? { pt: 3, pb: 2 } : { pt: 4, pb: 4 }),\n                            mt: 1,\n                            textAlign: 'center',\n                            width: '100%',\n                            boxSizing: 'border-box',\n                            position: 'relative',\n                        }}>\n                        {!question.isType('country_map') && (\n                            <Box\n                                sx={{\n                                    display: 'block',\n                                    position: 'absolute',\n                                    top: 0,\n                                    left: 0,\n                                    zIndex: 0,\n                                    width: '100%',\n                                    height: '100%',\n                                    right: 0,\n                                    svg: {\n                                        color: theme.palette.neutral[200],\n                                        height: pxToRem(160),\n                                        width: pxToRem(160),\n                                        fill: 'currentColor',\n                                        position: 'absolute',\n                                        // opacity: 0.1,\n                                        left: pxToRem(10),\n                                        ...(question.isType('country_flag')\n                                            ? { bottom: pxToRem(-5) }\n                                            : { bottom: pxToRem(-30) }),\n                                        transform: 'rotate(-10deg)',\n                                        opacity: 0.5,\n                                    },\n                                }}>\n                                {getGameSVG(gameCategory?.key ?? undefined)}\n                            </Box>\n                        )}\n                        <Box\n                            sx={{\n                                zIndex: 1,\n                                position: 'relative',\n                            }}>\n                            {!questionType.questionPhraseInverted && <>{questionPhrase}</>}\n                            {question.isType('country_flag') ? (\n                                <GameFlag\n                                    country={question.key}\n                                    svgOverrides={{\n                                        width: '90%',\n                                        maxWidth: pxToRem(180),\n                                        maxHeight: pxToRem(100),\n                                        filter: 'drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.3))',\n                                    }}\n                                />\n                            ) : questionType.hasPicture ? (\n                                <>\n                                    <GamePicture\n                                        image={question.questionText} // Math.floor(Math.random() * question.questionText.length)\n                                        altText={t('Peak')}\n                                        inGame={true}\n                                        phase={phase}\n                                    />\n                                    {question.isType('country_landmark') && question.questionAdditionnalText && (\n                                        <Typography\n                                            color=\"success.main\"\n                                            fontSize={pxToRem(24)}\n                                            fontWeight=\"800\"\n                                            lineHeight={pxToRem(28)}\n                                            mt={pxToRem(16)}>\n                                            {phase >= 2 ? question.questionAdditionnalText : '???'}\n                                        </Typography>\n                                    )}\n                                </>\n                            ) : questionType.hasMap ? (\n                                <GameMap\n                                    game={game}\n                                    geoFileName={\n                                        !questionType.mapUseCoordinates\n                                            ? question.isType('sea_map')\n                                                ? question.key\n                                                : question.key.toLowerCase()\n                                            : undefined\n                                    }\n                                    geoFolder={\n                                        !questionType.mapUseCoordinates\n                                            ? question.isType('sea_map')\n                                                ? 'geoSeas'\n                                                : 'geo'\n                                            : undefined\n                                    }\n                                    markers={questionType.mapUseCoordinates ? [question.questionText] : undefined}\n                                    mapHeight=\"25vh\"\n                                />\n                            ) : question.questionFullText || question.questionText ? (\n                                <Typography\n                                    color=\"success.main\"\n                                    fontSize={pxToRem(24)}\n                                    fontWeight=\"800\"\n                                    lineHeight={pxToRem(28)}>\n                                    {question\n                                        ? phase >= 2\n                                            ? question.questionFullText ?? question.questionText\n                                            : question.questionText\n                                        : ''}\n                                </Typography>\n                            ) : null}\n                            {questionType.questionPhraseInverted && <>{questionPhrase}</>}\n                        </Box>\n                        {getInfoButton()}\n                    </Card>\n                </Grow>\n                {question.isType('flag') ? (\n                    <Stack\n                        direction=\"row\"\n                        flexWrap=\"wrap\"\n                        spacing={2}\n                        useFlexGap\n                        sx={{\n                            width: '100%',\n                        }}>\n                        {choiceButtons}\n                    </Stack>\n                ) : (\n                    <>{choiceButtons}</>\n                )}\n            </Stack>\n            {entity && (\n                <Modal\n                    open={entityCardOpen}\n                    onClose={handleCloseEntityCard}\n                    aria-labelledby=\"modal-modal-title\"\n                    aria-describedby=\"modal-modal-description\">\n                    <Box\n                        position=\"relative\"\n                        sx={{\n                            width: '90vw',\n                            height: '80vh',\n                            maxWidth: (theme) => {\n                                return {\n                                    xs: theme.breakpoints.values.sm,\n                                    sm: theme.breakpoints.values.sm,\n                                    md: theme.breakpoints.values.md,\n                                };\n                            },\n                        }}>\n                        {entity.isCountry ? (\n                            <CountryCard country={entity} />\n                        ) : entity.isPeak ? (\n                            <PeakCard peak={entity} />\n                        ) : entity.isLandmark ? (\n                            <LandmarkCard landmark={entity} />\n                        ) : entity.isWater ? (\n                            <SeaCard sea={entity} />\n                        ) : (\n                            <></>\n                        )}\n                        <IconButton\n                            className=\"standalone\"\n                            aria-label={t('Close')}\n                            onClick={handleCloseEntityCard}\n                            color=\"text\"\n                            sx={{\n                                position: 'absolute',\n                                right: pxToRem(16),\n                                top: pxToRem(20),\n                            }}>\n                            <CloseIcon />\n                        </IconButton>\n                    </Box>\n                </Modal>\n            )}\n        </>\n    );\n};\n\nexport default GameQuestion;\n\nconst ChoiceButton = (props) => {\n    const { game, question, handleChoiceClick, chosenAnswer, choice, index, isFlag } = props;\n    const theme = useTheme();\n    const gameConfig = useGameConfig();\n    // console.log(question);\n    const questionType = getQuestionType(gameConfig.questionTypes, question.questionTypeKey);\n    const phase = game.currentPhase;\n    const rightAnswer = question.getRightAnswer();\n    const choiceText = choice?.label ? choice?.label : choice;\n    const choiceValue = choice?.value ? choice?.value : choice;\n    const choiceTextWithInfo = (\n        <>\n            {choiceText}\n            {choice?.additionalLabel && (\n                <>\n                    &nbsp;-&nbsp;<small>{choice?.additionalLabel}</small>\n                </>\n            )}\n        </>\n    );\n    return (\n        <Grow in={phase > 0} timeout={index * 75 + 200} key={question.id + index} easing=\"linear\">\n            <Box width={isFlag ? `calc(50% - 12px)` : '100%'} minHeight={isFlag ? '126px' : 'auto'}>\n                <GameButton\n                    onClick={() => {\n                        handleChoiceClick(choiceValue);\n                    }}\n                    colorEffect={theme.palette.primary.main.replace('#', '')}\n                    key={choiceText + index}\n                    phase={phase}\n                    choice={choiceValue}\n                    rightAnswer={rightAnswer}\n                    chosenAnswer={chosenAnswer}\n                    isFlag={isFlag}\n                    answerAdditionnalText={question.answerAdditionnalText}>\n                    {isFlag ? (\n                        <>\n                            {GameUtil.isFlashcard(game) && phase < 2 ? (\n                                ' * * * '\n                            ) : (\n                                <GameFlag\n                                    country={choiceValue}\n                                    mask={phase < 2 && GameUtil.isExpert(game)}\n                                    svgOverrides={{\n                                        width: '90%',\n                                        maxWidth: pxToRem(180),\n                                        maxHeight: pxToRem(100),\n                                        filter: 'drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.3))',\n                                    }}\n                                />\n                            )}\n                        </>\n                    ) : (\n                        <>\n                            {phase < 2\n                                ? GameUtil.isExpert(game) && questionType.hasExpertAnswerHidden\n                                    ? choiceText[0] + ' * * * ' + choiceText[choiceText.length - 1]\n                                    : GameUtil.isFlashcard(game) && phase < 2\n                                      ? ' * * * '\n                                      : choiceTextWithInfo\n                                : choiceTextWithInfo}\n                        </>\n                    )}\n                </GameButton>\n            </Box>\n        </Grow>\n    );\n};\n","import { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\n\nimport ArrowCircleLeftIcon from '@mui/icons-material/ArrowCircleLeft';\nimport ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\nimport { Box, Stack } from '@mui/material';\n\nimport GameEnd from 'components/game/GameEnd';\nimport GameProgress from 'components/game/GameProgress';\nimport GameQuestion from 'components/game/GameQuestion';\nimport MainButton from 'components/ui/MainButton';\nimport { GameUtil } from 'model/game/GameUtil';\nimport { gameNewQuestion, gameNext, newGame } from 'store/actions';\nimport { useCurrentGame } from 'store/selector';\nimport { pxToRem } from 'util/util';\n\nconst styles = {\n    main: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        width: '100%',\n    },\n};\n\nconst Game = () => {\n    const dispatch = useDispatch();\n    const { t } = useTranslation();\n    const game = useCurrentGame();\n\n    const [isInTransition, setIsInTransition] = useState(false);\n\n    useEffect(() => {\n        if (game.currentPhase === 0 && !isInTransition) {\n            setIsInTransition(true);\n            setTimeout(() => {\n                setIsInTransition(false);\n                dispatch(gameNewQuestion());\n            }, 100);\n        }\n    }, [game, isInTransition, dispatch]);\n\n    if (!game) {\n        return null;\n    }\n\n    const phase = game.currentPhase;\n    const isEnd = GameUtil.getIsEnd(game);\n\n    const handleNext = () => {\n        if (phase === 2) {\n            dispatch(gameNext());\n        }\n    };\n    const handleClickHome = () => {\n        dispatch(newGame());\n    };\n\n    // console.log('game render');\n\n    return (\n        <Box {...styles.main} flexGrow=\"1\">\n            {isEnd ? (\n                <GameEnd />\n            ) : (\n                <>\n                    <GameProgress />\n                    <GameQuestion />\n                </>\n            )}\n            <Box {...styles.main} margin={`${pxToRem(24)} 0`}>\n                {isEnd ? (\n                    <MainButton\n                        buttonP={{\n                            color: 'success',\n                            size: 'large',\n                            onClick: handleClickHome,\n                            startIcon: <ArrowCircleLeftIcon />,\n                        }}>\n                        {t('Home')}\n                    </MainButton>\n                ) : (\n                    <MainButton\n                        buttonP={{\n                            color: 'success',\n                            size: 'large',\n                            disabled: phase < 2,\n                            onClick: handleNext,\n                            endIcon: <ArrowCircleRightIcon />,\n                        }}\n                        typoP={{\n                            fontSize: pxToRem(20),\n                            fontWeight: '700',\n                        }}>\n                        {t(GameUtil.getNextKeyLabel(game))}\n                    </MainButton>\n                )}\n            </Box>\n        </Box>\n    );\n};\n\nexport default Game;\n"],"names":["styles","main","display","alignItems","flexDirection","justifyContent","position","margin","concat","pxToRem","flexGrow","width","textGameCat","fontSize","lineHeight","fontWeight","textAlign","marginBottom","textFinalScore","marginTop","GameEnd","dispatch","useDispatch","theme","useTheme","t","i18n","useTranslation","game","useCurrentGame","gameConfig","useGameConfig","gameCategory","useGameCategory","region","getRegions","_jsxs","Stack","_objectSpread","children","_jsx","Typography","component","color","name","language","difficultyLevels","find","d","key","difficultyLevel","GameUtil","isFlashcard","_Fragment","FunTypo","text","palette","title","replace","stroke","strokeWidth","distance","sx","mb","direction","paddingBottom","currentScore","primary","questions","length","success","MainButton","buttonP","size","onClick","handleClickPlayAgain","reStartGame","_excluded","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","indeterminate1Keyframe","keyframes","_taggedTemplateLiteral","indeterminate1Animation","css","indeterminate2Keyframe","indeterminate2Animation","bufferKeyframe","bufferAnimation","getColorShade","vars","LinearProgress","mode","lighten","darken","LinearProgressRoot","styled","slot","overridesResolver","props","ownerState","root","capitalize","variant","memoTheme","_ref","overflow","height","zIndex","colorAdjust","variants","Object","entries","filter","createSimplePaletteValueFilter","map","_ref2","style","backgroundColor","_ref3","content","left","top","right","bottom","opacity","transform","LinearProgressDashed","dashed","_ref4","backgroundSize","backgroundPosition","backgroundImage","_ref5","animation","LinearProgressBar1","bar","bar1","bar1Indeterminate","bar1Determinate","bar1Buffer","_ref6","transition","transformOrigin","_ref7","_ref8","_ref9","LinearProgressBar2","bar2","bar2Indeterminate","bar2Buffer","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","React","inProps","ref","useDefaultProps","className","value","valueBuffer","other","_objectWithoutProperties","classes","slots","composeClasses","getLinearProgressUtilityClass","useUtilityClasses","isRtl","useRtl","rootProps","inlineStyles","undefined","Math","round","process","clsx","role","rowText","textQuestion","containerTextScore","textScoreValue","progress","marginRight","marginLeft","GameProgress","getProgress","getProgressValue","getProgressValueBuffer","createSvgIcon","phase","choice","rightAnswer","chosenAnswer","isFlag","answerAdditionnalText","icon","_choice$value","_rightAnswer$value","_chosenAnswer$value","_choice$value2","_choice$value3","_rightAnswer$value2","_choice$value4","_chosenAnswer$value2","CheckCircleIcon","CancelIcon","outlineOffset","outline","background","minHeight","neutral","padding","cursor","endIcon","SvgIcon","typoP","Question","constructor","obj","assign","this","getRightAnswer","_this$answer$value","_this$answer","answer","isType","type","questionTypeKey","GameQuestion","_gameCategory$key","_question$questionFul","setChosenAnswer","useState","question","setQuestion","entityCardOpen","setEntityCardOpen","useEffect","nextQuestionImages","nextQuestion","getNextQuestion","hasFlag","hasAnswerFlag","answerProperty","choices","toLowerCase","forEach","c","Image","src","hasPicture","questionText","getQuestion","currentTurn","questionType","getQuestionType","questionTypes","currentPhase","handleChoiceClick","_chosenAnswer","gameAnswer","handleClickOpenEntity","event","handleCloseEntityCard","entity","getEntityForKey","entityType","questionPhrase","questionPhraseInverted","mt","replacements","questionPhraseValues","rep","i","split","join","questionSubPhrase","textReplace","choiceButtons","ChoiceButton","index","spacing","Grow","in","timeout","Card","px","hasMap","pt","pb","boxSizing","Box","svg","fill","getGameSVG","GameFlag","country","svgOverrides","maxWidth","maxHeight","GamePicture","image","altText","inGame","questionAdditionnalText","GameMap","geoFileName","mapUseCoordinates","geoFolder","markers","mapHeight","questionFullText","IconButton","p","InfoIcon","flexWrap","useFlexGap","Modal","open","onClose","xs","breakpoints","values","sm","md","isCountry","CountryCard","isPeak","PeakCard","peak","isLandmark","LandmarkCard","landmark","isWater","SeaCard","sea","CloseIcon","choiceText","label","choiceValue","choiceTextWithInfo","additionalLabel","easing","GameButton","colorEffect","mask","isExpert","hasExpertAnswerHidden","id","Game","isInTransition","setIsInTransition","setTimeout","gameNewQuestion","isEnd","getIsEnd","handleClickHome","newGame","startIcon","ArrowCircleLeftIcon","disabled","handleNext","gameNext","ArrowCircleRightIcon","getNextKeyLabel"],"sourceRoot":""}